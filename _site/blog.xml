<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>KHstats</title>
<link>www.khstats.com/blog.html</link>
<atom:link href="www.khstats.com/blog.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Mon, 14 Aug 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>A Biostatistics PhD Application Notebook [with Statement of Purpose]</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/phd-apps/index.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>A minor life update – <strong>I applied to Biostatistics PhD programs last fall!</strong> And, a major life update– <strong>I’m moving to Seattle to attend the University of Washington (UW)’s program next month</strong>. I’m super excited (and nervous) to begin. Since applications are opening up for next year, I thought I’d share what the process of deciding to apply, actually applying, and deciding on a program was like for me.</p>
</blockquote>
<section id="background-and-faqs" class="level1">
<h1>Background and FAQs</h1>
<p>I was in a somewhat uncommon situation when I applied in Fall 2022 for Fall 2023 matriculation to Biostatistics PhD programs. I received my MS in Biostatistics in 2018 and have been working in academic medical research since. Because of this, I had many academic biostatistician colleagues and friends to consult about my application. Since not everyone has this opportunity, I thought I’d pass on what was told to me, especially the advice I was given on writing my statement of purpose (SOP). <strong>I found the SOP advice so helpful that I’ve publicly shared mine in this <a href="https://docs.google.com/document/d/1Ex3nUpPqc8CCWTnMKeyRUDnUF_C9GOriJBtY-47eASg/edit?usp=sharing">Google Doc</a></strong> and added advice I received in the comments.</p>
<p>I am by no means an expert at what biostatistics graduate programs are looking for, and this is not a comprehensive post on applying to (biostatistics) graduate school. For more general and thorough information, I recommend Lucy Lai’s post on <a href="https://lucy-lai.com/blog/gradapps">applying to graduate programs</a> and Simon Couch’s post on <a href="https://www.simonpcouch.com/blog/apply-to-stats-grad-school">applying to statistics and biostatistics graduate programs</a>. Nonetheless, perhaps some of you might find my experience useful, or you might be able to pass it on to a future applicant who will find it useful!</p>
<section id="do-you-need-a-phd-to-be-successful-in-biostatistics" class="level3">
<h3 class="anchored" data-anchor-id="do-you-need-a-phd-to-be-successful-in-biostatistics">Do you need a PhD to be successful in biostatistics?</h3>
<p>A question I’m frequently asked from students and early-career biostatisticians is whether I feel a PhD is necessary because of a “ceiling” in biostatistics. My answer was and still is: a PhD is absolutely <em>not</em> necessary. In fact, for a while, I was resistant to the idea of pursuing one. It’s a huge financial and personal commitment, and it’s worth carefully examining whether it’s the right decision for you, now or ever.</p>
<p>I wholeheartedly believe I could have been fulfilled intellectually and financially in Masters-level statistician/data science jobs forever. There are many interesting roles in both industry and academic research. Some are heavily programming related, some are much more statistics-heavy, and other roles involve supervision/management as the primary form of career progression. A (bio)statistics degree is extremely versatile because you can pivot to areas such as data engineering, software writing, data reporting/querying/interpreting, and more. There have been multiple times over the past five years that I’ve seriously considered trying out data journalism and/or data visualization roles.</p>
<p>However, I <em>really</em> love studying and teaching causal inference and statistics. Beginning around Spring 2022, I had a nagging feeling that it might be the right time in my life to deeply learn many concepts I’ve struggled to learn for years without formal coursework and training. I wanted to learn these concepts not because I particularly want to develop new methods as an academic researcher, or to make lots of money in industry, but rather because I see huge gaps in the statistical and epidemiological methods which are available and what are actually being used in applied research. I know I will feel fulfilled the rest of my career if I can work on improving these gaps, either through education, scientific communication, or mentorship.</p>
</section>
<section id="whyd-you-take-five-years-off-before-starting-your-phd" class="level3">
<h3 class="anchored" data-anchor-id="whyd-you-take-five-years-off-before-starting-your-phd">Why’d you take five years off before starting your PhD?</h3>
<p>The other questions I’ve been asked are whether it was intentional to take “so much time” off and/or whether I’m glad I waited to go back for my PhD. My answer to the first question is that, no, it wasn’t intentional, because five years ago I was not planning to get a PhD. The second question is somewhat difficult to answer before I start my program (it might be really hard to go back to school, I have no idea!), but at the moment, I am super happy I took a break between finishing the MS and starting the PhD. I had plenty of time to narrow and pursue my interests without any pressure and while making good money. I also had the chance to learn work-life balance, which I wasn’t great at until a few years ago. I was able to build up my application through an abundance of research and teaching opportunities, and this allowed me to be a far more competitive applicant than I would’ve been out of my MS. Finally, I learned a lot about myself! I feel so much more emotionally mature and resilient than I was five years ago.</p>
</section>
</section>
<section id="the-application-process" class="level1 page-columns page-full">
<h1>The Application Process</h1>
<p>I’ll try to be as honest as possible about my personal experience in applying. I hope none of the information I provide deters anyone from applying to any schools because they have a different background than me. I’ve been working full-time for five years, so I necessarily have a different background than someone applying during their undergraduate or Masters degree. However, PhD programs accept many, many students directly out of undergraduate and Masters programs, so my successes and failures should not be considered to be predictive of someone else’s.</p>
<section id="assessing-which-schools-to-apply-to" class="level2">
<h2 class="anchored" data-anchor-id="assessing-which-schools-to-apply-to">Assessing which schools to apply to</h2>
<p>I gauged my competitiveness for applying to PhD programs by asking biostatistics faculty I knew from working in the field and/or who taught me during my MS. I also searched Reddit for relevant content (<a href="https://www.reddit.com/r/biostatistics/">r/biostatistics</a>) and used <a href="https://forum.thegradcafe.com/topic/141530-fall-2023-statisticsbiostatistics-applicants-thread/">Gradcafe</a>. (Be wary of anonymous forums on the internet, though!)</p>
<p>From these sources, I gathered that my strengths were probably:</p>
<ul>
<li>having a MS in Biostatistics already</li>
<li>five years of full-time work as a biostatistical consultant</li>
<li>experience as the lead data analyst/statistician on many applied projects</li>
<li>leading some of my own research papers</li>
<li>participating in statistical methodology papers</li>
</ul>
<p>I decided the main weakness of my application would be my lack of mathematics background. Even though I had good grades in my Biostatistics MS program, I had only the minimum math requirements to apply to that program originally (Calc I-III and linear algebra), and my Calc III and linear algebra grades were mediocre, albeit from 10 years ago.</p>
<p>Of note, when I read posts on GradCafe, the general consensus was that U.S. citizens (which I am) have a higher chance of being admitted to programs in the U.S. I don’t have much insight on this, but I think it has to do with funding opportunities. There are many government sponsored funding opportunities which are unfortunately only available to domestic students.</p>
<p>In the end, I applied to eight schools: two schools in New York City (where I currently live) and six other schools which are consistently considered to be top programs for biostatistics. Although I’m well-aware that rankings are imperfect measures of the quality of programs and there are <em>many</em> excellent biostatistics programs that are not top-ranked, I also knew I would only consider leaving NYC and my full-time salary for a few opportunities.</p>
</section>
<section id="application-organization" class="level2">
<h2 class="anchored" data-anchor-id="application-organization">Application organization</h2>
<p>I kept track of all my applications and notes on a Notion page. I made several tables with information about each school’s requirements and created to-do lists for various tasks (e.g.&nbsp;send transcripts). I also wrote out my letter of recommendation (LOR) writers’ names, emails, and titles so that I would have an easier time copying and pasting.</p>
</section>
<section id="application-components" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="application-components">Application Components</h2>
<section id="transcripts" class="level3">
<h3 class="anchored" data-anchor-id="transcripts">Transcripts</h3>
<p>All the schools I applied to required me to submit unofficial transcripts and then manually enter all relevant (science, math, statistics, etc.) coursework into their own application system. I had to enter the course name, course number, number of credits, semester I took it, and grade for each course. This is super time consuming, and I recommend beginning to work on this as soon as applications open. Many of the application portals were glitchy, and this would have been hard to complete at the last minute.</p>
</section>
<section id="gre-scores" class="level3">
<h3 class="anchored" data-anchor-id="gre-scores">GRE Scores</h3>
<p>My GRE scores expired a few years back, but thankfully all the schools I applied to haven’t required them since the pandemic, so I didn’t retake the test. Of note, a few schools said they required them on their website, but did not actually when I inquired with admissions. For one school I only had to self-report my old scores.</p>
</section>
<section id="letters-of-recommendation" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="letters-of-recommendation">Letters of Recommendation</h3>
<p>All schools required three LORs, and most accepted up to four or five. The people I asked to write my LORs were:</p>
<ol type="1">
<li><p>A long-time colleague and mentor who could speak to my research potential for both methods and applied work. They are mid-career and known within the field of causal inference statistical estimation methods, which is what I want to continue studying.</p></li>
<li><p>A long-time physician collaborator who I’d also worked with on applied projects for 4 years who could talk about my skill set in applied projects.</p></li>
<li><p>My current boss, an academic epidemiologist with strong training in statistical methods. At the time I’d only worked with them for a few months, but they seemed comfortable writing about my scientific potential.</p></li>
<li><p>(Extra letter) My former professor<sup>1</sup> from my applied capstone course during my MS. They are late-career and well-known within the field of biostatistics. They confirmed they could speak to my discipline and aptitude for completing coursework.</p></li>
</ol>
<div class="no-row-height column-margin column-container"><li id="fn1"><p><sup>1</sup>&nbsp;Some schools explicitly request a LOR from a former professor.</p></li></div><p>I think this is general LOR advice, but I only asked individuals who I was pretty sure would write strong letters on my behalf. I tried to strike a balance in people who were recognizable names within the field of biostatistics and who worked with me enough to write about me. Remember to ask your letter-writers early, as well as register early with the schools’ application systems so the writers have plenty of time to upload their letters.</p>
</section>
<section id="curriculum-vitae" class="level3">
<h3 class="anchored" data-anchor-id="curriculum-vitae">Curriculum Vitae</h3>
<p>All of the schools required me to submit a Curriculum Vitae (CV) document. <a href="static/KatherineHoffman_CV_Dec2022.pdf">This</a> is the version I submitted for applications. Depending on your background, sections will look different. I recommend having someone within academia, preferably (bio)statistics or related, review your CV. If you are a student, you should also take advantage of your university’s career center resources to review.</p>
<p>Additional feedback I received for this which may be relevant to someone else:</p>
<ul>
<li><p>List out all details/roles for classes you served as Teaching Assistant.</p></li>
<li><p>List out blog posts under “Scientific Communication” and try to illustrate their impact. I’ve been blogging for years and have a Google Analytics attached to my site, so I was told to add the number of views.</p></li>
</ul>
</section>
<section id="the-statement-of-purpose-sop" class="level3">
<h3 class="anchored" data-anchor-id="the-statement-of-purpose-sop">The Statement of Purpose (SOP)</h3>
<p>This was by far the hardest part of the application for me! There’s a lot of opinions surrounding the statement of purpose for Biostatistics PhDs, from, “it’s very important and the only way to set yourself apart to the application committee,” to, “nobody reads it and it won’t affect your application.” I opted to believe the first set of opinions and took my SOP seriously.</p>
<p>I received a lot of advice on my statement. The most helpful piece of advice I received was that the SOP is not about highlighting qualifications – that’s what the CV does – and qualifications alone do not equate to success in academia. You need drive and motivation, and your SOP is the chance to show that you have it. It is more about your philosophy and research goals than stating what you’ve done so far. Every time you bring up an accomplishment, you should explain to the committee exactly why that’s relevant to your overall goal of pursuing a PhD in biostatistics. If something is not directly relevant to why you want to pursue a PhD or why you’ll be a successful researcher, you should not include it.</p>
<p>I ended up receiving so much advice for this that I decided to publicly post my UW SOP on a <a href="https://docs.google.com/document/d/1Ex3nUpPqc8CCWTnMKeyRUDnUF_C9GOriJBtY-47eASg/edit?usp=sharing">Google Doc</a> with comments. Some other resources I found helpful include these <a href="https://www.csuci.edu/careerdevelopment/services/sample-graduate-school-admissions-essays.pdf">California State Example Essays</a> and <a href="https://lucy-lai.com/blog/gradapps">Lucy Lai’s Personal Statement for her Neuroscience PhD applications</a>. These tweet threads were also useful:</p>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
Writing a statement of purpose (SOP) for PhD admissions – please do not make me read another “as a kid, when I looked at the sky…” <br><br>a thread.
</p>
— Hadas Kress-Gazit (<span class="citation" data-cites="HadasKressGazit">@HadasKressGazit</span>) <a href="https://twitter.com/HadasKressGazit/status/1460261854912073733?ref_src=twsrc%5Etfw">November 15, 2021</a>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
Every year I read a lot of grad school applications from accomplished people that don't give me the info I'm looking for. It feels like a major hidden curriculum thing. So here's (my opinion on) how to write a great Statement of Purpose/Research for a PhD program. 🧵 1/
</p>
— Roman Feiman (<span class="citation" data-cites="RomanFeiman">@RomanFeiman</span>) <a href="https://twitter.com/RomanFeiman/status/1585700225280528385?ref_src=twsrc%5Etfw">October 27, 2022</a>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>If you take only one thing away from my SOP advice: <strong>start writing your SOP early and ask at least one person who has served on an academic application committee, preferably for Biostatistics PhDs, to read your draft to make sure you’re on the right track</strong>. This is the easiest part of your application to control!</p>
</section>
<section id="the-personal-statement" class="level3">
<h3 class="anchored" data-anchor-id="the-personal-statement">The Personal Statement</h3>
<p>Only a few schools required this, and the prompts were related to why your background uniquely adds to your scientific potential. This statement is, of course, very personal to your own background! I wrote about how growing up in a rural Midwest town with my family in blue-collar jobs shaped my understanding of public health and access to education. I also wrote about my work and volunteer experience in low income areas and with underrepresented groups, and how my motivations for improving diversity in the field are driven by my experiences as an underrepresented gender in STEM. This will obviously look very different for any given applicant. I am not posting my personal statement publicly, but if you have a reason you think it’d be helpful to see my personal statement, please email me.</p>
</section>
<section id="application-fees" class="level3">
<h3 class="anchored" data-anchor-id="application-fees">Application Fees</h3>
<p>Almost every school had an $80-130 application fee, paid upon the time of submitting. Make sure to reach out to schools if you have <em>any</em> justification for receiving a fee waiver!</p>
</section>
</section>
<section id="pre-application-review-service-pars" class="level2">
<h2 class="anchored" data-anchor-id="pre-application-review-service-pars">Pre Application Review Service (PARS)</h2>
<p>I sent all my application materials in November to UW’s <a href="https://stat.uw.edu/pre-application-review-service">Pre Application Review Service (PARS)</a> for review by current students. This is an excellent service available to underrepresented genders and minority groups. Not only was I able to get feedback on my application, but I made connections with a statistics PhD student who reviewed my application and a biostatistics PhD student who he subsequently introduced me to via email.</p>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
Our department is offering a pre-application review service (PARS) initiative to provide support and mentorship to PhD applicants from historically marginalized groups. See details here: <a href="https://t.co/0evhEigqrm">https://t.co/0evhEigqrm</a> <a href="https://t.co/xZ0B8LA8Gt">pic.twitter.com/xZ0B8LA8Gt</a>
</p>
— UW Statistics (<span class="citation" data-cites="UWStat">@UWStat</span>) <a href="https://twitter.com/UWStat/status/1574910676556218368?ref_src=twsrc%5Etfw">September 27, 2022</a>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</section>
</section>
<section id="interviews-and-visit-days" class="level1">
<h1>Interviews and visit days</h1>
<p>Applications were due December 1, and I began hearing about interviews the first week of December. My first interview was mid-December (a virtual half-day). The first in-person interview was in mid-January. My last interview was late February (virtual) and in-person visit days for admitted students continued through early April. All in-person visits except for one school were fully funded. I did not attend the unfunded visit day.</p>
<p>I found the interviews stressful to plan around because each was announced only a few weeks before the day(s) of the interview. I had a lot of anxiety leading up to each interview, however, the questions themselves were easy to answer (with the caveat that I’ve done many interviews and interviewed several biostatistician job candidates over the years, so I had an idea of what to expect). The questions I received were generally along the lines of:</p>
<ul>
<li>Tell me about why you want to do a PhD. Why do you think you need it? What are you hoping to accomplish during and after your PhD?</li>
<li>Why [this school]? Why [city the school is located in]?</li>
<li>Tell me about a time when you had to collaborate with others to get a project done.</li>
<li>What questions do you have about our program or [location of the school]?</li>
</ul>
<p>For many of my answers, I reiterated (sometimes verbatim) sentences from my statement of purpose. I also brought up different research projects I’d done over the years, depending on where the conversation went. The people interviewing you are, above all, trying to assess your fit with the program. I know it is easier said than done, but my takeaway was that it was best to just let the conversation flow. The interviews were usually 30 minutes long, so make sure you have lots of questions prepared for when the interviewer flips the question-asking to you. If you run out of questions about the program, start asking the interviewer about their research or what their favorite things to do are around the university.</p>
<p>Despite the interview questions feeling straightforward to me, the days were EXHAUSTING, both physically and mentally. You essentially have 8am-9pm day(s) with other applicants, students, and faculty, and you have to be “on” the entire day. This experience can be really overwhelming, so go easy on yourself. I recommend writing notes down after each interview day/visit – I kept a long running note on my phone.</p>
</section>
<section id="decision-time" class="level1">
<h1>Decision time</h1>
<p>Of the eight schools I applied to, I was accepted to five. My acceptances and rejections didn’t make a ton of sense to me either way, meaning I was surprised to receive certain acceptances while also receiving rejections from schools I thought I may have a higher chance of getting into. This supported a phrase I heard a lot, “PhD admissions are a bit of a black box.” There are many qualified applicants, and it is hard to discern between applicants by a CV, transcript, and a statement of purpose. Different application committee members will have biases in what they’re looking for (e.g.&nbsp;strong mathematics background vs.&nbsp;research experience) and it’s best not to dwell too much on any particular outcome.</p>
<p>It was a difficult decision for me to choose between programs. I was extremely torn over the idea of leaving the community I have in NYC. However, I could not shake the feeling that my visit to UW had felt overwhelmingly “right.” After a lot of pro-con lists, I decided to go with this gut feeling.</p>
<p>The major choices which affected my decision were location, overall fit of the program/coursework, current students’ relationships within and between cohorts, perceived work-life balance of students and faculty, funding/teaching/research requirements, stipend amount, and number of faculty working on what I wanted to work on (non-parametric causal inference). After I finished my visit days, I set follow-up meetings with professors and the graduate program directors from multiple schools to make sure I understood my options correctly. I made my decision to attend UW at the end of March, about two weeks before the April 15th decision deadline.</p>
</section>
<section id="miscellaneous-notes" class="level1 page-columns page-full">
<h1>Miscellaneous notes</h1>
<p>A few miscellaneous details I learned and thoughts I had throughout the application process:</p>
<section id="admission-rates" class="level2">
<h2 class="anchored" data-anchor-id="admission-rates">Admission rates</h2>
<p>I found it difficult to find admission rates online, but the numbers given at some of my interview/admit days (if I remember correctly) were <em>approximately</em>:</p>
<ul>
<li>250 or so applicants</li>
<li>15-25 interview spots</li>
<li>7-20 spots in the cohort offered</li>
</ul>
<p>The final number of spots in the cohort and process for obtaining that number varied quite a bit by school. A few schools ranked candidates and could only offer a spot to the top 6-7 candidates. Once someone rejected their offer, they moved down the list to offer the next candidate. Other schools accepted a large (~20) number of applicants with the expectation that only a certain percentage would accept their offer. Finally, at least one school I applied to could only offer a fixed number of spots (12), and could not re-offer to another applicant if someone turned down their offer. That school was careful to only give offers to those they <em>really</em> thought might attend.</p>
</section>
<section id="funding" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="funding">Funding</h2>
<p>Most Biostatistics PhD programs will only admit students if they know they can fund them, i.e.&nbsp;pay for tuition and a stipend, for 4-6 years. For the programs I was admitted to, the stipend offers ranged from $36-46,000 per year, pre-tax. A PhD stipend is often described as “enough to live, but not enough to save,” although this will obviously vary by the city’s cost-of-living and the student’s personal financial situation.</p>
<div class="page-columns page-full"><p>I said earlier that a PhD is a huge financial commitment, and the stipend is the main reason why. Even though the amount of money might <em>seem</em> like a lot (it did to me when I was going through my MS degree!), the time you’ll spend earning your PhD is undoubtedly a short-term loss of potential earnings. If you have a strong quantitative background (as most Biostatistics PhD applicants do), a conservative estimate is that this loss could accumulate to over $400,000 in pre-tax income.<sup>2</sup> This estimate is not accounting for the compounding interest you will miss out on in retirement savings (assuming you would put money towards retirement if working full-time). Although the earning potential is higher with a PhD than with an MS, it will still take some time to counteract the short-term loss.</p><div class="no-row-height column-margin column-container"><li id="fn2"><p><sup>2</sup>&nbsp;My calculation for this is (potential salary - stipend) * expected years in PhD.</p></li></div></div>
<p>On that note, if you have multiple funded offers, it is worth asking each program what their policies are regarding internships, part-time work, and freelance consulting work, because all of these are supplemental sources of income. Are any of these types of work allowed or encouraged, and does participating in them affect the stipend amount you receive (beyond potential differences in tax brackets)? The answers vary by program, and sometimes even by student due to differences in funding sources.</p>
</section>
<section id="reaching-out-to-professors-in-advance" class="level2">
<h2 class="anchored" data-anchor-id="reaching-out-to-professors-in-advance">Reaching out to professors in advance</h2>
<p>I did not email any professors before applying, so I unfortunately don’t have much to share on this topic. I doubt it would’ve helped me get into any additional programs, but who knows! It definitely has the potential to be informative and a good networking experience. Lucy Lai includes a template for reaching out to professors in her <a href="https://lucy-lai.com/blog/gradapps">blog post</a>, as does John Muschelli in his post, <a href="https://hopstat.wordpress.com/2020/10/01/some-things-i-wish-i-knew-about-grad-school/">“Some things I wish I knew about Grad School”</a>.</p>
</section>
</section>
<section id="looking-ahead-preparing-for-my-phd-coursework" class="level1">
<h1>Looking ahead, preparing for my PhD coursework</h1>
<p>UW is on the quarter system, so I’ll start classes with a cohort of eight other students at the end of September. This summer I’ve been working, enjoying life sans homework, and trying to remember all the math I’ve forgotten over the years.</p>
<p>I’m refreshing myself on linear algebra using a combination of Khan Academy (I love Sal’s visualizations – I listen on 1.5-2x speed and slow down when he says something that I don’t understand) and <a href="https://www.chegg.com/textbooks/linear-algebra-done-right-3rd-edition-9783319110790-3319110799?preSelection=rent&amp;c_id=sem&amp;utm_source=google&amp;utm_medium=cpc&amp;utm_campaign=tb--long_tail-campaign_googleshoppingpmax&amp;utm_content=&amp;gclid=Cj0KCQjwoeemBhCfARIsADR2QCtzOvpwHTwWyhhjZ551Ez8HeQc2iH94LOR1OS9wunkhrt5PU_-9Ux8aAvhrEALw_wcB&amp;gclsrc=aw.ds"><em>Linear Algebra Done Right</em></a> by Sheldon Axler. The latter is a small textbook which is meant to be a second learning of linear algebra (it’s quite abstract compared to the usual sequence of teaching the subject). This <a href="https://github.com/jubnoske08/linear_algebra">Github repo</a> with solutions to Axler’s exercises is also helpful. I am also brushing up calculus using a mix of Khan Academy, random YouTube videos, and the textbook <a href="https://www.thriftbooks.com/w/advanced-calculus_patrick-m-fitzpatrick/623425/item/12685126/?utm_source=google&amp;utm_medium=cpc&amp;utm_campaign=low_vol_f%2fm%2fs_standard_shopping_customer_aquisition&amp;utm_adgroup=&amp;utm_term=&amp;utm_content=603452145786&amp;gclid=Cj0KCQjwoeemBhCfARIsADR2QCvVNjDm6ZZA30SMj00ghtI6qbOycK_PZMa21bwDg2PdtNeVVe-cfCUaAsGDEALw_wcB#idiq=12685126&amp;edition=7979483"><em>Advanced Calculus</em></a> by Patrick M. Fitzpatrick. This is what I wish I would’ve done before starting my MS degree. 🙂</p>
<p>If you’d like to know more about what my work looked like as an applied biostatistician in medical research, please see my <a href="https://www.khstats.com/blog/ditl/">Day in the Life of a Biostatistician</a> post. I answer common email questions stemming from that post in this <a href="https://www.khstats.com/blog/ditl/ditl-followup">Follow-up post</a>. As always, feel free to email me with questions, clarifications, or suggestions for additional resources to include.</p>
<p>Until next time!</p>
<p>-Kat</p>
<hr>
<blockquote class="blockquote">
<h4 id="acknowledgments" class="anchored" data-anchor-id="looking-ahead-preparing-for-my-phd-coursework"><em>Acknowledgments</em></h4>
<p><em>Deciding to start a PhD program was a huge decision for me, and I am grateful to so many for encouragement and advice over the years. Thank you to <strong>Iván Díaz</strong>, who has taught me an enormous amount about causal inference over the past five years and who has been instrumental in my development as a researcher. Thank you to my former professor <strong>Tom Braun</strong> for convincing me not to drop out of my Biostatistics MS program during my first semester :), and for showing me the importance of empathy and communication in STEM. Thank you to <strong>Bhramar Mukherjee</strong> for consistently vocalizing her belief in my potential and demonstrating what being passionate about your career can look like. Finally, thank you to <strong>Elizabeth Sweeney</strong>, <strong>Sam Adhikari</strong>, <strong>David Lenis</strong>, <strong>Kara Rudolph</strong>, <strong>Alejandro Schuler</strong>, and <strong>Seth Temple</strong> for helpful conversations which contributed in various ways to information shared in this post.</em></p>
</blockquote>


</section>


 ]]></description>
  <category>career</category>
  <guid>www.khstats.com/blog/phd-apps/index.html</guid>
  <pubDate>Mon, 14 Aug 2023 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/phd-apps/img.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Annotated Forest Plots using ggplot2</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/forest-plots/index.html</link>
  <description><![CDATA[ 




<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/mainplot-1.png" class="img-fluid" width="864"></p>
</div>
<p>This post contains a short R code walkthrough to make annotated forest plots like the one shown above. There are packages to make plots like these such as <a href="https://github.com/rdboyes/forester"><code>forester</code></a>, <a href="https://cran.r-project.org/web/packages/forestplot/vignettes/forestplot.html"><code>forestplot</code></a>, and <a href="https://nightingalehealth.github.io/ggforestplot/index.html"><code>ggforestplot</code></a>, but sometimes I still prefer to make my own.</p>
<p>The big picture of this is that we’ll be making three separate <code>ggplot2</code> objects and putting them together with <code>patchwork</code>. You could also use packages like <code>cowplot</code>, <code>gridarrange</code> or <code>ggarrange</code> to put the intermediate plot objects together. You can skip to the end to see the full code.</p>
<hr>
<section id="step-0-load-libraries-and-data" class="level1">
<h1>Step 0: Load libraries and data</h1>
<p>First we will load the necessary libraries and the data set. The data we’ll use for this plot are the effect estimates for 10 Cox regression models. The models, titled A-J, are stored in data sets called <code>res</code> and <code>res_log</code>, stored as csvs on my Github. We’ll combine these data and then begin plotting.</p>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb1-3"></span>
<span id="cb1-4">res_log <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/kathoffman/steroids-trial-emulation/main/output/res_log.csv"</span>)</span>
<span id="cb1-5">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/kathoffman/steroids-trial-emulation/main/output/res.csv"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> res_log <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-8">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename_with</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log."</span>, .), estimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>conf.high) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p.value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_join</span>(res)</span></code></pre></div>
<p>The <code>res</code>ults object contains:</p>
<ul>
<li><code>model</code>: the model label A-J</li>
<li><code>log.estimate</code>: log hazard ratio, since these were Cox regressions</li>
<li><code>log.conf.low</code> and <code>log.conf.high</code>: log hazard ratio 95% confidence intervals</li>
<li><code>estimate</code>: hazard ratio</li>
<li><code>conf.low</code> and <code>conf.high</code>: hazard ratio 95% confidence intervals</li>
<li><code>p.value</code>: corresponding p-value</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(res)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 10
Columns: 8
$ model         &lt;chr&gt; "A", "B", "C", "D", "E", "F", "G", "H", "I", "J"
$ log.estimate  &lt;dbl&gt; -0.68468788, -0.05255784, -0.08640963, -0.12147024, -0.4…
$ log.conf.low  &lt;dbl&gt; -0.8947661, -0.4201151, -0.4567781, -0.5869119, -0.88192…
$ log.conf.high &lt;dbl&gt; -0.474609681, 0.314999396, 0.283958850, 0.343971392, 0.0…
$ estimate      &lt;dbl&gt; 0.5042476, 0.9487994, 0.9172184, 0.8856174, 0.6559699, 0…
$ conf.low      &lt;dbl&gt; 0.4087032, 0.6569712, 0.6333208, 0.5560418, 0.4139865, 0…
$ conf.high     &lt;dbl&gt; 0.6221278, 1.3702585, 1.3283783, 1.4105383, 1.0393974, 0…
$ p.value       &lt;dbl&gt; 1.681527e-10, 7.792783e-01, 6.474743e-01, 6.089951e-01, …</code></pre>
</div>
</div>
</section>
<section id="step-1-make-point-and-line-range-section-of-the-plot" class="level1">
<h1>Step 1: Make point and line range section of the plot</h1>
<p>We will first work on making the standard “forest plot”, or the middle section of the figure. This section uses points and lines to indicate the estimate and 95% confidence interval around the estimate.</p>
<p>In my experience, journal editors sometimes ask for these estimates to look a certain way during the revision process. For this graph, the journal editor told me that it was “journal standard to plot relative measures (ratio data), such as ORs, on log scales to preserve the correct spatial relationship between values.” So, I’m going to be visually showing the log hazard ratio, and annotating later with the hazard ratio.</p>
<p>Let’s look at how we can plot the log hazard ratio estimates. We first want the models to show in alphabetical order from the top to the bottom of the graph.</p>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb4-2">  res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(model))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()</span>
<span id="cb4-5">p</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
<p>Then we show all of our information (point estimate and 95% confidence interval) on the graph.</p>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>log.estimate), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_linerange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin=</span>log.conf.low, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax=</span>log.conf.high)) </span>
<span id="cb5-4">p</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
<p>We can now add a vertical line at 0 with <code>geom_vline</code> and rename the x axis.</p>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log Hazard Ratio"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb6-4">p</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
<p>Next we’ll use <code>coord_cartesian()</code> which will allow us to zoom to the exact height and width we want. I want to zoom out a bit to leave myself room for the text “Corticosteroids protective” vs.&nbsp;“Corticosteroids harmful” so I’m going to set my limits to <code>y=c(1,11)</code>. Each of the models (10 in total) is one unit, so this will give me one extra unit of space at the top of the plot. The x-limit I played around with a bit based upon the range of my log hazard ratios, and I ultimately arrived at <code>xlim=c(-1, .5)</code>.</p>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb7-3">p</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
<p>Now we have space to add our text about protective vs.&nbsp;harmful using the <code>annotate</code> layer.</p>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Corticosteroids protective"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Corticosteroids harmful"</span>)</span>
<span id="cb8-4">p</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="672"></p>
</div>
<p>Finally, we will remove everything on the y axis, because this plot is going to align with the next plot we make, showing the hazard ratios.</p>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">p_mid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb9-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb9-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb9-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb9-6">p_mid</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
<p>We’ll save this <code>ggplot</code> object as <code>p_mid</code> and move on to the next section of the figure.</p>
</section>
<section id="step-2-create-estimate-annotations-plot" class="level1">
<h1>Step 2: Create estimate annotations plot</h1>
<p>To plot the hazard ratio estimates, we first need to modify the data set a bit. We’ll start by rounding our estimates to the significant figures the journal requires. For this figure, I need two decimal places. I’ll round the numbers to two decimal places (except for p-values that are &lt; 0.01), and then “pad” the numbers as strings so that they take up 4 characters. In other words, we will turn a p-value that reads 0.2 into 0.20, which has four characters (three numbers and a decimal point).</p>
<p>I’ll also paste the low and high confidence intervals for my hazard ratio estimates together with a hyphen, and call this variable <code>estimate_lab</code>.</p>
<p>Finally, I’ll bind a row of data that shows what I want the column names of my annotations to read as (e.g.&nbsp;Model, Hazard Ratio). The real column names of this data frame won’t appear on my plot, but the data in the rows themselves will. This should become clearer as we create the annotation sections of the plots.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wrangle results into pre-plotting table form</span></span>
<span id="cb10-2">res_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># round estimates and 95% CIs to 2 decimal places for journal specifications</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(</span>
<span id="cb10-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(estimate, conf.low, conf.high),</span>
<span id="cb10-6">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_pad</span>(</span>
<span id="cb10-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(.x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb10-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb10-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>,</span>
<span id="cb10-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span></span>
<span id="cb10-11">    )</span>
<span id="cb10-12">  ),</span>
<span id="cb10-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add an "-" between HR estimate confidence intervals</span></span>
<span id="cb10-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate_lab =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(estimate, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" ("</span>, conf.low, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, conf.high, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># round p-values to two decimal places, except in cases where p &lt; .001</span></span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb10-17">    p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">001</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;0.001"</span>,</span>
<span id="cb10-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(p.value, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(p.value,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb10-19">    p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">01</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_pad</span>( <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if less than .01, go one more decimal place</span></span>
<span id="cb10-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(p.value, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb10-21">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb10-22">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>,</span>
<span id="cb10-23">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span></span>
<span id="cb10-24">    ),</span>
<span id="cb10-25">    <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_pad</span>( <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise just round to 2 decimal places and pad string so that .2 reads as 0.20</span></span>
<span id="cb10-26">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(p.value, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)),</span>
<span id="cb10-27">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb10-28">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>,</span>
<span id="cb10-29">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span></span>
<span id="cb10-30">    )</span>
<span id="cb10-31">  )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add a row of data that are actually column names which will be shown on the plot in the next step</span></span>
<span id="cb10-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb10-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb10-35">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model"</span>,</span>
<span id="cb10-36">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate_lab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hazard Ratio (95% CI)"</span>,</span>
<span id="cb10-37">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.low =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb10-38">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.high =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb10-39">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-value"</span></span>
<span id="cb10-40">    )</span>
<span id="cb10-41">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(model, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model"</span>)))</span>
<span id="cb10-43"></span>
<span id="cb10-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(res_plot)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 11
Columns: 9
$ model         &lt;fct&gt; A, B, C, D, E, F, G, H, I, J, Model
$ log.estimate  &lt;dbl&gt; -0.68468788, -0.05255784, -0.08640963, -0.12147024, -0.4…
$ log.conf.low  &lt;dbl&gt; -0.8947661, -0.4201151, -0.4567781, -0.5869119, -0.88192…
$ log.conf.high &lt;dbl&gt; -0.474609681, 0.314999396, 0.283958850, 0.343971392, 0.0…
$ estimate      &lt;chr&gt; "0.50", "0.95", "0.92", "0.89", "0.66", "0.77", "1.05", …
$ conf.low      &lt;chr&gt; "0.41", "0.66", "0.63", "0.56", "0.41", "0.60", "0.77", …
$ conf.high     &lt;chr&gt; "0.62", "1.37", "1.33", "1.41", "1.04", "0.99", "1.45", …
$ p.value       &lt;chr&gt; "&lt;0.001", "0.78", "0.65", "0.61", "0.07", "0.045", "0.75…
$ estimate_lab  &lt;chr&gt; "0.50 (0.41-0.62)", "0.95 (0.66-1.37)", "0.92 (0.63-1.33…</code></pre>
</div>
</div>
<p>To create the hazard ratio annotations, we’ll first organize the model order on the <code>y</code> axis.</p>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">p_left <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb12-2">  res_plot  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> model))</span>
<span id="cb12-4">p_left</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="672"></p>
</div>
<p>Next, we will add the model as text (instead of as a label on the y axis) using <code>geom_text</code>. We can specify where we want the text to show up by specifying the <code>x</code> axis should be 0. We will also set the <code>hjust</code> (horizontal justification) to 0 and <code>fontface</code> to bold type.</p>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">p_left <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb13-2">  p_left <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> model), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>)</span>
<span id="cb13-4">p_left</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
<p>We can use the same idea to add the hazard ratios and their confidence intervals, however, we want to specify that the hazard ratio data (<code>estimate_lab</code> variable) should only be bold if the value is equal to the title. We will do this using an <code>ifelse</code> statement within the <code>fontface</code> argument.</p>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">p_left <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb14-2">  p_left <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(</span>
<span id="cb14-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> estimate_lab),</span>
<span id="cb14-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb14-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(res_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>estimate_lab <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hazard Ratio (95% CI)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plain"</span>)</span>
<span id="cb14-7">  )</span>
<span id="cb14-8"></span>
<span id="cb14-9">p_left</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-24-1.png" class="img-fluid" width="672"></p>
</div>
<p>Finally, we can remove the background and edit the sizing so that this left size of the plot will match up neatly with the middle and right sides of the plot. Remember, <code>coord_cartesian</code> allows the user to zoom in and out of the plot without removing data.</p>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">p_left <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb15-2">  p_left <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb15-5"></span>
<span id="cb15-6">p_left</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-26-1.png" class="img-fluid" width="672"></p>
</div>
<p>That’s it for the hazard ratio annotation section of the plot! Next we can create the p-value annotation of the plot.</p>
</section>
<section id="step-3-create-p-value-annotations" class="level1">
<h1>Step 3: Create p-value annotations</h1>
<p>We will follow the same steps as in Step 2 to create the p-value annotations. Again, we use an <code>ifelse</code> statement to specify that only the word p-value should be bolded, rather than all the p-values.</p>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># right side of plot - pvalues</span></span>
<span id="cb16-2">p_right <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb16-3">  res_plot  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(</span>
<span id="cb16-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> p.value),</span>
<span id="cb16-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb16-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(res_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-value"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plain"</span>)</span>
<span id="cb16-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() </span>
<span id="cb16-11"></span>
<span id="cb16-12">p_right</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid" width="672"></p>
</div>
</section>
<section id="step-4-put-the-three-plots-together-with-patchwork" class="level1">
<h1>Step 4: Put the three plots together with patchwork</h1>
<p>Finally, we will use the package <code>patchwork</code> to merge all three plots together. You could equivalently use <code>gridarrange</code>, <code>cowplot</code>, or some other ggplot2 figure-merging package of your choice.</p>
<p>For this specific use of patchwork you need to specify the <code>t</code>op, <code>l</code>eft, <code>r</code>ight, and <code>b</code>ottom indices of each plot in an <code>areas</code> function, and then put these together in a vector, which I call <code>layout</code>. Then, you can specify that <code>layout</code> in the <code>design</code> argument of <code>plot_layout</code>.</p>
<p>To learn about the syntax of <code>patchwork</code> and its <code>plot_layout</code> function check out <a href="https://patchwork.data-imaginist.com/articles/guides/layout.html">this article</a>.</p>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">layout <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># left plot, starts at the top of the page (0) and goes 30 units down and 3 units to the right</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># middle plot starts a little lower (t=1) because there's no title. starts 1 unit right of the left plot (l=4, whereas left plot is r=3), goes to the bottom of the page (30 units), and 6 units further over from the left plot (r=9 whereas left plot is r=3)</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># right most plot starts at top of page, begins where middle plot ends (l=9, and middle plot is r=9), goes to bottom of page (b=30), and extends two units wide (r=11)</span></span>
<span id="cb17-5">)</span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># final plot arrangement</span></span>
<span id="cb17-7">p_left <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p_mid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p_right <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">design =</span> layout)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/forest-plots/index_files/figure-html/unnamed-chunk-30-1.png" class="img-fluid" width="864"></p>
</div>
</section>
<section id="step-5-export-your-plot" class="level1">
<h1>Step 5: Export your plot!</h1>
<p>I typically export as an encapsulated postscript (eps) file using <code>ggsave</code> for journals, but you could instead export as a jpg, png, etc.</p>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forest-plot.eps"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<p>Hopefully that’s not too hard to follow! Please feel free to email me if you find any errors or confusing parts. Here’s the full code:</p>
</section>
<section id="just-the-code" class="level1">
<h1>Just the code</h1>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## load up the packages we will need: </span></span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb19-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb19-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb19-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ---------------------------</span></span>
<span id="cb19-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## load data</span></span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in results generated from Cox PH hazards models</span></span>
<span id="cb19-8">res_log <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model-first-results-log.csv"</span>)</span>
<span id="cb19-9">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model-first-results.csv"</span>)</span>
<span id="cb19-10">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> res_log <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-11">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename_with</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log."</span>, .), estimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>conf.high) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p.value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_join</span>(res)</span>
<span id="cb19-14"></span>
<span id="cb19-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## plotting</span></span>
<span id="cb19-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ---------------------------</span></span>
<span id="cb19-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create forest plot on log scale (middle section of figure)</span></span>
<span id="cb19-18">p_mid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb19-19">  res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(model))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>log.estimate), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_linerange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin=</span>log.conf.low, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax=</span>log.conf.high)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log Hazard Ratio"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Corticosteroids protective"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Corticosteroids harmful"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb19-30">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb19-31">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb19-32">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb19-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wrangle results into pre-plotting table form</span></span>
<span id="cb19-34">res_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(estimate, conf.low, conf.high), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_pad</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(.x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)),</span>
<span id="cb19-36">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate_lab =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(estimate, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" ("</span>, conf.low, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, conf.high,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>),</span>
<span id="cb19-37">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">01</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;0.01"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_pad</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(p.value, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate_lab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hazard Ratio (95% CI)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.low =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.value=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-value"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(model, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model"</span>)))</span>
<span id="cb19-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># left side of plot - hazard ratios</span></span>
<span id="cb19-42">p_left <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb19-43">  res_plot  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> model)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span>model), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span>estimate_lab), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(res_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>estimate_lab <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hazard Ratio (95% CI)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plain"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb19-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># right side of plot - pvalues</span></span>
<span id="cb19-50">p_right <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb19-51">  res_plot  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span>p.value), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(res_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-value"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plain"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() </span>
<span id="cb19-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># layout design (top, left, bottom, right)</span></span>
<span id="cb19-56">layout <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb19-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb19-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb19-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span>
<span id="cb19-60">)</span>
<span id="cb19-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># final plot arrangement</span></span>
<span id="cb19-62">p_left <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p_mid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p_right <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">design =</span> layout)</span>
<span id="cb19-63"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## save final figure</span></span>
<span id="cb19-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#ggsave("forest-plot.eps", width=9, height=4)</span></span></code></pre></div>
</section>
<section id="session-info" class="level1">
<h1>Session Info</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>R version 4.1.2 (2021-11-01)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] patchwork_1.1.2 gt_0.7.0        forcats_0.5.1   stringr_1.4.0  
 [5] dplyr_1.0.10    purrr_0.3.5     readr_2.1.2     tidyr_1.2.1    
 [9] tibble_3.1.8    ggplot2_3.4.0   tidyverse_1.3.2

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.9          lubridate_1.8.0     assertthat_0.2.1   
 [4] digest_0.6.30       utf8_1.2.2          R6_2.5.1           
 [7] cellranger_1.1.0    backports_1.4.1     reprex_2.0.1       
[10] evaluate_0.14       httr_1.4.2          pillar_1.8.1       
[13] rlang_1.0.6         curl_4.3.2          googlesheets4_1.0.0
[16] readxl_1.3.1        rstudioapi_0.13     rmarkdown_2.11     
[19] labeling_0.4.2      googledrive_2.0.0   htmlwidgets_1.5.4  
[22] bit_4.0.4           munsell_0.5.0       broom_1.0.1        
[25] compiler_4.1.2      modelr_0.1.8        xfun_0.29          
[28] pkgconfig_2.0.3     htmltools_0.5.2     tidyselect_1.2.0   
[31] fansi_1.0.3         crayon_1.5.0        tzdb_0.2.0         
[34] dbplyr_2.1.1        withr_2.5.0         grid_4.1.2         
[37] jsonlite_1.7.3      gtable_0.3.1        lifecycle_1.0.3    
[40] DBI_1.1.2           magrittr_2.0.3      scales_1.2.1       
[43] cli_3.4.1           stringi_1.7.6       vroom_1.5.7        
[46] farver_2.1.1        fs_1.5.2            xml2_1.3.3         
[49] ellipsis_0.3.2      generics_0.1.3      vctrs_0.5.0        
[52] tools_4.1.2         bit64_4.0.5         glue_1.6.2         
[55] hms_1.1.1           parallel_4.1.2      fastmap_1.1.0      
[58] yaml_2.2.2          colorspace_2.0-3    gargle_1.2.0       
[61] rvest_1.0.2         knitr_1.37          haven_2.4.3        </code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>programming</category>
  <guid>www.khstats.com/blog/forest-plots/index.html</guid>
  <pubDate>Mon, 12 Dec 2022 05:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/forest-plots/image.png" medium="image" type="image/png" height="80" width="144"/>
</item>
<item>
  <title>Building Statistical Intuition for Optimal Treatment Rules</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/otr/otr.html</link>
  <description><![CDATA[ 




<p>Developing and optimizing <strong>optimal treatment rules (OTRs)</strong> is a fast-growing topic in the medical research community. A treatment rule is a <strong>decision for treatment based upon a person’s characteristics</strong>. The intuition behind this is that not all individuals will respond to a treatment in the same way. We can exploit these <strong>heterogeneous effects</strong> and develop personalized rules which provide benefit a greater number of people.</p>
<p>The methods of OTRs are rooted in <strong>principles of causal inference</strong>, or using data to inform us about what would have happened in a hypothetical world in which different interventions had occurred. This post walks through the basic statistical intuition for OTRs. Each explanation is accompanied by mathematical notation and a small graphic to convey equivalent meaning.</p>
<blockquote class="blockquote">
<p>Although this post is introductory, it assumes basic knowledge in causal inference, such as <em>counterfactual outcomes</em>, <em>assumptions for causal identification</em>, <em>Average Treatment Effect</em>, and <a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/G-Computation.pdf"><em>G-computation</em>/<em>g-formula</em></a>.</p>
</blockquote>
<section id="table-of-contents" class="level1">
<h1>Table of Contents</h1>
<ol type="1">
<li><p>🗺️ The big-picture approach to OTRs</p></li>
<li><p>📈 A simple estimation example</p></li>
<li><p>🖥️ <code>R</code> code for a simple estimation example</p></li>
</ol>
</section>
<section id="the-big-picture-of-otrs" class="level1 page-columns page-full">
<h1>🗺️ The Big Picture of OTRs</h1>
<p>In this first section, we will translate the concept of developing and optimizing an OTR into mathematical notation.</p>
<ol type="1">
<li>We will start with a standard set-up: we have a matrix of observed data <img src="https://latex.codecogs.com/png.latex?O"> which includes our <strong>outcome</strong> <img src="https://latex.codecogs.com/png.latex?Y">, the <strong>exposure</strong> (i.e.&nbsp;treatment, medicine, etc.) we want to study <img src="https://latex.codecogs.com/png.latex?A">, and other <strong>covariates</strong> <img src="https://latex.codecogs.com/png.latex?%5Ctextbf%7BW%7D">. Each row is an observation. We can denote these columns of data, which are random variables, as <img src="https://latex.codecogs.com/png.latex?O%20=%20(%5Ctextbf%7BW%7D,%20A,%20Y)">.</li>
</ol>
<p><img src="www.khstats.com/blog/otr/otr/data_structure.png" class="img-fluid" style="width:80.0%"></p>
<!-- , and visualize it as the following data set. *Note that we are considering a binary exposure for simplicity.* -->
<!-- ![](tmle/1_data_structure.png){width=80%} -->
<ol start="2" type="1">
<li>Now, consider we create some function, <img src="https://latex.codecogs.com/png.latex?d">, which takes baseline confounders <img src="https://latex.codecogs.com/png.latex?%5Ctextbf%7BW%7D"> and outputs a treatment assignment <img src="https://latex.codecogs.com/png.latex?A">. We can write this mapping function, or <strong>treatment rule</strong>, in mathematical notation as:</li>
</ol>
<!-- <p style="margin-left: 40px"> -->
<p><img src="https://latex.codecogs.com/png.latex?d:%20%5Ctextbf%7BW%7D%20%5Crightarrow%20A"> This is equivalent to a function you could write in R or Python which takes a matrix <code>W</code> and outputs a vector of treatment assignments <code>A</code>, which may or may not be the same treatment assignment as what each observation actually received.</p>
<p><img src="www.khstats.com/blog/otr/otr/input_output.png" class="img-fluid" style="width:80.0%"></p>
<!-- <p style="margin-left: 40px">An example in `R` code could be this:</p>  -->
<!-- <p style="margin-left: 40px"> -->
<!-- ```{r} -->
<!-- d <- function(W){ -->
<!--   # assigned treatment A is a vector of length nrow(W) and depends on values of W -->
<!--   # for example, the treatment rule could be if W1 is greater than 5, treat, otherwise, don't treat -->
<!--   A <- ifelse(W[[1]] > 5, 1, 0) -->
<!--   return(A) -->
<!-- } -->
<!-- ``` -->
<!-- </p>  -->
<ol start="3" type="1">
<li>We can then think about the <strong>counterfactual outcome</strong><sup>1</sup> for each row, or observation, under the treatment rule <img src="https://latex.codecogs.com/png.latex?d">. In other words, we ask, *“what would have happened in a hypothetical world where the treatment rule* <img src="https://latex.codecogs.com/png.latex?d"> was applied?”</li>
</ol>
<div class="no-row-height column-margin column-container"><li id="fn1"><p><sup>1</sup>&nbsp;Recall that a counterfactual describes a hypothetical world where a unit received a certain intervention or treatment, which might be different from the treatment they actually received</p></li></div><p>Let’s denote this vector of counterfactual outcomes as <img src="https://latex.codecogs.com/png.latex?Y(d)">.</p>
<p><img src="www.khstats.com/blog/otr/otr/Y_d.png" class="img-fluid" style="width:100.0%"></p>
<ol start="4" type="1">
<li>The optimal OTR will <strong>maximize the expected counterfactual outcome</strong>, or <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BE%7D%5BY(d)%5D">, across the entire population. We can write that using <img src="https://latex.codecogs.com/png.latex?%5Cmathop%7B%5Cmathrm%7Barg%5C,max%7D%7D">, which means we want to know which argument will return the highest value of a function. In this use-case, we want to know what treatment rule <img src="https://latex.codecogs.com/png.latex?d"> returns the highest expected value of the counterfactual outcome, <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BE%7D%5BY(d)%5D">.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathop%7B%5Cmathrm%7Barg%5C,max%7D%7D_d%20%5Cmathrm%7BE%7D%5BY(d)%5D"></p>
<p><img src="www.khstats.com/blog/otr/otr/argmax.png" class="img-fluid" style="width:70.0%"></p>
<ol start="5" type="1">
<li>We can call whatever function <img src="https://latex.codecogs.com/png.latex?d">, or <img src="https://latex.codecogs.com/png.latex?d(%5Ctextbf%7BW%7D)">, that maximizes this expected counterfactual outcome for the population <img src="https://latex.codecogs.com/png.latex?d%5E*">. <strong>This</strong> <img src="https://latex.codecogs.com/png.latex?d%5E*"> is our OTR.</li>
</ol>
<p><img src="www.khstats.com/blog/otr/otr/d_star.png" class="img-fluid" style="width:50.0%"></p>
</section>
<section id="estimating-the-otr" class="level1 page-columns page-full">
<h1>📈 Estimating the OTR</h1>
<p>There are many ways to estimate <img src="https://latex.codecogs.com/png.latex?d%5E*">. One of the most common ways begins by estimating the <strong>Conditional Average Treatment Effect (CATE)</strong>.</p>
<p>You have probably heard of the Average Treatment Effect (ATE), which is the mean difference in outcomes in a world in which every unit receives the exposure compared to a world in which no unit receives the exposure. In potential outcomes notation, <img src="https://latex.codecogs.com/png.latex?ATE%20=%20%5Cmathrm%7BE%7D%5BY%5E1-Y%5E0%5D">. The CATE is the same formula and description, but within covariate strata <img src="https://latex.codecogs.com/png.latex?W">.</p>
<p><img src="https://latex.codecogs.com/png.latex?CATE%20=%20%5Cmathrm%7BE%7D%5BY%5E1-Y%5E0%7C%5Ctextbf%7BW%7D%5D"></p>
<div class="page-columns page-full"><p>Under standard causal assumptions<sup>2</sup>, the CATE for a binary exposure is identifiable under the following formula:</p><div class="no-row-height column-margin column-container"><li id="fn2"><p><sup>2</sup>&nbsp;This post is focused on estimation and therefore does not detail the requirements for causal identification, but here I refer to the assumptions of consistency, exchangeability, and positivity.</p></li></div></div>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BCATE%7D(W)%20=%20%5Cmathrm%7BE%7D%5BY%7CA=1,%20%5Ctextbf%7BW%7D%5D%20-%20%5Cmathrm%7BE%7D%5BY%7CA=0,%20%5Ctextbf%7BW%7D%5D"> <!-- Compare this to the ATE after identification to clearly see the formula for CATE is the same, minus the outer expectation: --></p>
<!-- $$\mathrm{ATE}(W) = \mathrm{E}[\mathrm{E}[Y|A=1, W] - \mathrm{E}[Y|A=0, W]]$$ -->
<div class="page-columns page-full"><p>We could estimate the CATE using <strong>G-computation</strong><sup>3</sup>:</p><div class="no-row-height column-margin column-container"><li id="fn3"><p><sup>3</sup>&nbsp;If you’d like a review on G-computation, check out this <a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/G-Computation.pdf"><strong>visual guide</strong></a>.</p></li></div></div>
<ol type="1">
<li>Fit a regression for <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BE%7D%5BY%7CA,%5Ctextbf%7BW%7D%5D">.</li>
</ol>
<p><img src="www.khstats.com/blog/otr/tmle/2_outcome_fit.png" class="img-fluid" style="width:70.0%"></p>
<ol start="2" type="1">
<li>Use the model fit from Step 1 to obtain predicted estimates for <img src="https://latex.codecogs.com/png.latex?Y">. Use two different datasets: one where all observations are changed to have <img src="https://latex.codecogs.com/png.latex?A=1">, and one where all observations are changed to have <img src="https://latex.codecogs.com/png.latex?A=0">.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BE%7D%5BY%7CA=1,%20%5Ctextbf%7BW%7D%5D"></p>
<p><img src="www.khstats.com/blog/otr/tmle/4_Q1.png" class="img-fluid" style="width:80.0%"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BE%7D%5BY%7CA=0,%20%5Ctextbf%7BW%7D%5D"></p>
<p><img src="www.khstats.com/blog/otr/tmle/5_Q1.png" class="img-fluid" style="width:80.0%"></p>
<ol start="3" type="1">
<li>Compute the difference of the quantities from Step 2.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BCATE%7D%20=%20%5Chat%7BE%7D%5BY%7CA=1,%20%5Ctextbf%7BW%7D%5D%20-%20%5Chat%7BE%7D%5BY%7CA=0,%20%5Ctextbf%7BW%7D%5D"></p>
<p><img src="www.khstats.com/blog/otr/otr/cate.png" class="img-fluid" style="width:32.0%"></p>
<p>Now, we could say our optimal treatment rule is to <strong>give treatment if the value of</strong> <img src="https://latex.codecogs.com/png.latex?CATE"> for that person is positive, indicating a positive effect of treatment on the outcome <img src="https://latex.codecogs.com/png.latex?Y">. Likewise, if the value is negative or 0, indicating a negative or neutral effect on the outcome <img src="https://latex.codecogs.com/png.latex?Y">, that unit would not receive treatment under the OTR.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Ctext%7BTreatment%20rule%7D%20=%20%5Cmathbb%7B1%7D%7B%20%5C%7BCATE%20%3E%200%7D%20%5C%7D"></p>
<p><img src="www.khstats.com/blog/otr/otr/cate_assign_legend.png" class="img-fluid" style="width:50.0%"></p>
</section>
<section id="r-simulation" class="level1">
<h1>🖥️ <code>R</code> simulation</h1>
<p>Let’s take a look an <code>R</code> simulation for the simple estimation of the <img src="https://latex.codecogs.com/png.latex?d%5E*"> we just described. We can first simulate data of <code>n</code> = 500 rows, where we have only one confounder <code>W</code>, a binary treatment <code>A</code> which depends on <code>W</code>, and an outcome <code>Y</code> which is continuous and depends on <code>W</code> and <code>A</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb1-2">W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>)</span>
<span id="cb1-3">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(W<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span>
<span id="cb1-4">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W)</span>
<span id="cb1-5">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(W, A, Y)</span></code></pre></div>
</div>
<p>We’ll run a regression for a saturated linear regression model of <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BE%7D%5BY%7CA,%5Ctextbf%7BW%7D%5D">, then obtain predictions on datasets where <code>A</code> is changed to <code>1</code> and <code>0</code> for all rows. We can then compute the CATE as the difference between these predictions.</p>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(Y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W)</span>
<span id="cb2-2">E_Y1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, W))</span>
<span id="cb2-3">E_Y0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, W))</span>
<span id="cb2-4">CATE <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> E_Y1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> E_Y0</span></code></pre></div>
<p>Finally, our optimal treatment rule will be to treat any unit with <code>CATE &gt; 1</code>. If we plot the distribution of CATE in intervals of length 1, we can visually see there is benefit for about 1/4 of units in our simulated population.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(CATE) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d_star =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(CATE <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treat"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Do not treat"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(CATE,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>d_star)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_binned</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f2696f"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#4984b0"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CATE"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treatment Rule"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distribution of CATE"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/otr/otr_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="improving-estimation-of-d" class="level1">
<h1>Improving estimation of <img src="https://latex.codecogs.com/png.latex?d%5E*"></h1>
<p>There are many other ways to estimate the <img src="https://latex.codecogs.com/png.latex?CATE"> with improved statistical properties, e.g.&nbsp;<strong>double robustness</strong>. We could also estimate <img src="https://latex.codecogs.com/png.latex?d%5E*"> directly instead of first estimating the <img src="https://latex.codecogs.com/png.latex?CATE">.</p>
<p>We can extend either of these ideas to longitudinal settings, studies with clustering, etc. I’ve listed some of the resources I’ve used to learn about developing OTRs below. As always, I welcome feedback and/or suggestions of additional resources I can include.</p>
<hr>
</section>
<section id="further-reading" class="level1">
<h1>Further reading</h1>
<p>These concepts are introductory, so any paper on “optimal treatment rules”, “individualized treatment rules”, or “heterogeneous treatment effects” should review the ideas discussed here in their introductions.</p>
<ul>
<li>This <a href="https://onlinelibrary.wiley.com/doi/10.1002/sim.9154">Hoogland et al.&nbsp;tutorial</a> gives an introduction and code for OTRs.</li>
<li>This <a href="https://www.bios.unc.edu/~dzeng/Pub/EHROLearning1.pdf">Wang et al.&nbsp;paper</a> offers a clear mathematical introduction on OTRs.</li>
<li><a href="https://www.youtube.com/watch?v=-0-RYxQ0zqM">Brady Neal’s causal course Youtube series</a> (Chapter 6.2) discusses Conditional Outcome Modeling (what the CATE estimator falls under) over a 10 minute video.</li>
<li>This <a href="https://jamanetwork.com/journals/jama/fullarticle/2787131">Angus and Chang <em>JAMA</em> Statistics and Research Methods paper</a> gives an overview of a few ways to compute heterogeneous treatment effects for individualized treatment rules.</li>
<li>Lately I’ve been interested in <a href="https://arxiv.org/pdf/2004.14497.pdf">this recent methods paper</a> by Edward Kennedy. It discusses a way to evaluate the CATE using doubly robust estimation, and gives several other foundational papers in the introduction.</li>
<li><a href="https://egap.org/resource/10-things-to-know-about-heterogeneous-treatment-effects/">This <code>R</code> blog post</a> about heterogeneous treatment effects also may be useful for thinking through these issues with real data.</li>
<li><pre><code>[Lina Montoya](http://lina-montoya.com/)'s [paper](https://arxiv.org/abs/2101.12326) on using the [Superlearner algorithm](https://www.khstats.com/blog/sl/superlearning.html) to estimate the CATE is super interesting and contains many great references to other OTR papers</code></pre></li>
<li>This <a href="https://jamanetwork.com/journals/jamanetworkopen/fullarticle/2773970">Pirracchio et al.&nbsp;paper</a> is an interesting application of the Superlearner optimal treatment rule in a critical care setting (one of my favorite areas of research!)</li>
</ul>
<p>I’ll continue to add resources to this list as I discover them. Please reach out if you have recommendations of papers or tutorials (yours or others!) to add to this list.</p>
<hr>
<section id="acknowledgments" class="level2">
<h2 class="anchored" data-anchor-id="acknowledgments">Acknowledgments</h2>
<p>Thanks to my colleague <a href="https://twitter.com/ildiazm">Iván Díaz</a> for explaining OTRs to me in this way, and for reviewing this post.</p>


</section>
</section>


 ]]></description>
  <category>statistics</category>
  <guid>www.khstats.com/blog/otr/otr.html</guid>
  <pubDate>Wed, 10 Aug 2022 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/otr/image.png" medium="image" type="image/png" height="57" width="144"/>
</item>
<item>
  <title>Just my type! A beginner’s guide to building a custom mechanical keyboard</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/keyboard/index.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>This blog post details a DIY project I did last summer – building a mechanical keyboard. I’m no expert, but I enjoyed the process of building the keyboard so much that I thought I would briefly walk through the steps and share helpful resources. Even if you have no interest in building your own, I hope it encourages you to learn something new that you may have initially felt intimidated by!</p>
</blockquote>
<p><img src="www.khstats.com/blog/keyboard/keyboard/IMG_2826.JPG" class="img-fluid"></p>
<!-- <iframe src="https://giphy.com/embed/2IGcITcJg09VK" width="480" height="379" frameBorder="0"  allowFullScreen sandbox ></iframe><p><a href="https://giphy.com/gifs/2IGcITcJg09VK"></a></p> -->
<section id="whats-a-mechanical-keyboard" class="level1">
<h1>What’s a mechanical keyboard?</h1>
<!-- <iframe src="https://giphy.com/embed/2IGcITcJg09VK" width="700" frameBorder="0" allowFullScreen sandbox ></iframe><p></p> -->
<p>A mechanical keyboard is the typing unit that comes with a desktop computer, as opposed to a laptop. The keys are taller and provide more feedback in feel and sound when you hit them. Gamers, typists, and coders are more likely to use a mechanical keyboard.</p>
</section>
<section id="why-would-i-want-to-build-a-mechanical-keyboard" class="level1">
<h1>Why would I want to build a mechanical keyboard?</h1>
<p>You can buy a mechanical keyboard, and to be honest, it’s a much cheaper monetary and time investment. Practically, the reason to build your own keyboard is customizability. Picking out the components provides freedom in colors, layout, feel/sound of the keys, and more. Yet the primary reason people do it is that it’s fun. If you enjoy DIY projects, you’ll probably enjoy the challenge that comes with building your own keyboard.</p>
<p>Personally, I decided to build my mechanical keyboard because I was bored during quarantine after catching COVID-19 last summer. I texted my dad at 1AM to see if I could use his soldering iron, and the rest is history.</p>
<p><img src="www.khstats.com/blog/keyboard/keyboard/ss_dad.jpeg" class="img-fluid" style="width:75.0%"></p>
</section>
<section id="what-components-do-i-need-to-buy" class="level1">
<h1>What components do I need to buy?</h1>
<p>Picking out the components can be overwhelming! Yet it boils down to six main pieces you’ll need:</p>
<ol type="1">
<li>Case</li>
<li>Printed Circuit Board (PCB)</li>
<li>Keyboard plate</li>
<li>Key switches</li>
<li>Key stabilizers</li>
<li>Key caps</li>
</ol>
<section id="case" class="level2">
<h2 class="anchored" data-anchor-id="case">Case</h2>
<p>The <strong>case</strong> is the outside of your keyboard. The size of the case you choose will limit how many keys you can have on your keyboard. Case sizes are described in percentages, i.e.&nbsp;100%, 80%, 75%, 60%, 40%, which corresponds to how many keys fit on the board.</p>
</section>
<section id="pcb" class="level2">
<h2 class="anchored" data-anchor-id="pcb">PCB</h2>
<p>The Printed Circuit Board <strong>(PCB)</strong> is the electronic circuitry of your keyboard. You will need to choose a PCB that fits into whatever size case you’ve picked. One option with a PCB is whether it has RGB underglow on it, which means it has tiny lights on it that you can program to display different colors. If you want these lights to show, you should find a case and/or key caps with some aspect of transparency.</p>
<p>Another option for the PCB is whether you attach the keys via “hot swap” or “soldering”. If you choose hot swap, you just click the keys into place. However, most PCBs require you to solder the key switches (discussed below) to the circuitry on the board.</p>
</section>
<section id="keyboard-plate" class="level2">
<h2 class="anchored" data-anchor-id="keyboard-plate">Keyboard plate</h2>
<p><strong>Keyboard plates</strong> are what you put on top of PCBs to hold your keys in place. You can choose from aluminum, brass, or steel. If you’re feeling overwhelmed, this isn’t something you should stress about. You can barely see it below the keys, so color doesn’t matter much, and the differences in sound/material from the material seem minimal to me. You should make sure to get one that matches the layout of the keys that you want, though.</p>
</section>
<section id="key-switches" class="level2">
<h2 class="anchored" data-anchor-id="key-switches">Key switches</h2>
<p>This is a fun choice! <strong>Key switches</strong> are what go below the keys to provide the majority of sound and feel. You can choose from many different brands, e.g.&nbsp;Cherry MX or Gateron, and types of switch feels, e.g.&nbsp;tactile, linear, clicky. I won’t go into all the differences here, but you should know that switch colors correspond to certain sounds/feels. The color of the switch won’t be seen unless you have translucent key caps. I discovered the world of <a href="https://www.youtube.com/watch?v=yXfysGqNLeE">typing test videos</a> while I was picking out key switches.</p>
</section>
<section id="key-stabilizers" class="level2">
<h2 class="anchored" data-anchor-id="key-stabilizers">Key stabilizers</h2>
<p><strong>Key stabilizers</strong> are necessary but a bit boring. They go beneath the wider keys like space bar and shift to help distribute the weight of your finger to press the button. It is common to lubricate the key stabilizers before you install them so that these keys are easier to press.</p>
</section>
<section id="key-caps" class="level2">
<h2 class="anchored" data-anchor-id="key-caps">Key caps</h2>
<p><strong>Key caps</strong> are, in my opinion, the most exciting part! They go on top of the switches and are the most visible part of the keyboard. You can choose the material and colors, and either buy as a set or pick out <a href="https://www.etsy.com/market/keycaps?utm_source=google&amp;utm_medium=cpc&amp;utm_term=etsy%20keycaps_e&amp;utm_campaign=Search_US_Brand_GGL_ENG_Electronics_General_All&amp;utm_ag=Keycaps&amp;utm_custom1=_k_CjwKCAjw46CVBhB1EiwAgy6M4nJbZIFPQUy_kGqdGNyhP_E6sUvFiW16Ge2NwLGC4YxSKDCI6dXxCxoCG_AQAvD_BwE_k_&amp;utm_content=go_6518574893_130991488488_536666961773_aud-459688891595:kwd-1394000379778_c_&amp;utm_custom2=6518574893&amp;gclid=CjwKCAjw46CVBhB1EiwAgy6M4nJbZIFPQUy_kGqdGNyhP_E6sUvFiW16Ge2NwLGC4YxSKDCI6dXxCxoCG_AQAvD_BwE">unique custom keycaps</a>.</p>
</section>
<section id="soldering-equipment" class="level2">
<h2 class="anchored" data-anchor-id="soldering-equipment">Soldering equipment</h2>
<p>Unless you get a hot swap PCB, you’ll need a soldering iron, solder wire, something to remove excess solder (i.e.&nbsp;solder wick or sucker).</p>
</section>
</section>
<section id="my-build" class="level1 page-columns page-full">
<h1>My Build</h1>
<p>These were the components I used. If I were to do it again I would pick another type of switch besides Cherry MX Brown… they work great but they’re a bit boring. I spent some time perusing builds on <a href="https://www.reddit.com/r/MechanicalKeyboards/">reddit (r/Mechanical Keybards)</a> before I bought my components.</p>
<ul>
<li><a href="https://kbdfans.com/products/kbd75v2-custom-keyboard-diy-kit-1">Blue aluminum KBD75 V2 Case with acrylic midlayer to show RBG lighting</a></li>
<li><a href="https://kbdfans.com/products/kbdfans-75-pcb-75">KBD75 Rev 2.0 Solderable PCB</a></li>
<li><a href="https://kbdfans.com/products/kbd75-brass-plate">KBD75 Brass plate</a></li>
<li><a href="https://kbdfans.com/products/kbd75-pcb-foam">KBD75 Foam pad</a></li>
<li><a href="https://www.amazon.com/Genuine-Cherry-GMK-Screw-Stabilizers/dp/B082Z5P769">Cherry screw in stabilizers</a></li>
<li><a href="https://www.amazon.com/Cherry-Switches-MX1A-L1NA-Mechanical-Keyboard/dp/B0852QJ8PJ?th=1">Cherry RGB Brown switches</a></li>
<li><a href="https://www.amazon.com/TAI-HAO-Profile-Keycaps-Compatible-Keyboards/dp/B08W56W35R/ref=sr_1_58?crid=1A8BUF5OB84RB&amp;keywords=red+blue+keycaps+retro&amp;qid=1655008111&amp;sprefix=red+blue+keycaps+retro%2Caps%2C55&amp;sr=8-58">Retro blue and red keycaps</a></li>
<li>Soldering equipment: I borrowed my dad’s <a href="https://www.amazon.com/Hakko-FX601-02-Adjustable-Temperature-Controlled/dp/B00FZPSX3G">Hakko FX-601 iron</a> and used a <a href="https://www.amazon.com/gp/product/B00B4T9KBG/ref=ppx_yo_dt_b_asin_title_o08_s00?ie=UTF8&amp;psc=1">sharp cone-shaped tip</a>. I also used <a href="https://www.homedepot.com/p/Forney-1-16-in-1-4-lb-Rosin-Core-60-40-Solder-38073/206471634">rosin core solder wire</a>, a <a href="https://www.amazon.com/Lesnow-No-Clean-Desoldering-Removal-Dispenser/dp/B094GZ6CPZ/ref=sr_1_1_sspa?keywords=solder+wick&amp;qid=1655225989&amp;sr=8-1-spons&amp;psc=1&amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUExUjlQTklXM1c4MTNEJmVuY3J5cHRlZElkPUEwNzYyODczMlZYVjQ4TzhSSVlXUCZlbmNyeXB0ZWRBZElkPUEwNjQ5NzAyMlpES0gxR05GM0o5JndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ==">solder wick</a> and <a href="">brass sponge</a> for removing solder. I later purchased a <a href="https://www.amazon.com/gp/product/B002MJMXD4/ref=ppx_yo_dt_b_asin_title_o07_s04?ie=UTF8&amp;psc=1">solder sucker</a>, which I recommend for removing soldering.</li>
</ul>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="www.khstats.com/blog/keyboard/keyboard/IMG_9073.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption margin-caption"><em>My components and tools, from left to right: a rag for touching up lubricant/solder, silicone lubricant, brass sponge for removing solder, solder wire, soldering iron with stand, scissors, tweezers, toothpicks, switches, stabilizers (black platic feet), screws, soft feet stickers, stabilizers (metal rods), case, key caps, PCB, brass plate, and foam pad. Not pictured: solder sucker that I purchased later.</em></figcaption>
</figure>
</div>
</section>
<section id="the-steps" class="level1">
<h1>The steps</h1>
<p>I’ll briefly outline the steps to building the keyboard below. If you’re actually in the process of building, I highly recommend finding a recorded live stream and/or tutorials on Youtube to walk you through the process. I found one by <a href="https://www.youtube.com/channel/UCMHXMAeKkI6HXlPfLiYvo9g">Taeha Types</a> for my <a href="(https://www.youtube.com/watch?v=O7uJprfBlos)">exact build</a>, and watched it almost in entirety.</p>
<section id="test-your-pcb" class="level2">
<h2 class="anchored" data-anchor-id="test-your-pcb">1. Test your PCB</h2>
<p>First you’ll want to download a keyboard programming app like <a href="https://www.caniusevia.com/">VIA</a>, plug your keyboard into your computer, take a pair of tweezers, and test each point of key circuitry on your PCB plate.</p>
<iframe src="keyboard/testing_keys.mp4" width="640" height="360" frameborder="0" allowfullscreen="" sandbox="">
</iframe>
</section>
<section id="lubricate-the-stabilizers" class="level2">
<h2 class="anchored" data-anchor-id="lubricate-the-stabilizers">2. Lubricate the stabilizers</h2>
<p>If your PCB plate is working properly, go ahead and add lubricant and put together your stabilizers. I found the whole process a bit tricky, but <a href="https://www.youtube.com/watch?v=usNx1_d0HbQ">Youtube</a> helped a lot. There are special lubricants made for keyboards, but I was impatient and used silicone lubricant that I already had.</p>
<p><img src="www.khstats.com/blog/keyboard/keyboard/IMG_9074.png" class="img-fluid"></p>
</section>
<section id="place-your-stabilizers-on-the-pcb" class="level2">
<h2 class="anchored" data-anchor-id="place-your-stabilizers-on-the-pcb">3. Place your stabilizers on the PCB</h2>
<p>Time to click the stabilizers into place! You can put the respective keycaps on (space bar, shift, backspace, etc.) and make sure you like the feel at this point.</p>
<iframe src="keyboard/test_stabs.mp4" width="640" height="360" frameborder="0" allowfullscreen="" sandbox="">
</iframe>
</section>
<section id="add-the-plate-and-click-the-key-switches-into-the-pcb" class="level2">
<h2 class="anchored" data-anchor-id="add-the-plate-and-click-the-key-switches-into-the-pcb">4. Add the plate and click the key switches into the PCB</h2>
<p>You can now overlay your plate on the PCB and start clicking each key switch’s metal prongs into the small holes on the PCB. You should feel a click when it locks into place, and the switches should not fall out if you flip the board over.</p>
<iframe src="keyboard/clicking_switches.mp4" width="640" height="360" frameborder="0" allowfullscreen="" sandbox="">
</iframe>
</section>
<section id="soldering" class="level2">
<h2 class="anchored" data-anchor-id="soldering">5. Soldering</h2>
<p>This was hands-down my favorite part of the entire process. Soldering (pronounced saw-der-ing) is SO much fun. There’s a ton of videos online about it, and you can buy a kit to practice if you want, but honestly I just went for it. You basically melt a piece of metal (solder) and then place the soldering iron right next to the key switch prongs and PCB ring of metal to create an electrical conduction.</p>
<iframe src="keyboard/soldering.mp4" width="640" height="360" frameborder="0" allowfullscreen="" sandbox="">
</iframe>
<p>One important note with soldering is that you should wait a day and retest your keys to make sure the conduction stayed. I had an issue where I would successfully test the keys about five minutes after soldering, but the next day the same keys would no longer work. I finally realized this was because I was soldering outside on a summer night (to avoid the fumes). As the sun went down, my soldering iron was no longer as hot as it said it was (~400° Fahrenheit) because the wind/outside air was cooling it down.</p>
<p>This is what my final soldered PCB and switches looked like. Each of the keys has two small mounds of solder creating an electrical conduction between the switch and the PCB. These look like small silver balls.</p>
<p><img src="www.khstats.com/blog/keyboard/keyboard/final_solder.png" class="img-fluid"></p>
</section>
<section id="stack-and-screw" class="level2">
<h2 class="anchored" data-anchor-id="stack-and-screw">6. Stack and screw</h2>
<p>Once all your keys’ electrical connections work, you can add your key caps. Finally, stack all the pieces together (case, foam plate, plate/PCB/switches/keys) and tighten the necessary screws.</p>
<iframe src="keyboard/screws.mp4" width="640" height="360" frameborder="0" allowfullscreen="" sandbox="">
</iframe>
</section>
<section id="type-away" class="level2">
<h2 class="anchored" data-anchor-id="type-away">7. Type away</h2>
<p>Enjoy the click-clack of your brand new custom mechanical keyboard!</p>
<iframe src="keyboard/typing.mp4" width="640" height="360" frameborder="0" allowfullscreen="" sandbox="">
</iframe>
</section>
</section>
<section id="lessons-learned" class="level1">
<h1>Lessons learned</h1>
<p>In the end, the process of learning to build a mechanical keyboard felt just like learning any new concept in statistics/data science. The knowledge took some time to find, and the jargon was a bit intimidating, but after spending some time sifting through information I could always find what I needed. The entire process was very enjoyable, and I’m already looking forward to my next build!</p>
<p><img src="www.khstats.com/blog/keyboard/keyboard/IMG_7198.png" class="img-fluid"></p>


</section>

 ]]></description>
  <category>miscellaneous</category>
  <guid>www.khstats.com/blog/keyboard/index.html</guid>
  <pubDate>Wed, 15 Jun 2022 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/keyboard/keyboard/IMG_2826.JPG" medium="image"/>
</item>
<item>
  <title>Using ggplot2 to create Treatment Timelines with Multiple Variables</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/trt-timelines/multiple-vars.html</link>
  <description><![CDATA[ 




<p>An R code walkthrough for treatment timelines or “swimmer” plots. These can help visualize treatment or measurement patterns, time-varying covariates, outcomes, and loss to follow-up in longitudinal data settings.</p>
<!--more-->
<p><strong><em>June 8, 2022.</em></strong></p>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<p>This post walks through code to create a timeline in <code>R</code> using <code>ggplot2</code>. These types of plots can help visualize <strong>treatment or measurement patterns</strong>, <strong>time-varying covariates</strong>, <strong>outcomes</strong>, and <strong>loss to follow-up</strong> in longitudinal data settings.</p>
<p>You can view a corresponding slide deck I made with {flipbookr} for the 2022 R/Medicine <a href="https://kathoffman.github.io/swimmer-plots/slides.html#1">[here]</a>, or you can skip to the end of this post to just see the code.</p>
<section id="background" class="level1">
<h1>Background</h1>
<p>Treatment timelines, or “swimmer plots”, are a visualization technique I find useful in exploring longitudinal data structures. A few years ago I shared how I make treatment timelines for a single treatment (categorical or continuous) in the post <a href="https://www.khstats.com/blog/trt-timelines/trt-timelines/"><strong>Patient Treatment Timelines for Longitudinal Survival Data</strong></a>.</p>
<p>Sometimes when I share these plots with collaborators, they ask me to <strong>add additional variables to the timelines</strong>. This post shows how to do that.</p>
<p>I’ll use a toy dataset on hospitalized COVID-19 patients, available to download on this <a href="https://github.com/kathoffman/steroids-trial-emulation">Github repository</a>. It is derived from a dataset from Electronic Health Record data during Spring 2020. This is a time period when there was large variation in provider practice in administering steroids, a type of drug that combats hyper-inflammation. Steroids are usually given to patients which exhibit an inflammatory profile; we will identify this using a threshold for low oxygen levels (severe hypoxia).</p>
<p>We will look at the treatment patterns of steroids as it relates to the timing of patients (1) reaching severe hypoxia and (2) being put on a ventilator (intubation). We will also include whether patients died. I used a similar figure in a <a href="https://www.medrxiv.org/content/10.1101/2022.05.27.22275037v3">recent manuscript</a> on this topic, if you’re interested in learning more!</p>
</section>
<section id="exploring-the-data" class="level1">
<h1>Exploring the data</h1>
<p>The data set is in long format with one row per patient. Let’s first load the data set and libraries we’ll need, then look at the first 20 rows:</p>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages(c("tidyverse","gt","RCurl","rmarkdown"))</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rmarkdown)</span>
<span id="cb1-5"></span>
<span id="cb1-6">dat_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/kathoffman/steroids-trial-emulation/main/data/dat_trt_timeline.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_types =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id  =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">steroids =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">severe =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>))</span></code></pre></div>
<p>If we look at the first patient (id = 797), we can see they were in the hospital for 17 days, never intubated, never receive steroids, and ultimately die (<code>death</code> is <code>1</code> on the last day).</p>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(dat_long) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paged_table</span>()</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["id"],"name":[1],"type":["chr"],"align":["left"]},{"label":["day"],"name":[2],"type":["dbl"],"align":["right"]},{"label":["intubation_status"],"name":[3],"type":["chr"],"align":["left"]},{"label":["steroids"],"name":[4],"type":["chr"],"align":["left"]},{"label":["death"],"name":[5],"type":["chr"],"align":["left"]},{"label":["severe"],"name":[6],"type":["chr"],"align":["left"]}],"data":[{"1":"797","2":"0","3":"Not intubated","4":"0","5":"0","6":"0"},{"1":"797","2":"1","3":"Not intubated","4":"0","5":"0","6":"0"},{"1":"797","2":"2","3":"Not intubated","4":"0","5":"0","6":"1"},{"1":"797","2":"3","3":"Not intubated","4":"0","5":"0","6":"0"},{"1":"797","2":"4","3":"Not intubated","4":"0","5":"0","6":"0"},{"1":"797","2":"5","3":"Not intubated","4":"0","5":"0","6":"0"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
<p>We can plot all patients’ hospital length of stay, colored by intubation status using <code>ggplot2</code>’s <code>geom_line()</code>:</p>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">dat_long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> intubation_status, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group=</span>id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
<p>We can add our <code>steroids</code> column to the plot by adding a point designating whether <code>steroids</code> exposure was <code>1</code> (yes) or <code>0</code> (no) that day. We can see this results in points of two different colors on the lines of our plot. <a href="https://www.khstats.com/blog/trt-timelines/trt-timelines/">This can work just fine</a>! …unless you want to add another variable to the timeline.</p>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">dat_long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> intubation_status, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group=</span>id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(day, id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> steroids)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() </span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</section>
<section id="modify-the-data" class="level1">
<h1>Modify the data</h1>
<p>We <em>could</em> edit the colors of the dots we don’t want so that they’re transparent (using <code>NA</code>), but when you have other non-mutually exclusive dots you want to show, it’s simpler to just edit the data instead. So, we will now edit our data so that our three binary columns are turned into three <code>*_this_day</code> column, where:</p>
<ul>
<li>The value is <code>NA</code> if the observation did not experience that exposure/outcome that day (remember each day is a new row)</li>
<li>The value is the <code>day</code> if the observation <em>did</em> experience the exposure/outcome. This is to make our <code>x</code> axis easy to specify in <code>ggplot2</code>.</li>
</ul>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">dat_swim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb5-2">  dat_long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">severe_this_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(severe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> day),</span>
<span id="cb5-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">steroids_this_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(steroids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> day),</span>
<span id="cb5-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death_this_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(death <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> day))</span></code></pre></div>
<p>While we’re at it, let’s modify the patient’s IDs so that we can rearrange our plot by length of each individual’s timeline. To do this, we will reorder the factored <code>id</code> variable by a new variable <code>max_day</code>, or the length of time that patients are in the study.</p>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">dat_swim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb6-2">  dat_swim <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(day)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(id), max_day))</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(dat_swim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paged_table</span>()</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["id"],"name":[1],"type":["fct"],"align":["left"]},{"label":["day"],"name":[2],"type":["dbl"],"align":["right"]},{"label":["intubation_status"],"name":[3],"type":["chr"],"align":["left"]},{"label":["steroids"],"name":[4],"type":["chr"],"align":["left"]},{"label":["death"],"name":[5],"type":["chr"],"align":["left"]},{"label":["severe"],"name":[6],"type":["chr"],"align":["left"]},{"label":["severe_this_day"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["steroids_this_day"],"name":[8],"type":["dbl"],"align":["right"]},{"label":["death_this_day"],"name":[9],"type":["dbl"],"align":["right"]},{"label":["max_day"],"name":[10],"type":["dbl"],"align":["right"]}],"data":[{"1":"797","2":"0","3":"Not intubated","4":"0","5":"0","6":"0","7":"NA","8":"NA","9":"NA","10":"16"},{"1":"797","2":"1","3":"Not intubated","4":"0","5":"0","6":"0","7":"NA","8":"NA","9":"NA","10":"16"},{"1":"797","2":"2","3":"Not intubated","4":"0","5":"0","6":"1","7":"2","8":"NA","9":"NA","10":"16"},{"1":"797","2":"3","3":"Not intubated","4":"0","5":"0","6":"0","7":"NA","8":"NA","9":"NA","10":"16"},{"1":"797","2":"4","3":"Not intubated","4":"0","5":"0","6":"0","7":"NA","8":"NA","9":"NA","10":"16"},{"1":"797","2":"5","3":"Not intubated","4":"0","5":"0","6":"0","7":"NA","8":"NA","9":"NA","10":"16"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</section>
<section id="back-to-plotting" class="level1">
<h1>Back to plotting</h1>
<p>Now, we can re-plot the steroids and intubation statuses using our new data. This time without all the <code>0</code> values for steroids showing.</p>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">dat_swim <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> intubation_status, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group=</span>id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>steroids_this_day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Steroids"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Steroids"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<pre><code>Warning: Removed 387 rows containing missing values (geom_point).</code></pre>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
<p>From this point on I’ll save the plot as <code>p</code> and just keep adding onto it so you can see the new step.</p>
<p>We’ll see why we’re doing this in a second, but in creating this first iteration of <code>p</code> using <code>geom_line()</code> and <code>geom_point()</code>, we also want to set the <code>col</code> to match how we want the marker for steroids to appear in the legend. I’m also going to make minor edits to the <code>size</code> and <code>shape</code> of the point geometry right now, as well as the width of each timeline itself (also using the <code>size</code> argument).</p>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb9-2">  dat_swim <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> intubation_status, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group=</span>id),</span>
<span id="cb9-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>steroids_this_day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Steroids"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span>
<span id="cb9-8">p</span></code></pre></div>
<pre><code>Warning: Removed 387 rows containing missing values (geom_point).</code></pre>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
<p>Let’s add hypoxia and death to the figure. We’ll use <code>geom_point()</code> again, and again specify legend names for the <code>col</code> and <code>shape</code> arguments, and modify the <code>size</code> and <code>stroke</code> of our point geometries.</p>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>severe_this_day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Severe hypoxia"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>death_this_day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Death"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) </span>
<span id="cb11-4">p</span></code></pre></div>
<pre><code>Warning: Removed 387 rows containing missing values (geom_point).</code></pre>
<pre><code>Warning: Removed 403 rows containing missing values (geom_point).</code></pre>
<pre><code>Warning: Removed 414 rows containing missing values (geom_point).</code></pre>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
<p>Note that we get warning messages that values with <code>NA</code> are removed. This is fine since we just created all those <code>NA</code>s! I’m going to set my options so that warnings are suppressed for future code outputs to keep this post tidy.</p>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>opts_chunk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">message=</span>F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warning=</span>F)</span></code></pre></div>
</section>
<section id="modify-the-colors-and-shapes" class="level1">
<h1>Modify the colors and shapes</h1>
<p>Next let’s start changing our color and shape scales. We can change colors using <code>scale_color_manual()</code> and and filling in the <code>values</code> argument with a vector where the <strong>names of the vector match the names in the <code>col</code> in our <code>geom_point()</code> aesthetics.</strong></p>
<p>I define my <code>cols</code> in a vector outside the plotting code to keep everything cleaner. Note that the order we’re specifying here will continue throughout the rest of the plotting code!</p>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define colors for all geometries with a color argument</span></span>
<span id="cb16-2">cols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Severe hypoxia"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#b24745"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># red</span></span>
<span id="cb16-3">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intubated"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#483d8b"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># navy</span></span>
<span id="cb16-4">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Not intubated"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#74aaff"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lighter blue</span></span>
<span id="cb16-5">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Steroids"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffd966"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gold</span></span>
<span id="cb16-6">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Death"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000000"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># black </span></span></code></pre></div>
<p>After we set <code>values = cols</code>, the <code>name</code> argument is simply the title we want for our legend (I chose “Patient Status”).</p>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> cols, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient Status"</span>) </span>
<span id="cb17-3">p</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</section>
<section id="fix-the-legend" class="level1">
<h1>Fix the Legend</h1>
<p>You’ll notice that our legend does not match the changes we made to the shapes, size, or linetype right now. This is because our legend only contains information on the colors, because that’s all we’re mapping to the aesthetics of our geometries right now (in <code>geom_point</code> and <code>geom_line</code>. We can override the color legend aesthetics and still create a plot that shows correct and useful information.</p>
<p>We will do this by using the <code>guides()</code> function. We can control each aesthetic here. We will first override the <code>colors</code> legend with the code <code>guide_legend(override.aes = list(...))</code>.</p>
<p>This allows us to <em>change the shapes of the color legend</em> by specifying a vector with the shapes, size, and line types we want in the order the labels appear in the legend. If we don’t want a characteristic to appear on the legend, we will use <code>NA</code>.</p>
<p>I only want to show shapes for certain statuses (severe hypoxia, steroid administration, death), and not the intubation status of a patient, so I’ll set up my shape override vector accordingly. Note that the order in the legend follows the order of my color specification vector (<code>cols</code>).</p>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">shape_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># order matches `cols`:severe, intubation (yes/no), steroids, death</span></span>
<span id="cb18-2"></span>
<span id="cb18-3">p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(</span>
<span id="cb18-5">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb18-6">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> shape_override) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modify the color legend to include shapes</span></span>
<span id="cb18-7">                      )</span>
<span id="cb18-8">         ) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
<p>To remove the line through Death, Severe hypoxia, and Steroids in our legend, we can override the aesthetics for <code>linetype</code> with NA’s for those three labels. We will specify the default, <code>linetype=1</code>, for our intubation status color labels.</p>
<p>We can additionally override the stroke and size arguments to correspond to our point geometries.</p>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">line_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># order matches `cols`:severe, intubation (yes/no), steroids, death</span></span>
<span id="cb19-2">stroke_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># order matches `cols`:severe, intubation (yes/no), steroids, death</span></span>
<span id="cb19-3">size_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># order matches `cols`:severe, intubation (yes/no), steroids, death</span></span>
<span id="cb19-4"></span>
<span id="cb19-5">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb19-6">  p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(</span>
<span id="cb19-8">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb19-9">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke =</span> stroke_override,</span>
<span id="cb19-10">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> shape_override,</span>
<span id="cb19-11">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> line_override,</span>
<span id="cb19-12">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> size_override)</span>
<span id="cb19-13">                                )</span>
<span id="cb19-14">             )</span>
<span id="cb19-15">p</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="672"></p>
</div>
<p>Ok, the challenging parts are done! Now we can make some minor aesthetic edits using <code>labs</code>, <code>scale_x_continuous()</code>, and <code>theme()</code>. I won’t go into detail on these edits because they’re fairly self-explanatory, but check out the help files if you’re unsure what these arguments in theme do!</p>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Days since hospitalization"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">number"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treatment Timeline for N=30 Patients"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove extra white space </span></span>
<span id="cb20-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># text=element_text(family="Poppins", size=11),</span></span>
<span id="cb20-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>),</span>
<span id="cb20-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>),</span>
<span id="cb20-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb20-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>),</span>
<span id="cb20-9">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb20-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb20-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb20-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb20-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray30"</span>),</span>
<span id="cb20-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb20-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb20-16">  ) </span>
<span id="cb20-17">p</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/multiple-vars_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid" width="672"></p>
</div>
<p>Hope this is helpful! As always let me know if you have any feedback or suggestions. If you’d like to copy-paste the code, here it is:</p>
</section>
<section id="just-the-code" class="level1">
<h1>Just the Code</h1>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb21-2"></span>
<span id="cb21-3">dat_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/kathoffman/steroids-trial-emulation/main/data/dat_trt_timeline.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_types =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id  =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">steroids =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">severe =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>))</span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define colors for all geometries with a color argument</span></span>
<span id="cb21-6">cols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Severe hypoxia"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#b24745"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># red</span></span>
<span id="cb21-7">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intubated"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#483d8b"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># navy</span></span>
<span id="cb21-8">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Not intubated"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#74aaff"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lighter blue</span></span>
<span id="cb21-9">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Steroids"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffd966"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gold</span></span>
<span id="cb21-10">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Death"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000000"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># black </span></span>
<span id="cb21-11"></span>
<span id="cb21-12">shape_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># order matches `cols`:severe, intubation (yes/no), steroids, death</span></span>
<span id="cb21-13">line_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># order matches `cols`:severe, intubation (yes/no), steroids, death</span></span>
<span id="cb21-14">stroke_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># order matches `cols`:severe, intubation (yes/no), steroids, death</span></span>
<span id="cb21-15">size_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># order matches `cols`:severe, intubation (yes/no), steroids, death</span></span>
<span id="cb21-16"></span>
<span id="cb21-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modify swimmer data to 1) only show events if yes 2) have an id ordered by max follow up</span></span>
<span id="cb21-18">dat_swim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb21-19">   dat_long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb21-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">severe_this_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(severe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> day),</span>
<span id="cb21-21">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">steroids_this_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(steroids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> day),</span>
<span id="cb21-22">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death_this_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(death <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> day)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb21-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb21-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(day)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb21-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb21-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(id), max_day))</span>
<span id="cb21-27"></span>
<span id="cb21-28">dat_swim <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb21-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> intubation_status, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group=</span>id),</span>
<span id="cb21-31">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>steroids_this_day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Steroids"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>severe_this_day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Severe hypoxia"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>death_this_day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Death"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> cols, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient Status"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(</span>
<span id="cb21-38">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb21-39">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke =</span> stroke_override,</span>
<span id="cb21-40">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> shape_override,</span>
<span id="cb21-41">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> line_override,</span>
<span id="cb21-42">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> size_override)</span>
<span id="cb21-43">                                )</span>
<span id="cb21-44">             )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Days since hospitalization"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">number"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treatment Timeline for N=30 Patients"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove extra white space </span></span>
<span id="cb21-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># text=element_text(family="Poppins", size=11),</span></span>
<span id="cb21-48">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>),</span>
<span id="cb21-49">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>),</span>
<span id="cb21-50">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb21-51">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>),</span>
<span id="cb21-52">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb21-53">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb21-54">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb21-55">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb21-56">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray30"</span>),</span>
<span id="cb21-57">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb21-58">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb21-59">  ) </span></code></pre></div>
</section>
<section id="session-info" class="level1">
<h1>Session Info</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>R version 4.1.3 (2022-03-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Catalina 10.15.7

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] rmarkdown_2.13  gt_0.6.0        forcats_0.5.1   stringr_1.4.1  
 [5] dplyr_1.0.9     purrr_0.3.4     readr_2.1.2     tidyr_1.2.0    
 [9] tibble_3.1.8    ggplot2_3.3.6   tidyverse_1.3.1

loaded via a namespace (and not attached):
 [1] lubridate_1.8.0   assertthat_0.2.1  digest_0.6.29     utf8_1.2.2       
 [5] R6_2.5.1          cellranger_1.1.0  backports_1.4.1   reprex_2.0.1     
 [9] evaluate_0.15     httr_1.4.2        pillar_1.8.1      rlang_1.0.4      
[13] curl_4.3.2        readxl_1.4.0      rstudioapi_0.13   labeling_0.4.2   
[17] htmlwidgets_1.5.4 bit_4.0.4         munsell_0.5.0     broom_0.8.0      
[21] compiler_4.1.3    modelr_0.1.8      xfun_0.32         pkgconfig_2.0.3  
[25] htmltools_0.5.2   tidyselect_1.1.2  fansi_1.0.3       crayon_1.5.1     
[29] tzdb_0.3.0        dbplyr_2.1.1      withr_2.5.0       cabinets_0.6.0   
[33] grid_4.1.3        jsonlite_1.8.0    gtable_0.3.0      lifecycle_1.0.1  
[37] DBI_1.1.2         magrittr_2.0.3    scales_1.2.1      cli_3.3.0        
[41] stringi_1.7.8     vroom_1.5.7       farver_2.1.1      fs_1.5.2         
[45] xml2_1.3.3        ellipsis_0.3.2    generics_0.1.3    vctrs_0.4.1      
[49] tools_4.1.3       bit64_4.0.5       glue_1.6.2        hms_1.1.1        
[53] parallel_4.1.3    fastmap_1.1.0     yaml_2.3.5        colorspace_2.0-3 
[57] rvest_1.0.2       knitr_1.38        haven_2.5.0      </code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>programming</category>
  <guid>www.khstats.com/blog/trt-timelines/multiple-vars.html</guid>
  <pubDate>Wed, 08 Jun 2022 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/trt-timelines/crop_swimmer.png" medium="image" type="image/png" height="115" width="144"/>
</item>
<item>
  <title>An Illustrated Guide to Modified Treatment Policies, Part 1: Introduction and Motivation</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/lmtp/lmtp.html</link>
  <description><![CDATA[ 








<p><a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/Types_of_Interventions.jpg"> <img src="www.khstats.com/blog/lmtp/lmtp/mtp_summary.jpg" style="border:1px solid black;" width="100%&quot;"></a></p><a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/Types_of_Interventions.jpg">
</a><p><a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/Types_of_Interventions.jpg"></a></p>


<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>An Overview of Existing Methodology</li>
<li>Explanation and examples of Modified Treatment Policies</li>
<li>Capabilities of the Longitudinal Modified Treatment Policy (LMTP) framework</li>
</ol>
</section>
<section id="tldr" class="level1">
<h1>TLDR</h1>
<ul>
<li>Modified Treatment Policies are a collection of methods for <strong>defining</strong> and <strong>operationalizing</strong> interesting <strong>causal inference questions</strong>.</li>
<li>The unifying theme in this collection of methods is that they allow us to study hypothetical interventions, or treatment policies, that are <strong>extremely flexible</strong>.</li>
<li>This flexibility enables us to <strong>answer more realistic scientific questions</strong> in both <strong>cross-sectional and longitudinal settings</strong>, with <strong>multivariate, categorical, or continuous exposures</strong>.</li>
</ul>
<hr>
<!-- Lastly, before I begin, please note a few sets of words I’ll use interchangeably: -->
<!-- - Exposure and treatment -->
<!-- - Treatment policy and intervention -->
</section>
<section id="an-overview-of-existing-methodology" class="level1">
<h1>An Overview of Existing Methodology</h1>
<section id="lets-review-causal-inference-at-a-high-level." class="level2">
<h2 class="anchored" data-anchor-id="lets-review-causal-inference-at-a-high-level.">Let’s review causal inference at a high level.</h2>


<title>
HTML Image as link
</title>


<a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/comics/universe_comic.jpeg"> <img src="www.khstats.com/blog/lmtp/universe_comic.jpeg" style="float:right; padding-left:10px;" width="60%&quot;"> </a>


<p>Most modern causal inference methods utilize the <strong>potential outcomes framework</strong>, which asks questions of <strong>what would happen</strong> in a <strong>hypothetical world</strong> in which we could <strong>manipulate exposures</strong> and then <strong>compare outcomes for the same observations under different exposures</strong>.</p>
<p>Questions with binary exposures typically take the form, “<strong>what would happen if everyone had received the exposure compared to if no one had received the exposure</strong>?” Similarly, questions with multi-level or continuous exposures often take the form “what would happen if everyone had received <em>this much</em> of the exposure, versus if everyone had received <em>that much</em> of the exposure?” Study designs like this which compare all observations under two (or more) specific levels of exposure are called <strong>static interventions</strong>.</p>
</section>
<section id="static-interventions-are-a-common-approach-in-causal-inference-but-a-few-problems-frequently-arise." class="level2">
<h2 class="anchored" data-anchor-id="static-interventions-are-a-common-approach-in-causal-inference-but-a-few-problems-frequently-arise.">Static interventions are a common approach in causal inference, but a few problems frequently arise.</h2>
<h3 style="color: #C41E3A;" class="anchored">
<p>Problem #1: Positivity Violations</p>
</h3>
<p>A key requirement for causal inference is the <strong>positivity assumption</strong>. This means if you are comparing two exposures (say, treatments A vs.&nbsp;B), <strong>for every covariate combination</strong> in your dataset, there must be <strong>individuals who sometimes get treatment A and sometimes get treatment B</strong>. Intuitively, this ensures there is enough “experimentation” in the dataset that effects can be estimated.</p>




<a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/comics/positivity_comic.jpeg"> <img src="www.khstats.com/blog/lmtp/positivity_comic.jpeg" style="float:right; padding-left:20px;" width="55%&quot;"> </a>


<p>As you can imagine, this often does not hold true. Sometimes there are <strong>theoretical positivity violations</strong>: for example, if we are studying the effects of a drug for heart disease, cardiologists might say this drug is never given to people who also have chronic kidney disease because the drug damages the kidneys. The probability of a patient receiving the drug conditional on having kidney disease will be zero in all datasets.</p>
<p>Other times we see <strong>practical positivity violations</strong>, meaning that due to small sample size and/or random chance, there are certain covariate combinations in which few observations receive the treatment of interest in our dataset. Perhaps in a dataset to study the previous example’s heart disease drug, due to random chance, there are no women aged 40-60 years who received the drug in the data. It is not a theoretical positivity violation (i.e.&nbsp;doctors would give the drug to women in this age group), but it is a practical violation nonetheless as it yields small or zero treatment probabilities.</p>
<p>Positivity issues must be addressed, preferably in the planning stage of a study.</p>
<h3 style="color: #C41E3A;" class="anchored">
<p>Problem #2: Unrealistic Interventions</p>
</h3>
<p>A second problem arises with static interventions: there are many situations in which it is <strong>not realistic to set everyone’s hypothetical exposure to the same value</strong>. Let’s take an example where we are studying the effect of physical activity. A static intervention approach might ask, “<em>what would happen if everyone exercised 30 minutes a week?</em>” Yet there is no actual intervention we could translate to the real world to make everyone exercise 30 minutes a week, i.e.&nbsp;there is no policy a decision-maker could enact to make this happen, even approximately. We could estimate an outcome under this policy, but this unrealistic intervention will likely have a meaningless result.</p>
<blockquote class="blockquote">
<p>Notably, you can have an unrealistic intervention without having a positivity violation. For example, we may have access to a large data set with people of all possible covariate combinations who exercise 30 minutes a week; however, it is still scientifically not meaningful or realistic to evaluate a world in which everyone exercises the exact same amount of time.</p>
</blockquote>




<p><a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/Types_of_Interventions.jpg"> <img src="www.khstats.com/blog/lmtp/lmtp/static_graph.jpg" width="100%&quot;"> </a></p>
<figcaption>
<small>A graphical example of a static intervention on the pollution measurement of Air Quality Index (AQI). On the left we see the naturally observed exposure values for one day in the US, and on the right we see what the hypothetical exposure values would look like under a static intervention in which all study subjects had an AQI exposure of 20.</small>
</figcaption>


<p><br></p>
</section>
<section id="one-possible-solution-to-the-problems-posed-by-static-interventions-is-dynamic-interventions." class="level2">
<h2 class="anchored" data-anchor-id="one-possible-solution-to-the-problems-posed-by-static-interventions-is-dynamic-interventions.">One possible solution to the problems posed by Static Interventions is Dynamic Interventions.</h2>
<p><strong>Dynamic treatment policies</strong> or interventions ask what would have happened in a hypothetical world where <strong>exposure is assigned based on each observation’s covariate history</strong>.</p>
<p>For example, let’s say we want to study the effect of pollution on asthma attacks in the United States. A simple study design could be to find a representative sample of individuals living with asthma, measure their pollution exposure via the <a href="https://www.airnow.gov/aqi/aqi-basics/">Air Quality Index (AQI)</a> on one calendar day (along with other confounders), and record whether an asthma attack occurs within a specified time frame.</p>
<p>Although I don’t study pollution, I know it is <strong>scientifically impossible</strong> for everyone in the US to receive the same air quality exposure, even in a world with countless environmental regulations. Natural and geographical forces such as wind, wildfires, elevation, proximity to the ocean, etc. make it <strong>unrealistic to study a single air quality exposure value for everyone</strong>.</p>
<p>We can try getting around these issues by evaluating a dynamic intervention that depends on baseline characteristics of the person or environment. For example, “<em>if a person lives in an urban area, make their AQI exposure 40, and if a person lives in a residential area, make their AQI exposure 20.</em>”</p>




<p><a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/Types_of_Interventions.jpg"> <img src="www.khstats.com/blog/lmtp/lmtp/dynamic_graph.jpg" width="100%&quot;"> </a></p>
<figcaption>
<small>An example of a naturally observed exposure of AQI in the US (left) and what it would look like under a hypothetical dynamic intervention in which all urban counties have an AQI of 40 and rural counties have an AQI of 20 (right).</small>
</figcaption>


<p><br> This intervention may <strong>reduce positivity violations</strong> and <strong>lead to a more realistic study</strong>, yet there are <strong>many other interesting questions</strong> about air pollution <strong>we still cannot answer</strong> with dynamic treatment policies.</p>
<h3 style="color: #C41E3A;" class="anchored">
<p>Problem #3: Static and dynamic interventions cannot depend on the observed exposure</p>
</h3>
<p>Another <strong>key limitation</strong> with both static and dynamic interventions is that the <strong>hypothetical exposure value is completely determined by each observation’s baseline characteristics</strong> rather than the observed exposure. However, there are many <strong>interesting scientific questions</strong> about interventions that <strong>depend on the actual exposure received</strong>. For example, a more relevant question for our pollution example could be, “<em>what would have happened in a hypothetical world where everyone’s AQI exposure was 10% lower than what we observed?</em>” Or, “<em>what if the reduction had been 20 units for individuals living in an area with a daily AQI &gt; 100?</em>”</p>
<blockquote class="blockquote">
<p>What questions, or hypothetical interventions, would we propose if we did not feel limited by statistical methodology?</p>
</blockquote>
<!-- <center> ✨✨✨</center> -->
</section>
</section>
<section id="modified-treatment-policies-mtps" class="level1">
<h1>Modified Treatment Policies (MTPs)</h1>
<p>We can solve all three problems mentioned above with <strong>Modified Treatment Policies (MTPs)</strong>. MTPs describe <strong>hypothetical interventions which depend on the observed value of treatment</strong>, possibly in addition to baseline characteristics. We already mentioned two potential MTPs for our pollution example: “<em>what if we reduced everyone’s AQI exposure by 20%?</em>” and “<em>what if we reduced individuals living in an area with a daily AQI &gt; 100 by 20 units?</em>”</p>




<p><a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/Types_of_Interventions.jpg"> <img src="www.khstats.com/blog/lmtp/lmtp/modified_graph.jpg" width="100%&quot;"> </a></p>
<figcaption>
<small>An example of a naturally observed exposure of AQI in the US (left) and what it would look like under a hypothetical modified treatment policy in which all observations have an AQI exposure 20% less than what was actually observed (right).</small>
</figcaption>


<p><br> Other interesting MTPs unrelated to pollution might be questions along the lines of:</p>




<a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/comics/climbing_comic.jpg"> <img src="www.khstats.com/blog/lmtp/climbing_comic.JPG" style="float:right" width="40%&quot;"> </a>


<ul>
<li>
<em>How would recovery rates change if we decreased surgery times for surgeries lasting longer than four hours?</em>
</li>
<li>
<em>How would diabetes incidence rates change if everyone with a Body Mass Index (BMI) &gt;30 lowered their BMI by 2 units?</em>
</li>
<li>
<em>How would medical school admission rates change if all students with MCAT scores less than 500 increased their score by 5 points?</em>
</li>
</ul>
<p><strong>MTPs are an excellent solution</strong> for getting around positivity issues to analyze <strong>more feasible and realistic interventions</strong>. Hopefully this list inspires you to think of MTPs relevant to your own field of study!</p>
</section>
<section id="a-general-and-unifying-framework-extending-to-longitudinal-settings" class="level1">
<h1>A general and unifying framework extending to longitudinal settings</h1>
<p>MTPs for cross-sectional, or point-treatment, studies have actually been <strong>generalized to exposures and covariates measured at multiple time points</strong>, i.e.&nbsp;longitudinal studies. We will refer to this generalization as <strong>Longitudinal Modified Treatment Policies (LMTPs)</strong>, for which there is a corresponding <code>R</code> package called <code>lmtp</code>.</p>
<section id="longitudinal-data-analysis-complexities" class="level2">
<h2 class="anchored" data-anchor-id="longitudinal-data-analysis-complexities">Longitudinal data analysis complexities</h2>
<p>Longitudinal studies pose certain crucial and often-overlooked issues, most notably time-dependent confounders. <strong>Time-dependent confounders are variables which change over time, affect the likelihood of both future exposure and the outcome, and are affected by previous exposure.</strong></p>
<p>A key time-dependent confounder for the relationship between pollution and asthma attacks could be weather. Hot, humid air causes air quality to decrease, and it also aggravates pulmonary conditions like asthma. I will explain time-dependent confounders more in later posts of this series, but for now, note that <strong>LMTP</strong> (the method and <code>R</code> package) <strong>properly accommodates time-dependent confounders.</strong></p>
</section>
<section id="lmtp-methodology-and-software-capabilities" class="level2">
<h2 class="anchored" data-anchor-id="lmtp-methodology-and-software-capabilities">LMTP methodology and software capabilities</h2>
<p><strong>This LMTP methodology and <code>lmtp</code> software allows the user to handle:</strong></p>




<a href="https://github.com/nt-williams/lmtp"> <img src="www.khstats.com/blog/lmtp/lmtp_sticker.png" alt="LMTP sticker" style="float:right; padding-left:20px;" width="40%&quot;"> </a>


<ul>
<li>
Cross-sectional or longitudinal exposures
</li>
<li>
Binary, categorical, or continuous exposures
</li>
<li>
Exposures that are dependent on time, i.e.&nbsp;delaying the occurrence of the exposure as an intervention
</li>
<li>
Multiple exposures
</li>
<li>
Binary, continuous, or time-to-event outcomes
</li>
<li>
Informative loss to follow-up/censoring
</li>
<li>
Competing risks
</li>
<li>
Survey weights
</li>
</ul>
<p><strong>This could translate to longitudinal research questions such as:</strong></p>
<ul>
<li>
<em>How would asthma rates change if we reduced two pollutants (fine particulate matter and ozone) by 10% every day for a year?</em>
</li>
<li>
<em>How would drug overdose numbers change if Naloxone access laws were implemented one year later?</em>
</li>
<li>
<em>How would length of intubation for intubated COVID-19 patients change if patients who never received steroids were given a standard dose of steroids upon intubation? (Death of other causes is a competing risk and discharge is an informative loss to follow up.)</em> <!-- - *How would your maximum climbing grade have changed by the end of the year if you had gone to the climbing gym one hour more every week?* -->
</li>
</ul>
<!-- <p align="center"><iframe src="https://giphy.com/embed/SIJiRqIcb6CJVLs9CX" width="480" height="270" frameBorder="0" allowFullScreen></iframe><p></p> -->
<hr>
</section>
</section>
<section id="resources-to-learn-more" class="level1">
<h1>Resources to learn more</h1>
<p>Future posts will walk through examples of applications like these using the <code>R</code> package <code>lmtp</code>. In the meantime, a recent summary of the literature is described in <a href="https://www.tandfonline.com/doi/full/10.1080/01621459.2021.1955691"><em>Nonparametric Causal Effects Based on Longitudinal Modified Treatment Policies</em></a> by Díaz et al.&nbsp;Although the Díaz paper and accompanying <code>R</code> package are new, LMTP is an extension of causal inference concepts, methodology, and software that are well-established and steadily becoming more widely used.</p>
<p><strong>Here are several other resources I found useful in writing this post:</strong></p>
<ul>
<li>Nick Williams’ (author of the <code>lmtp</code> package) <a href="https://towardsdatascience.com/an-introduction-to-estimating-the-causal-effects-of-feasible-interventions-e07ed45136ff">blog post</a> introducing MTPs and using <code>lmtp</code> for an example with LSAT scores and law school admission rates.</li>
<li><a href="https://cdn1.sph.harvard.edu/wp-content/uploads/sites/1268/2021/03/ciwhatif_hernanrobins_30mar21.pdf"><em>What If</em></a> by Miguel Hernán and James Robins, a freely available book, has an entire section on longitudinal data and time-dependent confounding (see Part III, Chapters 19-21).</li>
<li><em>Effects of multiple interventions.</em> is a section in the book <em>Comparative quantification of health risks: global and regional burden of disease attributable to selected major risk factors</em> by Robins et al.&nbsp;which brings up many of the issues which are later solved by MTPs.</li>
<li><a href="https://pubmed.ncbi.nlm.nih.gov/23913589/"><em>Estimation of the effect of interventions that modify the received treatment</em></a> by Haneuse and Rotnitzky and <a href="https://pubmed.ncbi.nlm.nih.gov/21977966/"><em>Population intervention causal effects based on stochastic interventions</em></a> by Diaz and van der Laan both describe the problem well, contain helpful examples, and make advances in the methodology for MTPs.</li>
<li><a href="https://www.degruyter.com/document/doi/10.1515/em-2012-0001/html?lang=en"><em>Identification, Estimation and Approximation of Risk under Interventions that Depend on the Natural Value of Treatment Using Observational Data</em></a> by Young et. al (2014) is a publicly available paper that also provides a good summary of the literature and fundamental progress to the methods of MTPs (in this paper they are “interventions which depend on the natural value of treatment”).</li>
</ul>
<p>As with all my posts, I welcome feedback from my intended audience and/or experts of causal inference. I am also open to suggestions of other resources to include in the reference section. Check back later for posts walking through specific examples and <code>R</code> code!</p>


</section>

 ]]></description>
  <category>statistics</category>
  <guid>www.khstats.com/blog/lmtp/lmtp.html</guid>
  <pubDate>Thu, 07 Apr 2022 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/lmtp/lmtp/mtp_summary.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How many ways are there to get a SOFA Score of 10?</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/sofa/index.html</link>
  <description><![CDATA[ 




<p>The <strong>Serial Organ Failure Assessment (SOFA)</strong> is a measure used in hospitals to define and assign <strong>severity of illness</strong> in acutely ill patients. The score measures general dysfunction in <strong>six vital organ systems</strong>: the lung, brain, heart, liver, kidney, and blood. Each of these organs receive an <strong>integer subscore, ranging from 0 to 4</strong>, using routinely collected labs and vital signs. The <strong>sum of the six subscores, ranging from 0 to 24, creates a patient’s SOFA score</strong>. The higher a patient’s SOFA score, the sicker they are. There are plenty of <a href="https://www.mdcalc.com/sequential-organ-failure-assessment-sofa-score">online calculators</a> for SOFA scores that you can check out you’re curious about exactly what goes into each of the subscores.</p>
<p>SOFA scores are useful as a quick live-check for physicians of a patient’s overall well-being, but they’re moreso used extensively in critical care observational research. We use SOFA scores to adjust for severity of illness as a confounder in observational studies, and they’re often used as inclusion criteria for deciding which patients are eligible for therapies in a Randomized Control Trial (RCT). There are plenty of pros and cons of SOFA, but one aspect of SOFA scores that is perhaps non-intuitive for many physicians is just how many ways there are for a patient with a drastically different clinical profile to have the same SOFA score as another patient.</p>
<p>Recently a pulmonologist who I work closely with, <a href="https://twitter.com/edschenck">Dr.&nbsp;Edward Schenck</a>, sent me an email with the subject line “Help!!” I clicked on his email, and found an interesting question:</p>
<blockquote class="blockquote">
<p><strong><em>There is only one way for a patient to have a SOFA score of 0 (all six subscores are 0). There are six ways a patient could have a SOFA score of 6 (one of the six subscores is 1). But how many ways are there for a patient to get a SOFA score of 10?</em></strong></p>
</blockquote>
<p>It was a serious question from him, but a beautiful mid-day brainteaser break for me. What <em>are</em> the number of possible combinations to get every possible SOFA score, from 0 to 24?</p>
<!-- I’ll solve this problem first using R code, then combinatorics, and finally I’ll talk about the implications this has in acute care research, including randomized clinical trials for acute-care therapies (COVID-19 included!) which use SOFA scores as an inclusion criteria. -->
<p>We can solve this problem with only a few lines of code in <code>R</code> by using <code>expand.grid()</code> to make all the combinations of the 6 scores, which can take values <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, or <code>4</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">combos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lung"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"liver"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"heart"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blood"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brain"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kidney"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(combos,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   lung liver heart blood brain kidney
1     0     0     0     0     0      0
2     1     0     0     0     0      0
3     2     0     0     0     0      0
4     3     0     0     0     0      0
5     4     0     0     0     0      0
6     0     1     0     0     0      0
7     1     1     0     0     0      0
8     2     1     0     0     0      0
9     3     1     0     0     0      0
10    4     1     0     0     0      0
11    0     2     0     0     0      0
12    1     2     0     0     0      0
13    2     2     0     0     0      0
14    3     2     0     0     0      0
15    4     2     0     0     0      0
16    0     3     0     0     0      0
17    1     3     0     0     0      0
18    2     3     0     0     0      0
19    3     3     0     0     0      0
20    4     3     0     0     0      0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">combos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_sofa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(combos)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(combos,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   lung liver heart blood brain kidney total_sofa
1     0     0     0     0     0      0          0
2     1     0     0     0     0      0          1
3     2     0     0     0     0      0          2
4     3     0     0     0     0      0          3
5     4     0     0     0     0      0          4
6     0     1     0     0     0      0          1
7     1     1     0     0     0      0          2
8     2     1     0     0     0      0          3
9     3     1     0     0     0      0          4
10    4     1     0     0     0      0          5
11    0     2     0     0     0      0          2
12    1     2     0     0     0      0          3
13    2     2     0     0     0      0          4
14    3     2     0     0     0      0          5
15    4     2     0     0     0      0          6
16    0     3     0     0     0      0          3
17    1     3     0     0     0      0          4
18    2     3     0     0     0      0          5
19    3     3     0     0     0      0          6
20    4     3     0     0     0      0          7</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">sofa_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(combos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_sofa)</span>
<span id="cb5-2">sofa_counts</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
   0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15 
   1    6   21   56  126  246  426  666  951 1246 1506 1686 1751 1686 1506 1246 
  16   17   18   19   20   21   22   23   24 
 951  666  426  246  126   56   21    6    1 </code></pre>
</div>
</div>
<p>We can plot those numbers using <code>ggplot2</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb7-2"></span>
<span id="cb7-3">combos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(total_sofa) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(total_sofa, n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatC</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">big.mark=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>total_sofa, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend=</span>total_sofa, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend=</span>n)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nudge_y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total SOFA Score"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Combinations"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span>scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comma_format</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"navy"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick2"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb7-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb7-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb7-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb7-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb7-20">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb7-21">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb7-22">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>)</span>
<span id="cb7-23">        ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of subscore combinations per SOFA score"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1800</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1600</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodgerblue2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>())</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/sofa/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<!-- ## Solving with Combinatorics  -->
<!-- This problem is akin to rolling a five-sided dice six times and then summing the numbers. We can determine the probability of getting each total. This Wolfram Alpha article walks through the proof. -->



 ]]></description>
  <category>programming</category>
  <guid>www.khstats.com/blog/sofa/index.html</guid>
  <pubDate>Thu, 10 Feb 2022 05:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/img/sofa/sofa-crop.png" medium="image" type="image/png" height="82" width="144"/>
</item>
<item>
  <title>Becoming a Biostatistician: FAQs for ‘A Day in the Life of a Biostatistician’</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/ditl/ditl-followup.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>To my surprise since writing it, I’ve received hundreds of emails about my first blog post, <a href="https://www.khstats.com/blog/ditl-biostats/">“Day in the Life of a Biostatistician”</a>. I really enjoy hearing from everyone who reaches out, but I thought I’d give detailed answers to the most common questions I’ve received in this follow up post. I first published this in January 2021 and last updated it in August 2022.</p>
</blockquote>
<p><strong><em>Caveat all my answers with “this is just one early-career biostatistician’s opinion,” please!</em></strong></p>
<hr>
<p><strong>What do you recommend majoring in to become a (bio)statistician?</strong></p>
<p>If you’re still early in your undergraduate education, I think it is best to major in statistics or math and supplement those classes with specific applications of statistics that interest you. Courses in biological science (e.g.&nbsp;genetics) or issues in healthcare (e.g.&nbsp;medical ethics, health economics) are all beneficial if you’re specifically interested in medical and biological applications of statistics. Any computer science courses you’re able to fit into your schedule will also help.</p>
<p>If you’re too far along in your current degree or you already finished college, not to worry! Depending on how much time you have before you apply to school, you should take Calculus I-III and Linear Algebra equivalents. This is a pretty standard requirement for most M.S. programs. I wish I had also taken a class in mathematical proofs.</p>
<p><strong>Did you find the transition from biological sciences to statistics to be difficult?</strong> <em>(For those who haven’t read my DITL post, I majored in Biochemistry and had not taken the prerequisite math courses since my freshman year of college.)</em></p>
<p>Yes, absolutely. I don’t want to scare anyone away from going into biostatistics, but it was a difficult transition for me and required a lot of effort to catch up. I underestimated the transition to learn graduate level statistics after a years-long hiatus from math. I had to relearn many concepts from calculus and teach my brain to learn high-level math after years of studying biology and chemistry. I say this not to discourage you(!), but so that you understand you may feel very behind when you first begin your journey in biostatistics. It doesn’t mean you cannot or will not be successful.</p>
<p><strong>Did you know how to code before you started school and did you find learning to code to be difficult?</strong></p>
<p>No, I didn’t know how to code at all before starting graduate school (you might be reading this thinking, <em>why did anyone let her in?!</em> and I honestly don’t know, either). I did not find learning to code particularly easy at first, but once I got over the initial learning curve after a few months in school, I found learning to code much easier than statistical theory. This might be because there’s a ton of resources to learn to code online, whereas math is usually harder to find good resources to learn independently.</p>
<p><strong>Do you have advice on [insert school name here]?</strong></p>
<p>I don’t feel like i’m in a position to give advice on specific programs as I only applied to one program, and my reason was purely financially-based. If I <em>had</em> applied to multiple schools I would’ve still tried to minimize post-school debt. Also, grad school can be very stressful, so pick a school that is in either a location you think you’ll enjoy living, and/or where you will have a good support system around you. I would also recommend trying to talk to current students beforehand if you’re deciding between multiple schools.</p>
<p><strong>I’m starting a Masters in Biostatistics soon. Do you have advice for grad school?</strong></p>
<p>Here’s what worked for me… take from it what you want! I have a lot of advice because I learned a lot of things the hard way. :-)</p>
<ol type="1">
<li><p>Don’t be afraid to ask a lot of questions or to be a regular presence at office hours. I found that even when I was struggling quite a bit, professors wanted to help me when they saw I was putting in the effort to understand. It can be stressful to ask questions that you think you probably <em>should</em> know the answer to, but I always thought, “I’d rather ask this to my professor than not know it in front of my future boss.” Plus, you might need letters of recommendations or references, so you want your professors to be able to speak to your personality.</p></li>
<li><p>Try to strike a good balance between learning to code and learning the theory. I attended a theory-heavy program (a one-credit SAS coding class comprised my entire formal programming education) so I spent a lot of time learning to code on my own, especially in the summer between my first and second years. It seems like more schools are shifting to an applied curriculum, so if you attend one of those programs, I would put independent effort into understanding the underlying theory.</p></li>
<li><p>I found it helpful to get to know everyone in my cohort. Being on friendly terms with classmates benefited me on countless occasions throughout my Masters and afterwards. I understand it can be tough to put yourself out there, but it really will make your life easier when you’re stuck on a homework question or just generally feeling overwhelmed by school. My motto was always, “everyone here is likely awkward because we’ve all decided to study statistics, so I really have nothing to lose by ‘making the first move’ towards friendly conversation.”</p></li>
<li><p>Don’t obsess over grades. I did this a little when I was in school and it was a complete waste of time. No one asked for my grades when I applied for jobs. Focus on learning the concepts and being able to explain what you’ve learned to audiences with varying degrees of technical background. Grades are an imperfect measure of your learning (and to be completely honest, they are often skewed due to a portion of students having materials from previously taught courses) so use them as feedback rather than an absolute measure of success. I TA now and it drives me <em>crazy</em> when students obsess over a less-than-perfect grade rather than their less-than-perfect understanding of a concept.</p></li>
<li><p>I cannot emphasize this enough: don’t question your abilities if concepts don’t seem to come as “naturally” as they do for your classmates, especially if they’ve taken more quantitative courses than you (e.g.&nbsp;math, stats, computer science, engineering majors). They’ve probably already seen the foundation of what you’re learning in various forms before, and that matters <em>so much</em>! It took me a while to realize this, and I wasted a lot of time worrying I’d never be a good statistician because I had to study so much longer to understand concepts at even a passing level.</p></li>
</ol>
<p><strong>Should I do an internship during grad school? Do you have any advice on getting an internship?</strong></p>
<p>Sure, apply to internships! I applied to several for the summer between my first and second year of my Masters. There is a downside that they often don’t pay that well, and it can be costly to live in a new city for just 2-3 months. I ended up not taking any of my internship offers for that reason, and ultimately doing summer research in a lab at my university. I don’t think this hurt my final job prospects at all. My advice for getting internships is to review your CV/cover letter with your school’s career counselors, and then apply early and often. If you don’t have any relevant work experience (I didn’t), highlight in your cover letter and CV how your projects in school thus far have prepared you to do good work as an intern. For example, I discussed the dataset we used in my first semester regression course as a way of highlighting applied skills (exploratory data analysis, assumptions of regression, etc.).</p>
<p>As for summer research, it worked for me to email professors explaining that I was interested in their research and asking if we could set up a time to briefly chat. I used to get really nervous for these meetings before someone informed me that pretty much all professors <em>love</em> to talk about their research. Even if they don’t have any research opportunities at the moment, it’s a good way to learn about aspects of biostatistics you didn’t know existed.</p>
<p><strong>Do you feel intellectually stimulated as a biostatistician?</strong></p>
<p>Absolutely. This is, hands down, the reason I like biostatistics so much. I will never know all there is to know about biostatistics (not even close!) and there are so many directions to grow.</p>
<p><strong>Do you feel financially rewarded as a biostatistician?</strong></p>
<p>Also yes. I’ve been able to live comfortably and save money while working in academic research right out of school (we notoriously make lower salaries than positions in pharmaceutical or tech companies). If you’re curious about specific salaries, you might like this <a href="https://magazine.amstat.org/blog/2019/08/01/mastergraduate/">recent ASA survey of (bio)statistics graduates</a>. Note that when you’re looking at salaries online, you can also look at jobs with the title “data scientist,” which you should have the base qualifications for after you receive a Masters in (Bio)statistics.</p>
<p><strong>Do you think a PhD is necessary for your career growth?</strong></p>
<p>I’m four years into my career and don’t yet feel stunted, so that’s a good sign, I think! No, I don’t think a PhD is necessary to have a stable, rewarding career. This is not to say I’ll never apply, because I do really love learning new statistical theory, but I do not think it is necessary and can see many routes to having a “successful” career without one.</p>
<p><em>Update, August 2023, I did apply! I am starting the University of Washington’s Biostatistics PhD program soon, and I wrote about my motivation and application process <a href="">here</a>.</em></p>
<p><strong>What’s your favorite part of your job?</strong></p>
<p>I love when I am able to focus on one project and optimize my code to be really well documented and efficient. I also like improving my understanding of the biology or clinical domain knowledge for specific projects. Interestingly, one of my least favorite parts of the job <em>used</em> to be writing and editing manuscripts, but as I’ve gained experience reading and writing scientific papers, I enjoy this much more.</p>
<p><strong>What’s your least favorite part of your job?</strong></p>
<p>It is working with individuals who either believe they have equivalent knowledge to me in statistics after taking an introductory course, or who know very little about statistics, do not desire to learn more, and yet do not trust my knowledge. Both types of people tend to want to be very hands-on in my analyses and this usually results in me explaining (to little avail) why we cannot do the analysis they think we should do. I don’t think this is unique to my job or even academia, however, it is definitely my least favorite part.</p>
<hr>
<p>That’s all for now! I hope it is helpful. As always feel free to reach out if you have other questions; I try to answer my messages to this <a href="mailto:kathoffman.stats@gmail.com">email</a> once a week. You can also read about my friend Kim’s career as a biostatistician at a pharmaceutical CRO in this <a href="https://www.khstats.com/blog/ditl/pharma-cro/">previous blog post</a>.</p>
<p>Cheers,</p>
<p>Kat</p>



 ]]></description>
  <category>career</category>
  <guid>www.khstats.com/blog/ditl/ditl-followup.html</guid>
  <pubDate>Fri, 15 Jan 2021 05:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/ditl/faq.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>An Illustrated Guide to TMLE, Part III: Properties, Theory, and Learning More</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/tmle/tutorial-pt3.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>The is the third and final post in a three-part series to help beginners and/or visual learners understand Targeted Maximum Likelihood Estimation (TMLE). In this section, I discuss more <strong>statistical properties of TMLE</strong>, offer a brief <strong>explanation for the theory behind TMLE</strong>, and provide <strong>resources for learning more</strong>.</p>
</blockquote>
<hr>
<section id="properties-of-tmle" class="level1">
<h1>Properties of TMLE 📈</h1>
<p>To reiterate a point from <em>Parts I</em> and <em>II</em>, a main motivation for TMLE is that it <strong>allows the use of machine learning algorithms while still yielding asymptotic properties for inference</strong>. This is notably <em>not</em> true for many estimators.</p>
<p>For example, in <a href="https://khstats.com/blog/tmle/tutorial-pt2"><em>Part II</em></a> we walked through TMLE for the Average Treatment Effect (ATE). Two frequently used alternatives to estimating the ATE are G-computation and Inverse Probability of Treatment Weighting (see <a href="https://khstats.com/blog/tmle/tutorial-pt2/#step-1-estimate-the-outcome"><em>Part II, Step 1</em></a> and <em>references</em>). In general, neither yield valid standard errors unless <em>a-priori</em> specified parametric models are used, and this reliance on parametric assumptions can bias results. There are many simulation studies that show this.</p>
<p>Another beneficial property of TMLE is that it is a <strong>doubly robust</strong> estimator. This means that if either the regression to estimate the expected outcome, or the regression to estimate the probability of treatment, are correctly specified (formally, their bias goes to zero as sample size grows large, meaning they are <strong>consistent</strong>), the final TMLE estimate will be consistent.</p>
<p>If both regressions are consistent, the <strong>final estimate will reach the smallest possible variance at a rate of</strong> <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7Bn%7D">, which is the fastest possible rate of convergence and equivalent to parametric maximum likelihood estimation. The reason we use superlearning for estimating the outcome and treatment regressions is to give us the best possible chance of having two correctly specified models and obtaining an <strong>efficient estimate</strong>.</p>
<p><img src="www.khstats.com/blog/tmle/tmle_props.png" class="img-fluid"></p>
<p>Even among other doubly robust estimators, TMLE is appealing because its estimates will always stay within the bounds of the original outcome. This is because it is part of a class of <strong>substitution estimators</strong>. There is another class of doubly robust, semiparametric estimation methods frequently used in causal inference that are referred to as <strong>one-step estimators</strong>, but they can sometimes yield final estimates that are outside the original outcome scale. The one-step estimator for the ATE is called <strong>Augmented Inverse Probability Weighting (AIPW)</strong>.</p>
</section>
<section id="why-does-tmle-work" class="level1">
<h1>Why does TMLE work? ✨</h1>
<p>Truly understanding why TMLE works requires semiparametric theory that falls far outside the scope of this tutorial. However, the theory is interesting, so I’ll give a brief, high-level explanation, and then you can look at the references if you’re curious to learn more. Importantly, the explanation I outline here is more than sufficient and certainly not necessary to appropriately implement TMLE as an analyst.</p>
<p><strong>TMLE relies on the following ideas:</strong></p>
<ol type="1">
<li><p>Some estimands allow for <strong>asymptotically linear estimation</strong>. This means that estimators can be represented as sample averages (plus a term that converges to zero).</p></li>
<li><p>The quantities being averaged for asymptotically linear estimators are called <strong>influence functions</strong>. An influence function is a function that quantifies how much influence each observation has on the estimator. For this reason, it is very <strong>useful to characterize the variance of the estimator</strong>. In parametric maximum likelihood estimation, the influence function is related the score function.</p></li>
<li><p>The <strong>efficient influence function</strong> (EIF) is the influence function that achieves the efficiency bound (think Cramer Rao Lower Bound from parametric maximum likelihood estimation) and <strong>can be used to create efficient estimators.</strong></p></li>
<li><p>If we want to <strong>construct an estimator that is efficient</strong>, we can take advantage of the EIF to endow the estimator with useful asymptotic properties.</p></li>
</ol>
<p>This is the reason TMLE allows us to use machine learning models “under the hood” while still obtaining asymptotic properties for inference: our <strong>estimand</strong> of interest admits <strong>asymptotically linear estimation</strong>, and we are <strong>using properties of the EIF</strong> to <strong>construct an estimator</strong> with <strong>optimal statistical properties</strong> (e.g.&nbsp;double robustness).</p>
</section>
<section id="resources-to-learn-more" class="level1">
<h1>Resources to learn more</h1>
<p>I could only cover so much in this post, but here are the resources I’ve used the most to learn about TMLE, semiparametric estimation, and causal inference. If you are new to any or all of it, there is a good chance it will take <em>several</em> reads of these materials before the concepts begin to make any sense. Don’t get discouraged!</p>
<section id="tmle" class="level3">
<h3 class="anchored" data-anchor-id="tmle">TMLE</h3>
<ul>
<li><p>The paper I referred to most often while learning TMLE was <a href="https://academic.oup.com/aje/article/185/1/65/2662306"><em>Targeted Maximum Likelihood Estimation for Causal Inference in Observational Studies</em></a> by Megan S. Schuler and Sherri Rose. It has a nice step-by-step written explanation and details the statistical advantages of TMLE for an applied thinker.</p></li>
<li><p>I also really like the written explanations in the <a href="https://link.springer.com/book/10.1007/978-1-4419-9782-1"><em>Targeted Learning</em></a> book (Chapters 4 and 5) by Mark van der Laan and Sherri Rose. The notation was often too difficult for me to follow, but the words themselves make a lot of sense.</p></li>
<li><p>Miguel Angel Luque-Fernandez wrote an <a href="https://migariane.github.io/TMLE.nb.html">excellent bookdown tutorial on TMLE</a>, also with step-by-step <code>R</code> code. It is more technical and thorough than my post, but still aimed at an applied audience. He also has a tutorial on the <a href="https://migariane.github.io/DeltaMethodEpiTutorial.nb.html">functional delta method</a> which is part of the theory behind the way we compute the standard errors (see <a href="https://khstats.com/blog/tmle/tutorial-pt2/#step-6-calculate-the-standard-errors-for-confidence-intervals-and-p-values"><em>Part II, Step 6</em></a>).</p></li>
<li><p>Other code-based web-based tutorials on TMLE that are more recent (or recently discovered by me!) include:</p>
<ul>
<li><p>David Benkeser and Antoine Chambaz’ <a href="https://achambaz.github.io/tlride/">A Ride in Targeted Learning Territory</a></p></li>
<li><p>The authors of the <code>R</code> package suite <a href="https://tlverse.org/"><code>tlverse</code></a>’s <a href="https://tlverse.org/tlverse-handbook/tmle3.html">Hitchhiker’s Guide to Targeted Learning: The TMLE Framework</a>.</p></li>
<li><p>Stitch Fix’s Jasmine Nettiksimmons AND Molly Davies’ blog post: <a href="https://multithreaded.stitchfix.com/blog/2021/07/23/double-robust-estimator/">“Gimme a robust estimator - and make it a double!”</a></p></li>
</ul></li>
</ul>
</section>
<section id="semiparametric-theory-and-influence-functions" class="level3">
<h3 class="anchored" data-anchor-id="semiparametric-theory-and-influence-functions">Semiparametric Theory and Influence Functions</h3>
<ul>
<li><p>Edward Kennedy has several well-written pieces on semiparametric estimation in causal inference. I recommend starting with:</p>
<ul>
<li><p>His introductory paper on <a href="https://arxiv.org/pdf/1709.06418.pdf">Semiparametric Theory</a></p></li>
<li><p>His <a href="https://www.ehkennedy.com/uploads/5/8/4/5/58450265/tutorial.pdf">slideshow tutorial</a> <em>Nonparametric efficiency theory and machine learning in causal inference</em></p></li>
</ul></li>
<li><p>My favorite resource so far for learning specifically about influence functions has been <a href="https://www.tandfonline.com/doi/full/10.1080/00031305.2020.1717620">Visually Communicating Influence Functions</a> by Aaron Fisher and Edward Kennedy. However, this paper didn’t make sense to me until I worked through this <a href="https://observablehq.com/@herbps10/one-step-estimators-and-pathwise-derivatives">interactive tutorial</a> by Herb Susmann. I suggest playing around with the interactive examples first, and then trying to work through the paper.</p></li>
<li><p>Additonal walkthroughs to learn about EIFs include the following:</p>
<ul>
<li><p>Alejandro Schuler’s <a href="https://alejandroschuler.github.io/mci/index.html">Modern Causal Inference online book</a> which includes <a href="https://alejandroschuler.github.io/mci/0cb2ffe5e5cc4cf59a5fe6d896d221d1.html">a section on deriving EIFs</a>. His tutorial is a similar, shorter version of the next two resources:</p></li>
<li><p>Oliver Hines et al.’s <a href="https://arxiv.org/abs/2107.00681">Demystifying statistical learning based on efficient influence functions</a></p></li>
<li><p>Edward Kennedy’s comprehensive review <a href="https://arxiv.org/pdf/2203.06469.pdf">Semiparametric Doubly Robust Targeted Double Machine Learning: A Review</a></p></li>
</ul></li>
</ul>
<p>Although I did not personally use these last few when I was initially learning about EIFs (since they came out after I wrote this post in Fall 2020), they seem like great resources and intended to be approachable for beginner-to-intermediate learners.</p>
<!-- - The derivation of the Efficient Influence Function (EIF) in TMLE is in the Appendix of [*Targeted Learning*](https://link.springer.com/book/10.1007/978-1-4419-9782-1). -->
</section>
<section id="causal-inference" class="level3">
<h3 class="anchored" data-anchor-id="causal-inference">Causal Inference</h3>
<ul>
<li><p>As emphasized in <em>Part I</em>, TMLE is an estimation technique which <em>can</em> be used for causal inference. If you want to learn about the foundations of causal inference, I suggest two different introductory texts below. Note that these provide fairly different frameworks (notation, descriptions of assumptions) to reach the same conclusions, but both provide useful perspectives.</p>
<ul>
<li><p><a href="http://bayes.cs.ucla.edu/PRIMER/"><em>Causal Inference in Statistics: A Primer</em></a> by Judea Pearl. Pearl does not discuss estimation methods, but rather focuses on the assumptions, or identification, side of causal inference. Thus, you will not find TMLE mentioned in this text.</p></li>
<li><p><a href="https://www.hsph.harvard.edu/miguel-hernan/causal-inference-book/"><em>What If</em></a> by Miguel Hernan and James Robins. Notably, Hernan and Robins only discuss parametric estimation methods, so you will also not find TMLE or AIPW in this text.</p></li>
</ul></li>
<li><p>I also think the introductory chapters of the previously mentioned <a href="https://link.springer.com/book/10.1007/978-1-4419-9782-1"><em>Targeted Learning</em></a> book (Chapters 1 and 2) do an excellent job of setting up the “roadmap” of causal inference.</p></li>
</ul>
<p>I’ll continue to update this page with beginner’s resources as I discover them.</p>
<p>Feedback or clarifications on this post is welcome, either from the new learners of TMLE or experts in causal inference. The best way to reach me is through <a href="mailto:kathoffman.stats@gmail.com">email</a>.</p>
</section>
</section>
<section id="acknowledgements" class="level1">
<h1>Acknowledgements</h1>
<p>This tutorial would not have been possible without my colleague Iván Díaz patiently answering many, many questions on TMLE. I am also very appreciative of Miguel Angel Luque-Fernandez’s helpful feedback on the visual guide.</p>
<p>Lastly, many thanks to Axel Martin, Nick Williams, Anjile An, Adam Peterson, Alan Wu, and Will Simmons for providing suggestions on various drafts of this art project!</p>


</section>

 ]]></description>
  <category>statistics</category>
  <guid>www.khstats.com/blog/tmle/tutorial-pt3.html</guid>
  <pubDate>Sat, 12 Dec 2020 05:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/tmle/tmle_props.png" medium="image" type="image/png" height="86" width="144"/>
</item>
<item>
  <title>An Illustrated Guide to TMLE, Part II: The Algorithm</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/tmle/tutorial-pt2.html</link>
  <description><![CDATA[ 





<link rel="stylesheet" href="../../style.css">

<p>The second post of a three-part series to help beginners and/or visual learners understand Targeted Maximum Likelihood Estimation (TMLE). This section walks through the <strong>TMLE algorithm for the mean difference in outcomes for a binary treatment and binary outcome</strong>. <br> <br> This post is an expansion of a printable “visual guide” available on my <a href="https://github.com/kathoffman/causal-inference-visual-guides">Github</a>. I hope it helps analysts who feel out-of-practice reading mathematical notation follow along with the TMLE algorithm. A web-based key without explanations is also available <a href="https://khstats.com/blog/tmle/visual-key">here</a>.</p>


<title>
HTML Image as link
</title>


<a href="https://github.com/kathoffman/CI-visual-guides/blob/master/visual-guides/TMLE.pdf"> <img src="www.khstats.com/img/tmle/tmle.jpg" alt="cheatsheet" width="100%&quot;"> </a>


<hr>
<p>⬅️<a href="https://khstats.com/blog/tmle/tutorial/"><em>Return to Part I: Motivation</em></a></p>
<section id="part-ii-the-algorithm" class="level1">
<h1>Part II: The Algorithm:</h1>
<p>Why the Visual Guide? 🎨</p>
<p>TMLE, Step-by-Step 🚶🏽️</p>
<ol type="1">
<li><p>Estimate the Outcome</p></li>
<li><p>Estimate the Probability of Treatment</p></li>
<li><p>Estimate the Fluctuation Parameter</p></li>
<li><p>Update the Initial Estimates of the Expected Outcome</p></li>
<li><p>Compute the Statistical Estimand of Interest</p></li>
<li><p>Calculate the Standard Errors for Confidence Intervals and P-values</p></li>
</ol>
<p>Using the <code>tmle</code> package 📦</p>
<p>Full tutorial code 💻</p>
<p>➡️<a href="https://khstats.com/blog/tmle/tutorial-pt3/"><em>Skip to Part III: Evaluation</em></a></p>
<hr>
</section>
<section id="why-the-visual-guide" class="level1">
<h1>Why the Visual Guide? 🎨</h1>
<p>TMLE was developed in 2007 by Mark van der Laan and colleagues at UC Berkeley, and it is slowly but surely starting to see more widespread use. Since learning about TMLE, I’ve believed many more analysts with a skill set similar to mine <em>could</em> be using TMLE, but perhaps find even the most introductory resources to be a bit daunting.</p>
<p>I am a very applied thinker, and I’ve tried to write this tutorial in the way I would have found most useful and accessible when I began learning about TMLE. Each step is accompanied by:</p>
<ol type="1">
<li>a non-rigorous explanation</li>
<li>an equation using the simplest notation possible</li>
<li>in-line <code>R</code> code</li>
<li>a small graphic representing the computation on a data frame or vector</li>
</ol>
<p>This last piece is super important for me, because I remember best when I associate an image with what I’ve learned. If the graphics are also useful to you, it may be helpful to open this <a href="https://khstats.com/blog/tmle/visual-key">corresponding key</a> in another browser or print the <a href="https://github.com/kathoffman/causal-inference-visual-guides">visual guide</a> for reference.</p>
<p>This tutorial is not meant to replace the resources I used to learn TMLE, but rather to supplement them. I use the same mathematical notation as the TMLE literature to make it easier to move back and forth. I hope you find the way I think about the algorithm useful, but if not, consider checking out the references I’ve listed in <a href="https://khstats.com/blog/tmle/tutorial-pt3/#resources-to-learn-more"><em>Part III</em></a>. TMLE is a very powerful method and will undoubtedly only grow in popularity in statistics and data science.</p>
</section>
<section id="tmle-step-by-step" class="level1">
<h1>TMLE, Step-by-Step 🚶🏽</h1>
<p>Let’s look at the algorithm step-by-step. As you’re reading, keep in mind that there are <code>R</code> packages that will do this for you as easily as running a <code>glm()</code> or <code>coxph()</code> function. This tutorial is to help understand what’s going on behind-the-scenes.</p>
<p>One final note before we dive into the algorithm:</p>
<section id="superlearning" class="level3">
<h3 class="anchored" data-anchor-id="superlearning">Superlearning</h3>
<p>I use the ensemble learning method superlearning (also known as “stacking”) to demonstrate TMLE. This is because superlearning is theoretically and empirically proven to yield the best results in TMLE.</p>
<p>If you’re new to superlearning/stacking, the necessary knowledge for this post is that it allows you to combine many machine learning algorithms for prediction. When I use <code>SuperLearner()</code> in the following example code, I could have used <code>glm()</code>, <code>randomForest()</code>, or any other parametric or non-parametric supervised learning algorithm.</p>


<title>
HTML Image as link
</title>


<a href="https://khstats.com/blog/sl/superlearning"> <img src="www.khstats.com/img/Superlearning.jpg" alt="cheatsheet" width="50%" style="float:right; padding-left:60px;"> </a>


<p>Note that the choice of base learners for superlearning is not the point of this post. In practice we simply want to add flexible machine learning models which we think <strong>may</strong> reflect the underlying data distribution. For a tutorial on superlearning, you can check out one of my <a href="https://khstats.com/blog/sl/superlearning">previous blog posts</a>.</p>
</section>
<section id="initial-set-up" class="level3">
<h3 class="anchored" data-anchor-id="initial-set-up">Initial set up</h3>
<p>Let’s first load the necessary libraries and set a seed.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for data manipulation</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for table printing</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(SuperLearner) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for ensemble learning</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for reproducible results</span></span></code></pre></div>
</div>
<p>Next, let’s simulate a data set for demonstration of the algorithm. This data will have a very simple structure: a binary treatment, <img src="https://latex.codecogs.com/png.latex?A">; binary outcome, <img src="https://latex.codecogs.com/png.latex?Y">; and four confounders: <img src="https://latex.codecogs.com/png.latex?W_1">, <img src="https://latex.codecogs.com/png.latex?W_2">, <img src="https://latex.codecogs.com/png.latex?W_3">, and <img src="https://latex.codecogs.com/png.latex?W_4">.</p>
<p><img src="www.khstats.com/img/tmle/1_data_structure.png" class="img-fluid" style="width:80.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">generate_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(n){ </span>
<span id="cb2-2">    W1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># binary confounder</span></span>
<span id="cb2-3">    W2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># binary confounder</span></span>
<span id="cb2-4">    W3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># continuous confounder</span></span>
<span id="cb2-5">    W4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># continuous confounder</span></span>
<span id="cb2-6">    A  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W3) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W4)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># binary treatment depends on confounders</span></span>
<span id="cb2-7">    Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W4))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># binary outcome depends on confounders</span></span>
<span id="cb2-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(Y, W1, W2, W3, W4, A))</span>
<span id="cb2-9">}</span>
<span id="cb2-10"></span>
<span id="cb2-11">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb2-12">dat_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_data</span>(n) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate a data set with n observations</span></span>
<span id="cb2-13"></span>
<span id="cb2-14">dat_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Simulated data set."</span>)</span></code></pre></div>
<div class="cell-output-display">

<div id="fkgwpykulw" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#fkgwpykulw) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#fkgwpykulw) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#fkgwpykulw) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#fkgwpykulw) .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#fkgwpykulw) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#fkgwpykulw) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#fkgwpykulw) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#fkgwpykulw) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

:where(#fkgwpykulw) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

:where(#fkgwpykulw) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#fkgwpykulw) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#fkgwpykulw) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#fkgwpykulw) .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#fkgwpykulw) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#fkgwpykulw) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#fkgwpykulw) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#fkgwpykulw) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#fkgwpykulw) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#fkgwpykulw) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

:where(#fkgwpykulw) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#fkgwpykulw) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#fkgwpykulw) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#fkgwpykulw) .gt_left {
  text-align: left;
}

:where(#fkgwpykulw) .gt_center {
  text-align: center;
}

:where(#fkgwpykulw) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#fkgwpykulw) .gt_font_normal {
  font-weight: normal;
}

:where(#fkgwpykulw) .gt_font_bold {
  font-weight: bold;
}

:where(#fkgwpykulw) .gt_font_italic {
  font-style: italic;
}

:where(#fkgwpykulw) .gt_super {
  font-size: 65%;
}

:where(#fkgwpykulw) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#fkgwpykulw) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#fkgwpykulw) .gt_indent_1 {
  text-indent: 5px;
}

:where(#fkgwpykulw) .gt_indent_2 {
  text-indent: 10px;
}

:where(#fkgwpykulw) .gt_indent_3 {
  text-indent: 15px;
}

:where(#fkgwpykulw) .gt_indent_4 {
  text-indent: 20px;
}

:where(#fkgwpykulw) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="6" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Simulated data set.</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Y</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">W1</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">W2</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">W3</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">W4</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">A</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">6</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td></tr>
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">6</td>
<td class="gt_row gt_right">3</td>
<td class="gt_row gt_right">0</td></tr>
    <tr><td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">3</td>
<td class="gt_row gt_right">2</td>
<td class="gt_row gt_right">0</td></tr>
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">5</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td></tr>
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">5</td>
<td class="gt_row gt_right">2</td>
<td class="gt_row gt_right">0</td></tr>
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">6</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>As mentioned earlier, TMLE can estimate many different statistical estimands of interest. In this example, our statistical estimand is the mean difference in outcomes between those who received the treatment and those who did not, adjusting for confounders.</p>
<p>Under causal assumptions, this could be <em>identifiable</em> as the Average Treatment Effect (ATE). I won’t go through the identification process here (see <a href="https://khstats.com/blog/tmle/tutorial-pt3/#resources-to-learn-more"><em>Part III, References</em></a>), but since TMLE is often used for causal inference, let’s pretend for this example that we previously met causal assumptions and call our statistical estimand, <img src="https://latex.codecogs.com/png.latex?%5CPsi">, the ATE.</p>
<p><img src="https://latex.codecogs.com/png.latex?ATE%20=%20%5CPsi%20=%20E_W%5B%5Cmathrm%7BE%7D%5BY%7CA=1,%5Cmathbf%7BW%7D%5D%20-%20%5Cmathrm%7BE%7D%5BY%7CA=0,%5Cmathbf%7BW%7D%5D%5D"></p>
<p>The ATE, once we estimate it, will be interpretable as the mean difference in outcomes in a hypothetical world where everyone received the treatment compared to a hypothetical world where no one received the treatment.</p>
<p>At this point in set-up, we should also pick our base machine learning algorithms to combine via superlearning to estimate the expected outcome and probability of treatment. Let’s use LASSO (<code>glmnet</code>), random forests (<code>ranger</code>), Multivariate Adaptive Regression Splines (MARS) (<code>earth</code>), and a generalized linear model (<code>glm</code>) for demonstration.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sl_libs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SL.glmnet'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SL.ranger'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SL.earth'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SL.glm'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a library of machine learning algorithms (penalized regression, random forests, and multivariate adaptive regression splines)</span></span></code></pre></div>
</div>
</section>
<section id="step-1-estimate-the-outcome" class="level2">
<h2 class="anchored" data-anchor-id="step-1-estimate-the-outcome">Step 1: Estimate the Outcome</h2>
<p>The very first step of TMLE is to <strong>estimate the expected value of the outcome</strong> using treatment and confounders as predictors.</p>
<p>This is what that looks like in mathematical notation. There is some function <img src="https://latex.codecogs.com/png.latex?Q"> which takes <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BW%7D"> as inputs and yields the conditional expectation of <img src="https://latex.codecogs.com/png.latex?Y">:</p>
<p><img src="https://latex.codecogs.com/png.latex?Q(A,%5Cmathbf%7BW%7D)%20=%20%5Cmathrm%7BE%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D"> We can use any regression to estimate this conditional expectation, but it is best to use flexible machine learning models so that we don’t have unnecessary assumptions on the underlying distribution of the data.</p>
<p>We can think about the above equation as some generic regression function in <code>R</code> called <code>fit()</code> with inputs in formula form: <code>outcome ~ predictors</code>:</p>
<p><img src="www.khstats.com/img/tmle/2_outcome_fit.png" class="img-fluid" style="width:70.0%"> In real <code>R</code> code, we’ll use the <code>SuperLearner()</code> function to fit a weighted combination of multiple machine learning models (defined earlier in <code>sl_libs</code>). This function takes the outcome <code>Y</code> as a vector and a data frame <code>X</code> as predictors.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y</span>
<span id="cb4-2">W_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Y) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove the outcome to make a matrix of predictors (A, W1, W2, W3, W4) for SuperLearner</span></span>
<span id="cb4-3">Q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SuperLearner</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> Y, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Y is the outcome vector</span></span>
<span id="cb4-4">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> W_A, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># W_A is the matrix of W1, W2, W3, W4, and A</span></span>
<span id="cb4-5">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify we have a binary outcome</span></span>
<span id="cb4-6">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SL.library =</span> sl_libs) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify our superlearner library of LASSO, RF, and MARS</span></span></code></pre></div>
</div>
<p>Then, we should estimate the outcome for every observation under three different scenarios:</p>
<p><strong>1. If every observation received the treatment they <em>actually</em> received.</strong></p>
<p>We can get this expected outcome estimate by simply calling <code>predict()</code> on the model fit without specifying any new data.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BQ%7D(A,%5Cmathbf%7BW%7D)%20=%20%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D"></p>
<p>We will save that vector of estimates as a new object in <code>R</code>.</p>
<p><img src="www.khstats.com/img/tmle/3_QA.png" class="img-fluid" style="width:50.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">Q_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(Q)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># obtain predictions for everyone using the treatment they actually received</span></span></code></pre></div>
</div>
<p><strong>2. If every observation received the treatment.</strong></p>
<p>To do this, we’ll first need to create a data set where every observation received the treatment of interest, whether they actually did or not. Then we can call the <code>predict()</code> function on that data set.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BQ%7D(1,%5Cmathbf%7BW%7D)%20=%20%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=1,%5Cmathbf%7BW%7D%5D"></p>
<p><img src="www.khstats.com/img/tmle/4_Q1.png" class="img-fluid" style="width:80.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">W_A1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> W_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data set where everyone received treatment</span></span>
<span id="cb6-2">Q_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(Q, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> W_A1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict on that everyone-exposed data set</span></span></code></pre></div>
</div>
<p><strong>3. If every observation received the control.</strong></p>
<p>Similarly, we create a data set where every observation did <em>not</em> receive the treatment of interest, whether they actually did or not, and call the <code>predict()</code> function again.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BQ%7D(0,%5Cmathbf%7BW%7D)%20=%20%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=0,%5Cmathbf%7BW%7D%5D"></p>
<p><img src="www.khstats.com/img/tmle/5_Q1.png" class="img-fluid" style="width:80.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">W_A0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> W_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data set where no one received treatment</span></span>
<span id="cb7-2">Q_0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(Q, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> W_A0)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred)</span></code></pre></div>
</div>
<p><strong><em>Next</em></strong>, let’s create a new data frame, <code>dat_tmle</code>, to hold the three vectors we’ve created so far, along with the treatment status <img src="https://latex.codecogs.com/png.latex?A"> and observed outcome <img src="https://latex.codecogs.com/png.latex?Y">. Notice that when <img src="https://latex.codecogs.com/png.latex?A=1">, the expected outcome <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D"> equals the expected outcome under treatment <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=1,%5Cmathbf%7BW%7D%5D">. When <img src="https://latex.codecogs.com/png.latex?A=0">, the expected outcome <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D"> equals the expected outcome under no treatment <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=0,%5Cmathbf%7BW%7D%5D">.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">dat_tmle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> dat_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> dat_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>A, Q_A, Q_0, Q_1)</span>
<span id="cb8-2">dat_tmle <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMLE Algorithm after Step 1"</span>)</span></code></pre></div>
<div class="cell-output-display">

<div id="wqrrijfakd" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#wqrrijfakd) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#wqrrijfakd) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#wqrrijfakd) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#wqrrijfakd) .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#wqrrijfakd) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#wqrrijfakd) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#wqrrijfakd) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#wqrrijfakd) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

:where(#wqrrijfakd) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

:where(#wqrrijfakd) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#wqrrijfakd) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#wqrrijfakd) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#wqrrijfakd) .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#wqrrijfakd) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#wqrrijfakd) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#wqrrijfakd) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#wqrrijfakd) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#wqrrijfakd) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#wqrrijfakd) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

:where(#wqrrijfakd) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#wqrrijfakd) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#wqrrijfakd) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#wqrrijfakd) .gt_left {
  text-align: left;
}

:where(#wqrrijfakd) .gt_center {
  text-align: center;
}

:where(#wqrrijfakd) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#wqrrijfakd) .gt_font_normal {
  font-weight: normal;
}

:where(#wqrrijfakd) .gt_font_bold {
  font-weight: bold;
}

:where(#wqrrijfakd) .gt_font_italic {
  font-style: italic;
}

:where(#wqrrijfakd) .gt_super {
  font-size: 65%;
}

:where(#wqrrijfakd) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#wqrrijfakd) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#wqrrijfakd) .gt_indent_1 {
  text-indent: 5px;
}

:where(#wqrrijfakd) .gt_indent_2 {
  text-indent: 10px;
}

:where(#wqrrijfakd) .gt_indent_3 {
  text-indent: 15px;
}

:where(#wqrrijfakd) .gt_indent_4 {
  text-indent: 20px;
}

:where(#wqrrijfakd) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="5" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">TMLE Algorithm after Step 1</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Y</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">A</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Q_A</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Q_0</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Q_1</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0.8461853</td>
<td class="gt_row gt_right">0.6770917</td>
<td class="gt_row gt_right">0.8461853</td></tr>
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0.6986440</td>
<td class="gt_row gt_right">0.6986440</td>
<td class="gt_row gt_right">0.8589257</td></tr>
    <tr><td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0.4932538</td>
<td class="gt_row gt_right">0.4932538</td>
<td class="gt_row gt_right">0.7188934</td></tr>
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0.8213403</td>
<td class="gt_row gt_right">0.6363132</td>
<td class="gt_row gt_right">0.8213403</td></tr>
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0.6266258</td>
<td class="gt_row gt_right">0.6266258</td>
<td class="gt_row gt_right">0.8151742</td></tr>
    <tr><td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0.8578239</td>
<td class="gt_row gt_right">0.6966588</td>
<td class="gt_row gt_right">0.8578239</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<!-- *Also note that our expected outcomes are on the original outcome scale (i.e. probability, rather than the $logit$ probability).* -->
<p>We could stop here and get our estimate of the ATE by computing the average difference between <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=1,%5Cmathbf%7BW%7D%5D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=0,%5Cmathbf%7BW%7D%5D">, which <em>would</em> be the mean difference in the expected outcomes, conditional on confounders. This estimation method is often called <strong>standardization</strong>, <strong>simple substitution estimation</strong>, <strong>g-formula estimation</strong>, or <strong>G-computation</strong>.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BATE%7D_%7BG-comp%7D=%20%5Chat%7B%5CPsi%7D_%7BG-comp%7D%20=%20%5Cfrac%7B1%7D%7BN%7D%5Csum_%7Bi=1%7D%5E%7BN%7D(%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=1,%5Cmathbf%7BW%7D%5D-%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=0,%5Cmathbf%7BW%7D%5D)"> <img src="www.khstats.com/img/tmle/ate_gcomp.png" class="img-fluid" style="width:50.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">ate_gcomp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(dat_tmle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Q_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dat_tmle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Q_0)</span>
<span id="cb9-2">ate_gcomp</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.195287</code></pre>
</div>
</div>
<p>However, this G-computation ATE estimate does not have the appropriate bias-variance tradeoff for the ATE because it was built to have the best bias-variance tradeoff for estimating the <em>outcome</em>, conditional on confounders, rather than the ATE. We also cannot compute the standard error of the estimator because we don’t know the sampling distribution of the machine learning estimates.</p>
<p>⤴️<em>Back to the top</em></p>
</section>
<section id="step-2-estimate-the-probability-of-treatment" class="level2">
<h2 class="anchored" data-anchor-id="step-2-estimate-the-probability-of-treatment">Step 2: Estimate the Probability of Treatment</h2>
<p>The next step is to estimate the probability of treatment, given confounders. This quantity is often called the <strong>propensity score</strong>, as in it gives the probability or <em>propensity</em> that an observation will receive a treatment of interest.</p>
<p><img src="https://latex.codecogs.com/png.latex?g(%5Cmathbf%7BW%7D)%20=%20%5Cmathrm%7BPr%7D(A=1%7C%5Cmathbf%7BW%7D)"> <img src="www.khstats.com/img/tmle/6_treatment_fit.png" class="img-fluid" style="width:60.0%"></p>
<p>We will estimate <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BPr%7D(A=1%7C%5Cmathbf%7BW%7D)"> in the same way as we estimated <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BE%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D">: using the superlearner algorithm.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>A</span>
<span id="cb11-2">W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Y, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>A) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># matrix of predictors that only contains the confounders W1, W2, W3, and W4</span></span>
<span id="cb11-3">g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SuperLearner</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> A, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># outcome is the A (treatment) vector</span></span>
<span id="cb11-4">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> W, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># W is a matrix of predictors</span></span>
<span id="cb11-5">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># treatment is a binomial outcome</span></span>
<span id="cb11-6">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SL.library=</span>sl_libs) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># using same candidate learners; could use different learners</span></span></code></pre></div>
</div>
<p>Then we need to compute three different quantities from this model fit:</p>
<p><strong>1. The inverse probability of receiving treatment.</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?H(1,%5Cmathbf%7BW%7D)%20=%20%5Cfrac%7B1%7D%7Bg(%5Cmathbf%7BW%7D)%7D%20=%20%5Cfrac%7B1%7D%7B%5Cmathrm%7BPr%7D(A=1%7C%5Cmathbf%7BW%7D)%7D"> We can estimate the probability of receiving treatment for every observation by using the <code>predict()</code> funcion without specifying any new data, and then take the inverse of that.</p>
<p><img src="www.khstats.com/img/tmle/7_H1.png" class="img-fluid" style="width:60.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">g_w <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(g)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pr(A=1|W)</span></span>
<span id="cb12-2">H_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>g_w</span></code></pre></div>
</div>
<p><strong>2. The negative inverse probability of not receiving treatment.</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?H(0,%5Cmathbf%7BW%7D)%20=%20-%5Cfrac%7B1%7D%7B1-g(%5Cmathbf%7BW%7D)%7D=%20-%5Cfrac%7B1%7D%7B%5Cmathrm%7BPr%7D(A=0%7C%5Cmathbf%7BW%7D)%7D"> The probability of not receiving treatment for a binary treatment is simply 1 minus the probability of treatment.</p>
<p><img src="www.khstats.com/img/tmle/8_H0.png" class="img-fluid" style="width:70.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">H_0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>g_w) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pr(A=0|W) is 1-Pr(A=1|W)</span></span></code></pre></div>
</div>
<p><strong>3. If the observation was treated, the inverse probability of receiving treatment, and if they were not treated, the negative inverse probability of not receiving treatment.</strong> I’ll discuss why later, but in the TMLE literature this is called the <strong>clever covariate</strong>.</p>
<p><img src="https://latex.codecogs.com/png.latex?H(A,%5Cmathbf%7BW%7D)%20=%20%5Cfrac%7B%5Cmathrm%7BI%7D(A=1)%7D%7B%5Cmathrm%7BPr%7D(A=1%7C%5Cmathbf%7BW%7D)%7D-%5Cfrac%7B%5Cmathrm%7BI%7D(A=0)%7D%7B%5Cmathrm%7BPr%7D(A=0%7C%5Cmathbf%7BW%7D)%7D"></p>
<p><img src="www.khstats.com/img/tmle/9_HA.png" class="img-fluid" style="width:50.0%"></p>
<p>To calculate the clever covariate, we’ll first add the <img src="https://latex.codecogs.com/png.latex?H(1,%5Cmathbf%7BW%7D)"> and <img src="https://latex.codecogs.com/png.latex?H(0,%5Cmathbf%7BW%7D)"> vectors to our <code>dat_tmle</code> data frame, and then we can use <img src="https://latex.codecogs.com/png.latex?A"> to assign <img src="https://latex.codecogs.com/png.latex?H(A,%5Cmathbf%7BW%7D)">.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">dat_tmle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add clever covariate data to dat_tmle</span></span>
<span id="cb14-2">  dat_tmle <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(</span>
<span id="cb14-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H_1 =</span> H_1,</span>
<span id="cb14-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H_0 =</span> H_0) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H_A =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> H_1, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if A is 1 (treated), assign H_1</span></span>
<span id="cb14-7">                       A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> H_0))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if A is 0 (not treated), assign H_0</span></span></code></pre></div>
</div>
<p>We now have our initial estimates of the outcome, and the estimates of the probability of treatment:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">dat_tmle <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMLE Algorithm after Step 2"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">

<div id="hjkpoiqvpu" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#hjkpoiqvpu) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#hjkpoiqvpu) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#hjkpoiqvpu) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#hjkpoiqvpu) .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#hjkpoiqvpu) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#hjkpoiqvpu) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#hjkpoiqvpu) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#hjkpoiqvpu) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

:where(#hjkpoiqvpu) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

:where(#hjkpoiqvpu) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#hjkpoiqvpu) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#hjkpoiqvpu) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#hjkpoiqvpu) .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hjkpoiqvpu) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#hjkpoiqvpu) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#hjkpoiqvpu) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hjkpoiqvpu) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#hjkpoiqvpu) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hjkpoiqvpu) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

:where(#hjkpoiqvpu) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hjkpoiqvpu) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#hjkpoiqvpu) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hjkpoiqvpu) .gt_left {
  text-align: left;
}

:where(#hjkpoiqvpu) .gt_center {
  text-align: center;
}

:where(#hjkpoiqvpu) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#hjkpoiqvpu) .gt_font_normal {
  font-weight: normal;
}

:where(#hjkpoiqvpu) .gt_font_bold {
  font-weight: bold;
}

:where(#hjkpoiqvpu) .gt_font_italic {
  font-style: italic;
}

:where(#hjkpoiqvpu) .gt_super {
  font-size: 65%;
}

:where(#hjkpoiqvpu) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#hjkpoiqvpu) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#hjkpoiqvpu) .gt_indent_1 {
  text-indent: 5px;
}

:where(#hjkpoiqvpu) .gt_indent_2 {
  text-indent: 10px;
}

:where(#hjkpoiqvpu) .gt_indent_3 {
  text-indent: 15px;
}

:where(#hjkpoiqvpu) .gt_indent_4 {
  text-indent: 20px;
}

:where(#hjkpoiqvpu) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="8" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">TMLE Algorithm after Step 2</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Y</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">A</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Q_A</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Q_0</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">Q_1</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">H_1</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">H_0</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">H_A</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">0.85</td>
<td class="gt_row gt_right">0.68</td>
<td class="gt_row gt_right">0.85</td>
<td class="gt_row gt_right">2.18</td>
<td class="gt_row gt_right">−1.85</td>
<td class="gt_row gt_right">2.18</td></tr>
    <tr><td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">0.00</td>
<td class="gt_row gt_right">0.70</td>
<td class="gt_row gt_right">0.70</td>
<td class="gt_row gt_right">0.86</td>
<td class="gt_row gt_right">1.60</td>
<td class="gt_row gt_right">−2.67</td>
<td class="gt_row gt_right">−2.67</td></tr>
    <tr><td class="gt_row gt_right">0.00</td>
<td class="gt_row gt_right">0.00</td>
<td class="gt_row gt_right">0.49</td>
<td class="gt_row gt_right">0.49</td>
<td class="gt_row gt_right">0.72</td>
<td class="gt_row gt_right">3.39</td>
<td class="gt_row gt_right">−1.42</td>
<td class="gt_row gt_right">−1.42</td></tr>
    <tr><td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">0.82</td>
<td class="gt_row gt_right">0.64</td>
<td class="gt_row gt_right">0.82</td>
<td class="gt_row gt_right">2.39</td>
<td class="gt_row gt_right">−1.72</td>
<td class="gt_row gt_right">2.39</td></tr>
    <tr><td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">0.00</td>
<td class="gt_row gt_right">0.63</td>
<td class="gt_row gt_right">0.63</td>
<td class="gt_row gt_right">0.82</td>
<td class="gt_row gt_right">2.31</td>
<td class="gt_row gt_right">−1.76</td>
<td class="gt_row gt_right">−1.76</td></tr>
    <tr><td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">0.86</td>
<td class="gt_row gt_right">0.70</td>
<td class="gt_row gt_right">0.86</td>
<td class="gt_row gt_right">2.14</td>
<td class="gt_row gt_right">−1.88</td>
<td class="gt_row gt_right">2.14</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>⤴️<em>Back to the top</em></p>
</section>
<section id="step-3-estimate-the-fluctuation-parameter" class="level2">
<h2 class="anchored" data-anchor-id="step-3-estimate-the-fluctuation-parameter">Step 3: Estimate the Fluctuation Parameter</h2>
<p>To reiterate, in Step 1 we estimated the expected outcome, conditional on treatment and confounders. We know those machine learning fits have an optimal bias-variance trade-off for estimating the outcome (conditional on treatment and confounders), rather than the ATE. <strong>We will now use information about the treatment mechanism (from Step 2) to optimize the bias-variance trade-off for the ATE so we can obtain valid inference.</strong></p>


<title>
HTML Image as link
</title>


<a href=""> <img src="www.khstats.com/img/bear_with_me.jpg" alt="cheatsheet" style="float:right; padding-left:65px;" width="50%&quot;"> </a>


<p>🚨 <strong><em>Warning:</em></strong> this step is easy to code, but difficult to understand unless you have a background in semiparametric theory. Let’s first look at <em>what</em> we’re doing, and then I’ll discuss at a very high-level why we’re doing that in a <a href="https://khstats.com/blog/tmle/tutorial-pt3/#why-does-tmle-work">later section</a>.</p>
<p>The point of this step is to solve an <em>estimating equation</em> for the <em>efficient influence function</em> (EIF) of our estimand of interest. Without diving into what an EIF or an estimating equation is, let’s accept for a moment that they will help us:</p>
<ol type="1">
<li><p><strong>Update our initial outcome estimates</strong> so that our estimate of the ATE is asymptotically unbiased (under certain conditions, see <a href="https://khstats.com/blog/tmle/tutorial-pt3/#properties-of-tmle"><em>Part III, Statistical Properties</em></a>).</p></li>
<li><p><strong>Calculate the variance</strong>, and thus the standard error, confidence interval, and p-value for our estimate of the ATE for hypothesis testing.</p></li>
</ol>
<p>Next, let’s take a look at a model that will help us solve an EIF estimating equation and then update our estimates:</p>
<p><img src="https://latex.codecogs.com/png.latex?logit(%5Cmathrm%7BE%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D)%20=%20logit(%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D)%20+%20%5Cepsilon%20H(A,%5Cmathbf%7BW%7D)"></p>
<p>To reiterate, I haven’t explained at all why this step works; we’re just focusing on implementing it for now.</p>
<p>If we look at the left side, we can see this equation contains the true outcome <img src="https://latex.codecogs.com/png.latex?Y">, just <img src="https://latex.codecogs.com/png.latex?logit"> transformed. Luckily for us, there’s a well-known model that <img src="https://latex.codecogs.com/png.latex?logit"> transforms the left side of an equation: logistic regression. Our estimating equation looks <em>a lot</em> like a simple logistic regression, actually: <img src="https://latex.codecogs.com/png.latex?logit(%5Cmathrm%7BE%7D%5BY%7CX%5D)%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20X">.</p>
<p>Do you see how our equation also has a vector on the right-hand side, <img src="https://latex.codecogs.com/png.latex?H(A,%5Cmathbf%7BW%7D)">, with a corresponding coefficient, <img src="https://latex.codecogs.com/png.latex?%5Cepsilon">? The only difference is that the “intercept” in our equation, <img src="https://latex.codecogs.com/png.latex?logit(%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D)"> is not a constant value like <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0">; it is a vector of values. We can see it as an <strong>offset</strong> or a <strong>fixed intercept</strong> in a logistic regression, rather than a constant-value intercept.</p>
<p>Therefore, to accomplish our goal of solving an estimating equation for the EIF we can leverage standard statistical software and fit a logistic regression with one covariate, <img src="https://latex.codecogs.com/png.latex?H(A,%5Cmathbf%7BW%7D)">, and the initial outcome estimate, <img src="https://latex.codecogs.com/png.latex?logit(%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D)">, as a fixed intercept. The outcome of the logistic regression is the observed outcome, <img src="https://latex.codecogs.com/png.latex?Y">.</p>
<p>Two technical points for application: we use <code>qlogis</code> to transform the probabilities <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D"> to the <img src="https://latex.codecogs.com/png.latex?logit"> scale. Also, the <code>R</code> code for a fixed intercept is <code>-1 + offset(fixed_intercept)</code>.</p>
<p><img src="www.khstats.com/img/tmle/10_logistic_regression.png" class="img-fluid"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">glm_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">offset</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(Q_A)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> H_A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>dat_tmle, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span>binomial)</span></code></pre></div>
</div>
<p><em>Note that we are only using a logistic regression because it happens to have the correct form for solving the estimating equation for the EIF for the ATE estimand. It has nothing to do with having a binary outcome, and it isn’t putting any parametric restraints on our data.</em></p>
<p>Next we need to save the coefficient from that logistic regression, which we will call <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cepsilon%7D">:</p>
<p><img src="www.khstats.com/img/tmle/11_epsilon.png" class="img-fluid" style="width:40.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">eps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(glm_fit)</span></code></pre></div>
</div>
<p>In the TMLE literature, <img src="https://latex.codecogs.com/png.latex?%5Cepsilon"> is called the <strong>fluctuation parameter</strong>, because it provides information about how much to change, or fluctuate, our initial outcome estimates. Similarly, <img src="https://latex.codecogs.com/png.latex?H(A,%5Cmathbf%7BW%7D)"> is called the <strong>clever covariate</strong> because it “cleverly” helps us solve for the EIF and then update our estimates.</p>
<p>We will use both the fluctuation parameter and clever covariate in the next step to update our initial estimates of the expected outcome, conditional on confounders and treatment.</p>
<p>⤴️<em>Back to the top</em></p>
</section>
<section id="step-4-update-the-initial-estimates-of-the-expected-outcome" class="level2">
<h2 class="anchored" data-anchor-id="step-4-update-the-initial-estimates-of-the-expected-outcome">Step 4: Update the Initial Estimates of the Expected Outcome</h2>
<p>Almost done! Let’s recap:</p>
<ul>
<li><p>In Step 1, we obtained <strong>initial estimates</strong> of the expected outcome using machine learning (ML). These ML estimates are optimized to estimate <img src="https://latex.codecogs.com/png.latex?E%5BY%7CA,W%5D">, not the ATE.</p></li>
<li><p>We need to update those initial expected outcome estimates using <strong>information about the treatment mechanism</strong>, so we computed the expected probability of treatment, conditional on confounders, in Step 2.</p></li>
<li><p>Then, in Step 3, we used quantities from Step 1 and Step 2 to <strong>solve an estimating equation for the EIF</strong>. We didn’t talk about <em>why</em> this works; we simply accepted for now that this is how we can target our estimand of interest (the ATE).</p></li>
<li><p>Now, we will <strong>update our initial outcome estimates</strong> from Step 1 using information from Step 2 and 3 to obtain the correct bias-variance tradeoff for the ATE.</p></li>
</ul>
<p>To update our expected outcome estimates, we first need to <strong>put the initial expected outcome estimates on the</strong> <img src="https://latex.codecogs.com/png.latex?logit"> scale using <code>qlogis()</code> because that’s the scale we used to solve our estimating equation for the EIF in Step 3. Then we can <strong>calculate how much we need to fluctuate our initial estimates</strong> using the product of the clever covariate and fluctuation parameter: <img src="https://latex.codecogs.com/png.latex?H(A,%5Cmathbf%7BW%7D)%20%5Ctimes%20%5Chat%7B%5Cepsilon%7D">. These are our outputs of Step 2 and 3, respectively. We will <strong>add that quantity to the initial outcome estimates to create updated outcome estimates</strong>. Finally, we can <strong>put the updated estimates back on the true outcome scale</strong> using <code>plogis()</code>.</p>
<p><em>Note we can use</em> <img src="https://latex.codecogs.com/png.latex?expit"> to show the inverse of the <img src="https://latex.codecogs.com/png.latex?logit"> function, and we will denote updates to the outcome regressions as <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cmathrm%7BE%7D%7D%5E*"> instead of <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cmathrm%7BE%7D%7D">.</p>
<p><strong>1. Update the expected outcomes of all observations, given the treatment they actually received and their baseline confounders.</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cmathrm%7BE%7D%7D%5E*%5BY%7CA,%5Cmathbf%7BW%7D%5D%20=%20expit(logit(%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D)%20+%20%5Chat%7B%5Cepsilon%7DH(A,%5Cmathbf%7BW%7D))"></p>
<p><img src="www.khstats.com/img/tmle/update_qAW.png" class="img-fluid" style="width:70.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">H_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_tmle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>H_A <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for cleaner code in Q_A_update</span></span>
<span id="cb18-2">Q_A_update <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(Q_A) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H_A)</span></code></pre></div>
</div>
<p><strong>2. Update the expected outcomes, conditional on baseline confounders and everyone receiving the treatment.</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cmathrm%7BE%7D%7D%5E*%5BY%7CA=1,%5Cmathbf%7BW%7D%5D%20=%20expit(logit(%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=1,%5Cmathbf%7BW%7D%5D)%20+%20%5Chat%7B%5Cepsilon%7DH(1,A))"> <img src="www.khstats.com/img/tmle/12_update_Q1.png" class="img-fluid" style="width:70.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">Q_1_update <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(Q_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H_1)</span></code></pre></div>
</div>
<p><strong>3. Update the expected outcomes, conditional on baseline confounders and no one receiving the treatment.</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cmathrm%7BE%7D%7D%5E*%5BY%7CA=0,%5Cmathbf%7BW%7D%5D%20=%20expit(logit(%5Cmathrm%7B%5Chat%7BE%7D%7D%5BY%7CA=0,%5Cmathbf%7BW%7D%5D)%20+%20%5Chat%7B%5Cepsilon%7DH(0,W))"> <img src="www.khstats.com/img/tmle/13_update_Q0.png" class="img-fluid" style="width:70.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">Q_0_update <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(Q_0) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H_0)</span></code></pre></div>
</div>
<p>⤴️<em>Back to the top</em></p>
</section>
<section id="step-5-compute-the-statistical-estimand-of-interest" class="level2">
<h2 class="anchored" data-anchor-id="step-5-compute-the-statistical-estimand-of-interest">Step 5: Compute the Statistical Estimand of Interest</h2>
<p>We now have updated expected outcomes estimates, so we can <strong>compute the ATE as the mean difference in the updated outcome estimates under treatment and no treatment</strong>:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BATE%7D_%7BTMLE%7D%20=%20%5Chat%7B%5CPsi%7D_%7BTMLE%7D%20=%20%5Cfrac%7B1%7D%7BN%7D%5Csum_%7Bi=1%7D%5E%7BN%7D%5B%5Chat%7BE%5E*%7D%5BY%7CA=1,%5Cmathbf%7BW%7D%5D%20-%20%5Chat%7BE%5E*%7D%5BY%7CA=0,%5Cmathbf%7BW%7D%5D%5D"></p>
<p><img src="www.khstats.com/img/tmle/14_compute_ATE.png" class="img-fluid" style="width:60.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">tmle_ate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Q_1_update <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Q_0_update)</span>
<span id="cb21-2">tmle_ate</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.1911676</code></pre>
</div>
</div>
<p>We can then say, “the average treatment effect was estimated to be 19.1%.”</p>
<p>If causal assumptions were not met, we would say, “the proportion of observations who experienced the outcome, after adjusting for baseline confounders, was estimated to be 19.1% higher for those who received treatment compared to those who did not.”</p>
<p>⤴️<em>Back to the top</em></p>
</section>
<section id="step-6-calculate-the-standard-errors-for-confidence-intervals-and-p-values" class="level2">
<h2 class="anchored" data-anchor-id="step-6-calculate-the-standard-errors-for-confidence-intervals-and-p-values">Step 6: Calculate the Standard Errors for Confidence Intervals and P-values</h2>
<p>This point estimate is great, but we usually need an <strong>estimate of variance</strong> so that we can compute confidence intervals, test statistics, p-values, etc. This is another step that contains quite a lot of theory, so I’ll give another birds-eye view for now. If you’re curious, you can read more about this in <a href="https://khstats.com/blog/tmle/tutorial-pt3"><em>Part III</em></a>.</p>
<p>To obtain the standard errors, we first need to compute the <strong>Influence Function</strong> (IF), which is the empirical version of what we used our estimating equation to figure out in Step 3. The IF tells us <strong>how much each observation influences the final estimate</strong>.</p>
<p>The equation for the IF looks like this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BIF%7D%20=%20(Y-%5Chat%7BE%5E*%7D%5BY%7CA,%5Cmathbf%7BW%7D%5D)H(A,%5Cmathbf%7BW%7D)%20+%20%5Chat%7BE%5E*%7D%5BY%7CA=1,%5Cmathbf%7BW%7D%5D%20-%20%5Chat%7BE%5E*%7D%5BY%7CA=0,%5Cmathbf%7BW%7D%5D%20-%20%5Chat%7BATE%7D"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">infl_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Q_A_update) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> H_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Q_1_update <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Q_0_update <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> tmle_ate</span></code></pre></div>
</div>
<p>Once we have the IF, we can <strong>take the square-root of its variance divided by the number of observations</strong> to get the standard error of our estimate.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BSE%7D%20=%20%5Csqrt%7B%5Cfrac%7Bvar(%5Chat%7BIF%7D)%7D%7BN%7D%7D%20"></p>
<p><img src="www.khstats.com/img/tmle/15_ses.png" class="img-fluid" style="width:100.0%"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">tmle_se <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(infl_fn)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(dat_obs))</span></code></pre></div>
</div>
<p>Once we have that standard error, we can easily get the 95% confidence interval and p-value of our estimate.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">conf_low <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tmle_ate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tmle_se</span>
<span id="cb25-2">conf_high <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tmle_ate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tmle_se</span>
<span id="cb25-3">pval <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(tmle_ate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> tmle_se)))</span>
<span id="cb25-4"></span>
<span id="cb25-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(tmle_ate, conf_low, conf_high) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMLE Estimate of the ATE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output-display">

<div id="hrilomjnxp" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#hrilomjnxp) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#hrilomjnxp) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#hrilomjnxp) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#hrilomjnxp) .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#hrilomjnxp) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#hrilomjnxp) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#hrilomjnxp) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#hrilomjnxp) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

:where(#hrilomjnxp) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

:where(#hrilomjnxp) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#hrilomjnxp) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#hrilomjnxp) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#hrilomjnxp) .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hrilomjnxp) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#hrilomjnxp) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#hrilomjnxp) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hrilomjnxp) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#hrilomjnxp) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hrilomjnxp) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

:where(#hrilomjnxp) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hrilomjnxp) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#hrilomjnxp) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#hrilomjnxp) .gt_left {
  text-align: left;
}

:where(#hrilomjnxp) .gt_center {
  text-align: center;
}

:where(#hrilomjnxp) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#hrilomjnxp) .gt_font_normal {
  font-weight: normal;
}

:where(#hrilomjnxp) .gt_font_bold {
  font-weight: bold;
}

:where(#hrilomjnxp) .gt_font_italic {
  font-style: italic;
}

:where(#hrilomjnxp) .gt_super {
  font-size: 65%;
}

:where(#hrilomjnxp) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#hrilomjnxp) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#hrilomjnxp) .gt_indent_1 {
  text-indent: 5px;
}

:where(#hrilomjnxp) .gt_indent_2 {
  text-indent: 10px;
}

:where(#hrilomjnxp) .gt_indent_3 {
  text-indent: 15px;
}

:where(#hrilomjnxp) .gt_indent_4 {
  text-indent: 20px;
}

:where(#hrilomjnxp) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="3" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">TMLE Estimate of the ATE</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">tmle_ate</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">conf_low</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col">conf_high</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td class="gt_row gt_right">0.191</td>
<td class="gt_row gt_right">0.133</td>
<td class="gt_row gt_right">0.249</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>Then we can successfully report our ATE as 0.191 (95% CI: 0.133, 0.249).</p>
<p><em>Note that a TMLE estimator is asymptotically normally distributed, so we could bootstrap the entire algorithm to get our standard errors instead.</em></p>
<p>⤴️<em>Back to the top</em></p>
</section>
</section>
<section id="using-the-tmle-package" class="level1">
<h1>Using the <code>tmle</code> package 📦</h1>
<p>Luckily there are <code>R</code> packages so that you don’t have to hand code TMLE yourself. <code>R</code> packages to implement the TMLE algorithm include <a href="https://www.jstatsoft.org/article/view/v051i13"><code>tmle</code></a>, <a href="https://tlverse.org/tlverse-handbook/tmle3.html"><code>tmle3</code></a>, <a href="https://www.jstatsoft.org/article/view/v081i01"><code>ltmle</code></a>, <a href="https://cran.r-project.org/web/packages/drtmle/vignettes/using_drtmle.html"><code>drtmle</code></a>, and <a href="https://htmlpreview.github.io/?https://gist.githubusercontent.com/nt-williams/ddd44c48390b8d976fad71750e48d8bf/raw/45db700a02bf92e2a55790e60ed48266a97ca4e7/intro-lmtp.html"><code>lmtp</code></a>.</p>
<p>The code using the original <code>tmle</code> package’s <code>tmle()</code> function is:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">tmle_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb26-2">  tmle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmle</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> Y, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># outcome vector</span></span>
<span id="cb26-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> A, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># treatment vector</span></span>
<span id="cb26-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">W =</span> W, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># matrix of confounders W1, W2, W3, W4</span></span>
<span id="cb26-5">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Q.SL.library =</span> sl_libs, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># superlearning libraries from earlier for outcome regression Q(A,W)</span></span>
<span id="cb26-6">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">g.SL.library =</span> sl_libs) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># superlearning libraries from earlier for treatment regression g(W)</span></span>
<span id="cb26-7"></span>
<span id="cb26-8">tmle_fit</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Additive Effect
   Parameter Estimate:  0.19188
   Estimated Variance:  0.00088096
              p-value:  1.0142e-10
    95% Conf Interval: (0.13371, 0.25006) 

 Additive Effect among the Treated
   Parameter Estimate:  0.18992
   Estimated Variance:  0.00091243
              p-value:  3.2259e-10
    95% Conf Interval: (0.13072, 0.24913) 

 Additive Effect among the Controls
   Parameter Estimate:  0.19372
   Estimated Variance:  0.00101
              p-value:  1.0908e-09
    95% Conf Interval: (0.13143, 0.25601) </code></pre>
</div>
</div>
<p>We can get the same result (variation due to randomness in the machine learning models) in just a few lines of code: the estimate using the original <code>tmle</code> package is 0.192 (95% CI: 0.134, 0.25).</p>
<hr>
<p>To learn more about the statistical properties of TMLE and the underlying theory, <a href="https://khstats.com/blog/tmle/tutorial-pt3"><em>continue on to Part III</em></a>. Alternatively, return to the motivation in <a href="https://khstats.com/blog/tmle/tutorial/"><em>Part I</em></a>, or see the full tutorial code below.</p>
<hr>
</section>
<section id="full-tutorial-code" class="level1">
<h1>Full tutorial code</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for data manipulation</span></span>
<span id="cb28-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(SuperLearner) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for ensemble learning</span></span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for reproducible results</span></span>
<span id="cb28-5"></span>
<span id="cb28-6">sl_libs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SL.glmnet'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SL.ranger'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SL.earth'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a library of machine learning algorithms (penalized regression, random forests, and multivariate adaptive regression splines)</span></span>
<span id="cb28-7"></span>
<span id="cb28-8">generate_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(n){ </span>
<span id="cb28-9">    W1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># binary confounder</span></span>
<span id="cb28-10">    W2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># binary confounder</span></span>
<span id="cb28-11">    W3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># continuous confounder</span></span>
<span id="cb28-12">    W4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># continuous confounder</span></span>
<span id="cb28-13">    A  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W3) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W4)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># binary treatment depends on confounders</span></span>
<span id="cb28-14">    Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W4))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># binary outcome depends on confounders</span></span>
<span id="cb28-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(Y, W1, W2, W3, W4, A))</span>
<span id="cb28-16">}</span>
<span id="cb28-17"></span>
<span id="cb28-18">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb28-19">dat_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_data</span>(n) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate a data set with n observations</span></span>
<span id="cb28-20"></span>
<span id="cb28-21">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y</span>
<span id="cb28-22">W_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Y) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove the outcome to make a matrix of predictors (A, W1, W2, W3, W4) for SuperLearner</span></span>
<span id="cb28-23"></span>
<span id="cb28-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Step 1: Estimate Q</span></span>
<span id="cb28-25">Q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SuperLearner</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> Y, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Y is the outcome vector</span></span>
<span id="cb28-26">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> W_A, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># W_A is the matrix of W1, W2, W3, W4, and A</span></span>
<span id="cb28-27">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify we have a binary outcome</span></span>
<span id="cb28-28">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SL.library =</span> sl_libs) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify our superlearner library of LASSO, RF, and MARS</span></span>
<span id="cb28-29">Q_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(Q)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># obtain predictions for everyone using the treatment they actually received</span></span>
<span id="cb28-30">W_A1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> W_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data set where everyone received treatment</span></span>
<span id="cb28-31">Q_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(Q, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> W_A1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict on that everyone-exposed data set</span></span>
<span id="cb28-32">W_A0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> W_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data set where no one received treatment</span></span>
<span id="cb28-33">Q_0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(Q, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> W_A0)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred)</span>
<span id="cb28-34">dat_tmle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> dat_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> dat_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>A, Q_A, Q_0, Q_1)</span>
<span id="cb28-35"></span>
<span id="cb28-36"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Step 2: Estimate g and compute H(A,W)</span></span>
<span id="cb28-37">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>A</span>
<span id="cb28-38">W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Y, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>A) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># matrix of predictors that only contains the confounders W1, W2, W3, and W4</span></span>
<span id="cb28-39">g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SuperLearner</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> A, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># outcome is the A (treatment) vector</span></span>
<span id="cb28-40">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> W, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># W is a matrix of predictors</span></span>
<span id="cb28-41">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># treatment is a binomial outcome</span></span>
<span id="cb28-42">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SL.library=</span>sl_libs) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># using same candidate learners; could use different learners</span></span>
<span id="cb28-43"></span>
<span id="cb28-44">g_w <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(g)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pr(A=1|W)</span></span>
<span id="cb28-45">H_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>g_w</span>
<span id="cb28-46">H_0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>g_w) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pr(A=0|W) is 1-Pr(A=1|W)</span></span>
<span id="cb28-47">dat_tmle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add clever covariate data to dat_tmle</span></span>
<span id="cb28-48">  dat_tmle <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(</span>
<span id="cb28-50">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H_1 =</span> H_1,</span>
<span id="cb28-51">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H_0 =</span> H_0) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H_A =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> H_1, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if A is 1 (treated), assign H_1</span></span>
<span id="cb28-53">                       A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> H_0))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if A is 0 (not treated), assign H_0</span></span>
<span id="cb28-54"></span>
<span id="cb28-55"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Step 3: Estimate fluctuation parameter</span></span>
<span id="cb28-56">glm_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">offset</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(Q_A)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> H_A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>dat_tmle, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span>binomial) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fixed intercept logistic regression</span></span>
<span id="cb28-57">eps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(glm_fit) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save the only coefficient, called epsilon in TMLE lit</span></span>
<span id="cb28-58"></span>
<span id="cb28-59"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Step 4: Update Q's</span></span>
<span id="cb28-60">H_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_tmle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>H_A <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for cleaner code in Q_A_update</span></span>
<span id="cb28-61">Q_A_update <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(Q_A) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H_A) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># updated expected outcome given treatment actually received</span></span>
<span id="cb28-62">Q_1_update <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(Q_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H_1) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># updated expected outcome for everyone receiving treatment</span></span>
<span id="cb28-63">Q_0_update <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(Q_0) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H_0) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># updated expected outcome for everyone not receiving treatment</span></span>
<span id="cb28-64"></span>
<span id="cb28-65"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Step 5: Compute ATE</span></span>
<span id="cb28-66">tmle_ate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Q_1_update <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Q_0_update) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mean diff in updated expected outcome estimates</span></span>
<span id="cb28-67"></span>
<span id="cb28-68"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Step 6: compute standard error, CIs and pvals</span></span>
<span id="cb28-69">infl_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Q_A_update) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> H_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Q_1_update <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Q_0_update <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> tmle_ate <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># influence function</span></span>
<span id="cb28-70">tmle_se <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(infl_fn)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(dat_obs)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># standard error</span></span>
<span id="cb28-71">conf_low <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tmle_ate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tmle_se <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 95% CI</span></span>
<span id="cb28-72">conf_high <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tmle_ate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tmle_se</span>
<span id="cb28-73">pval <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(tmle_ate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> tmle_se))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p-value at alpha .05</span></span>
<span id="cb28-74"></span>
<span id="cb28-75">tmle_ate</span>
<span id="cb28-76">conf_low</span>
<span id="cb28-77">conf_high</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>R version 4.1.2 (2021-11-01)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] splines   stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] SuperLearner_2.0-28 gam_1.22-2          foreach_1.5.2      
 [4] nnls_1.4            gt_0.7.0            forcats_0.5.1      
 [7] stringr_1.5.0       dplyr_1.0.10        purrr_0.3.5        
[10] readr_2.1.2         tidyr_1.2.1         tibble_3.1.8       
[13] ggplot2_3.4.0       tidyverse_1.3.2    

loaded via a namespace (and not attached):
 [1] httr_1.4.2          sass_0.4.5          jsonlite_1.8.4     
 [4] modelr_0.1.8        Formula_1.2-4       assertthat_0.2.1   
 [7] googlesheets4_1.0.0 cellranger_1.1.0    yaml_2.3.7         
[10] pillar_1.8.1        backports_1.4.1     lattice_0.20-45    
[13] glue_1.6.2          digest_0.6.31       rvest_1.0.2        
[16] colorspace_2.0-3    htmltools_0.5.4     Matrix_1.3-4       
[19] pkgconfig_2.0.3     broom_1.0.1         earth_5.3.1        
[22] haven_2.4.3         scales_1.2.1        ranger_0.14.1      
[25] TeachingDemos_2.12  tzdb_0.2.0          googledrive_2.0.0  
[28] generics_0.1.3      ellipsis_0.3.2      withr_2.5.0        
[31] ROCR_1.0-11         cli_3.6.1           survival_3.2-13    
[34] magrittr_2.0.3      crayon_1.5.0        readxl_1.3.1       
[37] evaluate_0.20       fs_1.6.0            fansi_1.0.3        
[40] xml2_1.3.3          tools_4.1.2         hms_1.1.1          
[43] gargle_1.2.0        lifecycle_1.0.3     munsell_0.5.0      
[46] reprex_2.0.1        glmnet_4.1-3        plotrix_3.8-2      
[49] compiler_4.1.2      rlang_1.0.6         plotmo_3.6.1       
[52] grid_4.1.2          iterators_1.0.14    rstudioapi_0.13    
[55] htmlwidgets_1.5.4   rmarkdown_2.20      gtable_0.3.1       
[58] codetools_0.2-18    DBI_1.1.2           R6_2.5.1           
[61] lubridate_1.8.0     knitr_1.42          fastmap_1.1.0      
[64] utf8_1.2.2          shape_1.4.6         tmle_1.5.0.2       
[67] stringi_1.7.12      Rcpp_1.0.9          vctrs_0.5.2        
[70] dbplyr_2.1.1        tidyselect_1.2.0    xfun_0.36          </code></pre>
</div>
</div>
<p>⬅️️<a href="https://khstats.com/blog/tmle/tutorial"><em>Back to Part I: Motivation</em></a></p>
<p>⤴️<em>Back to the top</em></p>
<p>➡️<a href="https://khstats.com/blog/tmle/tutorial-pt3/"><em>Continue to Part III:Properties, Theory, and Learning More</em></a></p>


</section>

 ]]></description>
  <category>statistics</category>
  <guid>www.khstats.com/blog/tmle/tutorial-pt2.html</guid>
  <pubDate>Fri, 11 Dec 2020 05:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/tmle/tmle/tmle_crop.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>An Illustrated Guide to TMLE, Part I: Introduction and Motivation</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/tmle/tutorial.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>The <strong>introductory post</strong> of a three-part series to help beginners understand Targeted Maximum Likelihood Estimation (TMLE). This section contains a brief overview of the <strong>targeted learning framework</strong> and motivation for <strong>semiparametric estimation methods for inference</strong>, including causal inference.</p>
</blockquote>
<hr>
<section id="table-of-contents" class="level1">
<h1>Table of Contents</h1>
<p><em>This blog post series has three parts:</em></p>
<section id="part-i-motivation" class="level3">
<h3 class="anchored" data-anchor-id="part-i-motivation">Part I: Motivation</h3>
<ol type="1">
<li>TMLE in three sentences 🎯</li>
<li>An Analyst’s Motivation for Learning TMLE 👩🏼‍💻</li>
<li>Is TMLE Causal Inference? 🤔</li>
</ol>
</section>
<section id="part-ii-algorithm" class="level3">
<h3 class="anchored" data-anchor-id="part-ii-algorithm"><a href="https://khstats.com/blog/tmle/tutorial-pt2">Part II: Algorithm</a></h3>
<ol start="4" type="1">
<li><a href="https://khstats.com/blog/tmle/tutorial-pt2/#why-the-visual-guide">Why the Visual Guide? 🎨</a></li>
<li><a href="https://khstats.com/blog/tmle/tutorial-pt2/#tmle-step-by-step">TMLE, Step-by-Step 🚶🏽</a></li>
<li><a href="https://khstats.com/blog/tmle/tutorial-pt2/#using-the-tmle-package">Using the <code>tmle</code> package 📦</a></li>
</ol>
</section>
<section id="part-iii-evaluation" class="level3">
<h3 class="anchored" data-anchor-id="part-iii-evaluation"><a href="https://khstats.com/blog/tmle/tutorial-pt3">Part III: Evaluation</a></h3>
<ol start="7" type="1">
<li><a href="https://khstats.com/blog/tmle/tutorial-pt3/#properties-of-tmle">Properties of TMLE 📈</a></li>
<li><a href="https://khstats.com/blog/tmle/tutorial-pt3/#why-does-tmle-work">Why does TMLE work? ✨</a></li>
<li><a href="https://khstats.com/blog/tmle/tutorial-pt3/#resources-to-learn-more">Resources to learn more 🤓</a></li>
</ol>
<hr>
</section>
</section>
<section id="tmle-in-three-sentences" class="level1">
<h1>TMLE in three sentences 🎯</h1>
<p>Targeted Maximum Likelihood Estimation (TMLE) is a semiparametric estimation framework to <strong>estimate a statistical quantity of interest</strong>. TMLE allows the use of <strong>machine learning</strong> (ML) models which place <strong>minimal assumptions on the distribution of the data</strong>. Unlike estimates normally obtained from ML, the <strong>final TMLE estimate will still have valid standard errors for statistical inference</strong>.</p>
</section>
<section id="an-analysts-motivation-for-learning-tmle" class="level1">
<h1>An Analyst’s Motivation for Learning TMLE 👩🏼‍💻</h1>
<p>When I graduated with my MS in Biostatistics two years ago, I had a mental framework of statistics and data science that I think is pretty common among new graduates. It went like this:</p>
<ol type="1">
<li><p>If the goal is <span style="color: #3366ff;">inference</span> (e.g., an effect size with a confidence interval), use an <span style="color: #3366ff;">interpretable, usually parametric, model</span> and explain what the coefficients and their standard errors mean.</p></li>
<li><p>If the goal is <span style="color: #cc0000;">prediction</span>, use <span style="color: #cc0000;">data-adaptive machine learning algorithms</span> and then look at performance metrics, with the understanding that standard errors, and sometimes even coefficients, no longer exist.</p></li>
</ol>
<p>This mentality changed drastically when I started learning about semiparametric estimation methods like TMLE in the context of causal inference. I quickly realized two flaws in this mental framework.</p>
<p>First, I was thinking about inference backwards: I was choosing a model based on my outcome type (binary, continuous, time-to-event, repeated measures) and then interpreting specific coefficients as my estimates of interest. Yet it makes way more sense to <em>first</em> determine the statistical quantity, or <strong>estimand</strong>, that best answers a scientific question, and <em>then</em> use the method, or <strong>estimator</strong>, best suited for estimating it. This is the paradigm TMLE is based upon: <strong>we want to build an algorithm, or estimator, targeted to an estimand of interest</strong>.</p>
<!-- <figure> -->
<!-- <img src="tmle/estimator.png" alt="Estimator and Estimand" width="90%"/> -->
<!-- <figcaption>*An estimand is a quantity that answers a scientific question of interest. Once we figure out the estimand, we can build an estimator, or algorithm, to estimate it. Image courtesy of Dr. Laura Hatfield and [diff.healthpolicydatascience.org](https://diff.healthpolicydatascience.org/).*</figcaption> -->
<!-- </figure> -->
<p>Second, I thought flexible, data-adaptive models we commonly classify as statistical and/or <strong>machine learning</strong> (e.g.&nbsp;LASSO, random forests, gradient boosting, etc.) could only be used for prediction, since they don’t have <strong>asymptotic properties for inference</strong> (i.e.&nbsp;standard errors). However, certain <strong>semiparametric estimation methods</strong> like TMLE can actually use these models to <strong>obtain a final estimate that is closer to the target quantity</strong> than would be obtained using classic parametric models (e.g.&nbsp;linear and logistic regression). This is because machine learning models are generally designed to accommodate <strong>large numbers of covariates</strong> with <strong>complex, non-linear relationships</strong>.</p>
<p><img src="www.khstats.com/blog/tmle/tmle/parametric_assumptions_comic.jpg" width="100%"></p>
<figcaption>
<em>Semiparametric estimation methods like TMLE can rely on machine learning to avoid making unrealistic parametric assumptions about the underlying distribution of the data (e.g.&nbsp;multivariate normality).</em>
</figcaption>
<p>The way we use the machine learning estimates in TMLE, surprisingly enough, yields <strong>known asymptotic properties of bias and variance</strong> – just like we see in parametric maximum likelihood estimation – for our target estimand.</p>
<p>Besides allowing us to compute 95% confidence intervals and p-values for our estimates even after using flexible models, TMLE achieves other beneficial statistical properties, such as <strong>double robustness</strong>. These are discussed further in <a href="https://khstats.com/blog/tmle/tutorial-pt3/"><em>Part III</em></a>.</p>
</section>
<section id="is-tmle-causal-inference" class="level1 page-columns page-full">
<h1>Is TMLE Causal Inference? 🤔</h1>
<div class="page-columns page-full"><p>If you’ve heard about TMLE before, it was likely in the context of <strong>causal inference</strong>. Although TMLE was developed for causal inference due to its many attractive properties, it cannot be considered causal inference by itself. Causal inference is a two-step process that first requires <strong>causal assumptions</strong><sup>1</sup> before a statistical estimand can be interpreted causally.</p><div class="no-row-height column-margin column-container"><li id="fn1"><p><sup>1</sup>&nbsp;I won’t discuss causal assumptions in these posts, but this is referring to fundamental assumptions in causal inference like consistency, exchangeability, and positivity. A primary motivation for using TMLE and other semiparametric estimation methods for causal inference is that if you’ve already taken the time to carefully evaluate <em>causal</em> assumptions, it does not make sense to then damage an otherwise well-designed analysis by making unrealistic <em>statistical</em> assumptions.</p></li></div></div>
<p><strong>TMLE can be used to estimate various statistical estimands</strong> (odds ratio, risk ratio, mean outcome difference, etc.) <strong>even when causal assumptions are not met</strong>. TMLE is, as its name implies, simply a tool for estimation.</p>
<p><img src="www.khstats.com/img/ident-vs-est.png" class="img-fluid"></p>
<p>In <a href="https://khstats.com/blog/tmle/tutorial-pt2/"><em>Part II</em></a>, I’ll walk step-by-step through a basic version of the TMLE algorithm: estimating the mean difference in outcomes, adjusted for confounders, for a binary outcome and binary treatment. If causal assumptions are met, this is called the <strong>Average Treatment Effect (ATE)</strong>, or the mean difference in outcomes in a world in which everyone had received the treatment compared to a world in which everyone had not.</p>
<p>⤴️<em>Back to the top</em></p>
<p>➡️<a href="https://khstats.com/blog/tmle/tutorial-pt2/"><em>Continue to Part II: The Algorithm</em></a></p>
<hr>
<section id="references" class="level3">
<h3 class="anchored" data-anchor-id="references"><em>References</em></h3>
<p>My primary reference for all three posts is <a href="https://link.springer.com/book/10.1007/978-1-4419-9782-1"><em>Targeted Learning</em></a> by Mark van der Laan and Sherri Rose. I detail many other resources I’ve used to learn TMLE, semiparametric theory, and causal inference in <a href="https://khstats.com/blog/tmle/tutorial-pt3/"><em>Part III</em></a>.</p>


</section>
</section>


 ]]></description>
  <category>statistics</category>
  <guid>www.khstats.com/blog/tmle/tutorial.html</guid>
  <pubDate>Thu, 10 Dec 2020 05:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/tmle/tmle/parametric_assumptions_comic.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Become a Superlearner! An Illustrated Guide to Superlearning</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/sl/superlearning.html</link>
  <description><![CDATA[ 






<title>
HTML Image as link
</title>


<p><img src="www.khstats.com/img/sl_steps/Superlearning.jpg" alt="cheatsheet" width="100%&quot;"></p>
<figcaption>
<strong><em>A Visual Guide…</em></strong> Over the winter, I read <a href="https://www.springer.com/gp/book/9781441997814"><em>Targeted Learning</em></a> by Mark van der Laan and Sherri Rose. This “visual guide” I made for <em>Chapter 3: Superlearning</em> by Rose, van der Laan, and Eric Polley is a condensed version of the following tutorial. It is available as an <a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/Superlearner.pdf">8.5x11” pdf on Github</a>, should you wish to print it out for reference (or desk decor).
</figcaption>
<p></p>


<p><br></p>
<section id="supercuts-of-superlearning" class="level1">
<h1>Supercuts of superlearning</h1>
<ul>
<li><strong>Superlearning</strong> is a technique for prediction that involves <strong>combining many individual statistical algorithms</strong> (commonly called “data-adaptive” or “machine learning” algorithms) to <strong>create a new, single prediction algorithm</strong> that is expected to <strong>perform at least as well as any of the individual algorithms</strong>.</li>
<li>The superlearner algorithm “decides” how to combine, or weight, the individual algorithms based upon how well each one <strong>minimizes a specified loss function</strong>, for example, the mean squared error (MSE). This is done using cross-validation to avoid overfitting.</li>
<li>The motivation for this type of “ensembling” is that <strong>a mix of multiple algorithms may be more optimal for a given data set than any single algorithm</strong>. For example, a tree based model averaged with a linear model (e.g.&nbsp;random forests and LASSO) could smooth some of the model’s edges to improve predictive performance.</li>
<li>Superlearning is also called stacking, stacked generalizations, and weighted ensembling by different specializations within the realms of statistics and data science.</li>
</ul>
<p><img src="www.khstats.com/img/spiderman_meme.jpg" class="img-fluid" style="width:42.0%"></p>
</section>
<section id="superlearning-step-by-step" class="level1">
<h1>Superlearning, step by step</h1>
<p>First I’ll go through the algorithm one step at a time using a simulated data set.</p>
<section id="initial-set-up-load-libraries-set-seed-simulate-data" class="level2">
<h2 class="anchored" data-anchor-id="initial-set-up-load-libraries-set-seed-simulate-data">Initial set-up: Load libraries, set seed, simulate data</h2>
<p>For simplicity I’ll show the concept of superlearning using only four variables (AKA features or predictors) to predict a continuous outcome. Let’s first simulate a continuous outcome, <code>y</code>, and four potential predictors, <code>x1</code>, <code>x2</code>, <code>x3</code>, and <code>x4</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span></span>
<span id="cb2-2">obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n),</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x1)),</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x3 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x2)),</span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x4 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean=</span>x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3),</span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> x1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(x4)</span>
<span id="cb2-9">)</span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(obs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Simulated data set"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output-display">

<div id="epunggiefm" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#epunggiefm table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#epunggiefm thead, #epunggiefm tbody, #epunggiefm tfoot, #epunggiefm tr, #epunggiefm td, #epunggiefm th {
  border-style: none;
}

#epunggiefm p {
  margin: 0;
  padding: 0;
}

#epunggiefm .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#epunggiefm .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#epunggiefm .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#epunggiefm .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#epunggiefm .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#epunggiefm .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#epunggiefm .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#epunggiefm .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#epunggiefm .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#epunggiefm .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#epunggiefm .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#epunggiefm .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#epunggiefm .gt_spanner_row {
  border-bottom-style: hidden;
}

#epunggiefm .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#epunggiefm .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#epunggiefm .gt_from_md > :first-child {
  margin-top: 0;
}

#epunggiefm .gt_from_md > :last-child {
  margin-bottom: 0;
}

#epunggiefm .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#epunggiefm .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#epunggiefm .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#epunggiefm .gt_row_group_first td {
  border-top-width: 2px;
}

#epunggiefm .gt_row_group_first th {
  border-top-width: 2px;
}

#epunggiefm .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#epunggiefm .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#epunggiefm .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#epunggiefm .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#epunggiefm .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#epunggiefm .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#epunggiefm .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#epunggiefm .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#epunggiefm .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#epunggiefm .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#epunggiefm .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#epunggiefm .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#epunggiefm .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#epunggiefm .gt_left {
  text-align: left;
}

#epunggiefm .gt_center {
  text-align: center;
}

#epunggiefm .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#epunggiefm .gt_font_normal {
  font-weight: normal;
}

#epunggiefm .gt_font_bold {
  font-weight: bold;
}

#epunggiefm .gt_font_italic {
  font-style: italic;
}

#epunggiefm .gt_super {
  font-size: 65%;
}

#epunggiefm .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#epunggiefm .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#epunggiefm .gt_indent_1 {
  text-indent: 5px;
}

#epunggiefm .gt_indent_2 {
  text-indent: 10px;
}

#epunggiefm .gt_indent_3 {
  text-indent: 15px;
}

#epunggiefm .gt_indent_4 {
  text-indent: 20px;
}

#epunggiefm .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="6" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Simulated data set</td>
    </tr>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="id">id</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="x1">x1</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="x2">x2</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="x3">x3</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="x4">x4</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="y">y</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="id" class="gt_row gt_right">1.000</td>
<td headers="x1" class="gt_row gt_right">2.287</td>
<td headers="x2" class="gt_row gt_right">1.000</td>
<td headers="x3" class="gt_row gt_right">1.000</td>
<td headers="x4" class="gt_row gt_right">1.385</td>
<td headers="y" class="gt_row gt_right">5.270</td></tr>
    <tr><td headers="id" class="gt_row gt_right">2.000</td>
<td headers="x1" class="gt_row gt_right">−1.197</td>
<td headers="x2" class="gt_row gt_right">0.000</td>
<td headers="x3" class="gt_row gt_right">0.000</td>
<td headers="x4" class="gt_row gt_right">0.000</td>
<td headers="y" class="gt_row gt_right">−1.197</td></tr>
    <tr><td headers="id" class="gt_row gt_right">3.000</td>
<td headers="x1" class="gt_row gt_right">−0.694</td>
<td headers="x2" class="gt_row gt_right">0.000</td>
<td headers="x3" class="gt_row gt_right">0.000</td>
<td headers="x4" class="gt_row gt_right">0.000</td>
<td headers="y" class="gt_row gt_right">−0.694</td></tr>
    <tr><td headers="id" class="gt_row gt_right">4.000</td>
<td headers="x1" class="gt_row gt_right">−0.412</td>
<td headers="x2" class="gt_row gt_right">0.000</td>
<td headers="x3" class="gt_row gt_right">1.000</td>
<td headers="x4" class="gt_row gt_right">−0.541</td>
<td headers="y" class="gt_row gt_right">−0.928</td></tr>
    <tr><td headers="id" class="gt_row gt_right">5.000</td>
<td headers="x1" class="gt_row gt_right">−0.971</td>
<td headers="x2" class="gt_row gt_right">0.000</td>
<td headers="x3" class="gt_row gt_right">0.000</td>
<td headers="x4" class="gt_row gt_right">0.000</td>
<td headers="y" class="gt_row gt_right">−0.971</td></tr>
    <tr><td headers="id" class="gt_row gt_right">6.000</td>
<td headers="x1" class="gt_row gt_right">−0.947</td>
<td headers="x2" class="gt_row gt_right">0.000</td>
<td headers="x3" class="gt_row gt_right">1.000</td>
<td headers="x4" class="gt_row gt_right">−0.160</td>
<td headers="y" class="gt_row gt_right">−1.107</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 1: Split data into K folds</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p><img src="www.khstats.com/img/sl_steps/step1.png" class="img-fluid" style="width:50.0%"> The superlearner algorithm relies on K-fold cross-validation (CV) to avoid overfitting. We will start this process by splitting the data into 10 folds. The easiest way to do this is by creating indices for each CV fold.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10 fold cv</span></span>
<span id="cb3-2">cv_index <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>k, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>k)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create indices for each CV fold. We need each fold K to contain n (all the rows of our data set) divided by k rows. in our example this is 5000/10 = 500 rows in each fold</span></span></code></pre></div>
</div>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 2: Fit base learners for first CV-fold</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p><img src="www.khstats.com/img/sl_steps/step2.png" class="img-fluid" style="width:50.0%"></p>
<p>Recall that in K-fold CV, each fold serves as the validation set one time. In this first round of CV, we will train all of our base learners on all the CV folds (k = 1,2,…,9) <em>except</em> for the very last one: <code>cv_index == 10</code>.</p>
<p>The individual algorithms or <strong>base learners</strong> that we’ll use here are three linear regressions with differently specified parameters:</p>
<ol type="1">
<li><p><strong>Learner A</strong>: <img src="https://latex.codecogs.com/png.latex?Y=%5Cbeta_0%20+%20%5Cbeta_1%20X_2%20+%20%5Cbeta_2%20X_4%20+%20%5Cepsilon"></p></li>
<li><p><strong>Learner B</strong>: <img src="https://latex.codecogs.com/png.latex?Y=%5Cbeta_0%20+%20%5Cbeta_1%20X_1%20+%20%5Cbeta_2%20X_2%20+%20%5Cbeta_3%20X_1%20X_3%20+%20%5Cbeta_4%20sin(X_4)%20+%20%5Cepsilon"></p></li>
<li><p><strong>Learner C</strong>: <img src="https://latex.codecogs.com/png.latex?Y=%5Cbeta_0%20+%20%5Cbeta_1%20X_1%20+%20%5Cbeta_2%20X_2%20+%20%5Cbeta_3%20X_3%20+%20%5Cbeta_4%20X_1%20X_2%20+%20%5Cbeta_5%20X_1%20X_3%20+%20%5Cbeta_6%20X_2%20X_3%20+%20%5Cbeta_7%20X_1%20X_2%20X_3%20+%20%5Cepsilon"></p></li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">cv_train_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> obs[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(cv_index <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a data set that contains all observations except those in k=1</span></span>
<span id="cb4-2">fit_1a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x4, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>cv_train_1) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit the first linear regression on that training data</span></span>
<span id="cb4-3">fit_1b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(x4), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>cv_train_1) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second LR fit on the training data</span></span>
<span id="cb4-4">fit_1c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>cv_train_1) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and the third LR</span></span></code></pre></div>
</div>
<p>I am <em>only</em> using the linear regressions so that code for running more complicated regressions does not take away from understanding the general superlearning algorithm.</p>
<p>Superlearning actually works best if you use a diverse set, or <strong>superlearner library</strong>, of base learners. For example, instead of three linear regressions, we could use a least absolute shrinkage estimator (LASSO), random forest, and multivariate adaptive splines (MARS). Any parametric or non-parametric supervised machine learning algorithm can be included as a base learner.</p>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 3: Obtain predictions for first CV-fold</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p><img src="www.khstats.com/img/sl_steps/step3.png" class="img-fluid" style="width:50.0%"></p>
<p>We can then get use our validation data, <code>cv_index == 10</code>, to obtain our first set of cross-validated predictions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">cv_valid_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> obs[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(cv_index <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a data set that only contains observations except in k=10</span></span>
<span id="cb5-2">pred_1a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_1a, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> cv_valid_1) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use that data set as the validation for all the models in the SL library</span></span>
<span id="cb5-3">pred_1b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_1b, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> cv_valid_1) </span>
<span id="cb5-4">pred_1c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_1c, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> cv_valid_1)</span></code></pre></div>
</div>
<p>Since we have 5000 <code>obs</code>ervations, that gives us three vectors of length 500: a set of predictions for each of our Learners A, B, and C.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pred_1a) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># double check we only have n/k predictions ...we do :-)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 500</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(pred_1a, pred_1b, pred_1c)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First CV round of predictions"</span>) </span></code></pre></div>
<div class="cell-output-display">

<div id="uqioxzzkvs" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#uqioxzzkvs table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#uqioxzzkvs thead, #uqioxzzkvs tbody, #uqioxzzkvs tfoot, #uqioxzzkvs tr, #uqioxzzkvs td, #uqioxzzkvs th {
  border-style: none;
}

#uqioxzzkvs p {
  margin: 0;
  padding: 0;
}

#uqioxzzkvs .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#uqioxzzkvs .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#uqioxzzkvs .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#uqioxzzkvs .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#uqioxzzkvs .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uqioxzzkvs .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uqioxzzkvs .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uqioxzzkvs .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#uqioxzzkvs .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#uqioxzzkvs .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#uqioxzzkvs .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#uqioxzzkvs .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#uqioxzzkvs .gt_spanner_row {
  border-bottom-style: hidden;
}

#uqioxzzkvs .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#uqioxzzkvs .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#uqioxzzkvs .gt_from_md > :first-child {
  margin-top: 0;
}

#uqioxzzkvs .gt_from_md > :last-child {
  margin-bottom: 0;
}

#uqioxzzkvs .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#uqioxzzkvs .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#uqioxzzkvs .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#uqioxzzkvs .gt_row_group_first td {
  border-top-width: 2px;
}

#uqioxzzkvs .gt_row_group_first th {
  border-top-width: 2px;
}

#uqioxzzkvs .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uqioxzzkvs .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#uqioxzzkvs .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#uqioxzzkvs .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uqioxzzkvs .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uqioxzzkvs .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#uqioxzzkvs .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#uqioxzzkvs .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#uqioxzzkvs .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uqioxzzkvs .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uqioxzzkvs .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uqioxzzkvs .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uqioxzzkvs .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uqioxzzkvs .gt_left {
  text-align: left;
}

#uqioxzzkvs .gt_center {
  text-align: center;
}

#uqioxzzkvs .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#uqioxzzkvs .gt_font_normal {
  font-weight: normal;
}

#uqioxzzkvs .gt_font_bold {
  font-weight: bold;
}

#uqioxzzkvs .gt_font_italic {
  font-style: italic;
}

#uqioxzzkvs .gt_super {
  font-size: 65%;
}

#uqioxzzkvs .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#uqioxzzkvs .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#uqioxzzkvs .gt_indent_1 {
  text-indent: 5px;
}

#uqioxzzkvs .gt_indent_2 {
  text-indent: 10px;
}

#uqioxzzkvs .gt_indent_3 {
  text-indent: 15px;
}

#uqioxzzkvs .gt_indent_4 {
  text-indent: 20px;
}

#uqioxzzkvs .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="3" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">First CV round of predictions</td>
    </tr>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="pred_1a">pred_1a</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="pred_1b">pred_1b</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="pred_1c">pred_1c</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="pred_1a" class="gt_row gt_right">−0.77</td>
<td headers="pred_1b" class="gt_row gt_right">−0.81</td>
<td headers="pred_1c" class="gt_row gt_right">−0.69</td></tr>
    <tr><td headers="pred_1a" class="gt_row gt_right">2.54</td>
<td headers="pred_1b" class="gt_row gt_right">1.89</td>
<td headers="pred_1c" class="gt_row gt_right">1.63</td></tr>
    <tr><td headers="pred_1a" class="gt_row gt_right">0.19</td>
<td headers="pred_1b" class="gt_row gt_right">0.60</td>
<td headers="pred_1c" class="gt_row gt_right">−0.32</td></tr>
    <tr><td headers="pred_1a" class="gt_row gt_right">2.46</td>
<td headers="pred_1b" class="gt_row gt_right">2.69</td>
<td headers="pred_1c" class="gt_row gt_right">2.98</td></tr>
    <tr><td headers="pred_1a" class="gt_row gt_right">3.63</td>
<td headers="pred_1b" class="gt_row gt_right">4.04</td>
<td headers="pred_1c" class="gt_row gt_right">3.73</td></tr>
    <tr><td headers="pred_1a" class="gt_row gt_right">3.59</td>
<td headers="pred_1b" class="gt_row gt_right">3.23</td>
<td headers="pred_1c" class="gt_row gt_right">3.15</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 4: Obtain CV predictions for entire data set</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p><img src="www.khstats.com/img/sl_steps/step4.png" class="img-fluid" style="width:32.0%"></p>
<p>We’ll want to get those predictions for <em>every</em> fold. So, using your favorite <code>for</code> loop, <code>apply</code> statement, or <code>map</code>ping function, fit the base learners and obtain predictions for each of them, so that there are 1000 predictions – one for every point in <code>obs</code>ervations.</p>
<p>The way I chose to code this was to make a generic function that combines Step 2 (base learners fit to the training data) and Step 3 (predictions on the validation data), then use <code>map_dfr()</code> from the <code>purrr</code> package to repeat over all 10 CV folds. I saved the results in a new data frame called <code>cv_preds</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">cv_folds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.list</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>k)</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cv_folds) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fold"</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>k)</span>
<span id="cb9-3"></span>
<span id="cb9-4">get_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(fold){   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># function that does the same procedure as step 2 and 3 for any CV fold</span></span>
<span id="cb9-5">  cv_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> obs[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(cv_index <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fold),]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a training data set that contains all data except fold k</span></span>
<span id="cb9-6">  fit_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x4, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>cv_train)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit all the base learners to that data</span></span>
<span id="cb9-7">  fit_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(x4), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>cv_train)</span>
<span id="cb9-8">  fit_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>cv_train)</span>
<span id="cb9-9">  cv_valid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> obs[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(cv_index <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fold),]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a validation data set that only contains data from fold k</span></span>
<span id="cb9-10">  pred_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_a, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> cv_valid)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># obtain predictions from all the base learners for that validation data</span></span>
<span id="cb9-11">  pred_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_b, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> cv_valid)</span>
<span id="cb9-12">  pred_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_c, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> cv_valid)</span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"obs_id"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cv_valid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cv_fold"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> fold, pred_a, pred_b, pred_c))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save the predictions and the ids of the observations in a data frame</span></span>
<span id="cb9-14">}</span>
<span id="cb9-15"></span>
<span id="cb9-16">cv_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(cv_folds, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_preds</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fold =</span> .x)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># map_dfr loops through every fold (1:k) and binds the rows of the listed results together</span></span>
<span id="cb9-17"></span>
<span id="cb9-18">cv_preds <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(obs_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(cv_fold<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>pred_c, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"All CV predictions for all three base learners"</span>) </span></code></pre></div>
<div class="cell-output-display">

<div id="wxklwgczbv" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#wxklwgczbv table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#wxklwgczbv thead, #wxklwgczbv tbody, #wxklwgczbv tfoot, #wxklwgczbv tr, #wxklwgczbv td, #wxklwgczbv th {
  border-style: none;
}

#wxklwgczbv p {
  margin: 0;
  padding: 0;
}

#wxklwgczbv .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#wxklwgczbv .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#wxklwgczbv .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#wxklwgczbv .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#wxklwgczbv .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#wxklwgczbv .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wxklwgczbv .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#wxklwgczbv .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#wxklwgczbv .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#wxklwgczbv .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#wxklwgczbv .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#wxklwgczbv .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#wxklwgczbv .gt_spanner_row {
  border-bottom-style: hidden;
}

#wxklwgczbv .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#wxklwgczbv .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#wxklwgczbv .gt_from_md > :first-child {
  margin-top: 0;
}

#wxklwgczbv .gt_from_md > :last-child {
  margin-bottom: 0;
}

#wxklwgczbv .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#wxklwgczbv .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#wxklwgczbv .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#wxklwgczbv .gt_row_group_first td {
  border-top-width: 2px;
}

#wxklwgczbv .gt_row_group_first th {
  border-top-width: 2px;
}

#wxklwgczbv .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#wxklwgczbv .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#wxklwgczbv .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#wxklwgczbv .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wxklwgczbv .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#wxklwgczbv .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#wxklwgczbv .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#wxklwgczbv .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#wxklwgczbv .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wxklwgczbv .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#wxklwgczbv .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#wxklwgczbv .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#wxklwgczbv .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#wxklwgczbv .gt_left {
  text-align: left;
}

#wxklwgczbv .gt_center {
  text-align: center;
}

#wxklwgczbv .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#wxklwgczbv .gt_font_normal {
  font-weight: normal;
}

#wxklwgczbv .gt_font_bold {
  font-weight: bold;
}

#wxklwgczbv .gt_font_italic {
  font-style: italic;
}

#wxklwgczbv .gt_super {
  font-size: 65%;
}

#wxklwgczbv .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#wxklwgczbv .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#wxklwgczbv .gt_indent_1 {
  text-indent: 5px;
}

#wxklwgczbv .gt_indent_2 {
  text-indent: 10px;
}

#wxklwgczbv .gt_indent_3 {
  text-indent: 15px;
}

#wxklwgczbv .gt_indent_4 {
  text-indent: 20px;
}

#wxklwgczbv .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="5" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">All CV predictions for all three base learners</td>
    </tr>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="obs_id">obs_id</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="cv_fold">cv_fold</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="pred_a">pred_a</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="pred_b">pred_b</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="pred_c">pred_c</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="obs_id" class="gt_row gt_right">1</td>
<td headers="cv_fold" class="gt_row gt_right">7.00</td>
<td headers="pred_a" class="gt_row gt_right">3.74</td>
<td headers="pred_b" class="gt_row gt_right">5.42</td>
<td headers="pred_c" class="gt_row gt_right">5.28</td></tr>
    <tr><td headers="obs_id" class="gt_row gt_right">2</td>
<td headers="cv_fold" class="gt_row gt_right">6.00</td>
<td headers="pred_a" class="gt_row gt_right">−0.77</td>
<td headers="pred_b" class="gt_row gt_right">−1.19</td>
<td headers="pred_c" class="gt_row gt_right">−1.20</td></tr>
    <tr><td headers="obs_id" class="gt_row gt_right">3</td>
<td headers="cv_fold" class="gt_row gt_right">10.00</td>
<td headers="pred_a" class="gt_row gt_right">−0.77</td>
<td headers="pred_b" class="gt_row gt_right">−0.81</td>
<td headers="pred_c" class="gt_row gt_right">−0.69</td></tr>
    <tr><td headers="obs_id" class="gt_row gt_right">4</td>
<td headers="cv_fold" class="gt_row gt_right">8.00</td>
<td headers="pred_a" class="gt_row gt_right">−1.39</td>
<td headers="pred_b" class="gt_row gt_right">−0.77</td>
<td headers="pred_c" class="gt_row gt_right">−0.41</td></tr>
    <tr><td headers="obs_id" class="gt_row gt_right">5</td>
<td headers="cv_fold" class="gt_row gt_right">2.00</td>
<td headers="pred_a" class="gt_row gt_right">−0.78</td>
<td headers="pred_b" class="gt_row gt_right">−1.02</td>
<td headers="pred_c" class="gt_row gt_right">−0.97</td></tr>
    <tr><td headers="obs_id" class="gt_row gt_right">6</td>
<td headers="cv_fold" class="gt_row gt_right">9.00</td>
<td headers="pred_a" class="gt_row gt_right">−0.96</td>
<td headers="pred_b" class="gt_row gt_right">−1.04</td>
<td headers="pred_c" class="gt_row gt_right">−0.94</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 5: Choose and compute loss function of interest via metalearner</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p><img src="www.khstats.com/img/sl_steps/step5.png" class="img-fluid" style="width:60.0%"></p>
<blockquote class="blockquote">
<p>This is the key step of the superlearner algorithm: we will use a new learner, a <strong>metalearner</strong>, to take information from all of the base learners and create that new algorithm.</p>
</blockquote>
<p>Now that we have cross-validated predictions for every observation in the data set, we want to merge those CV predictions back into our main data set…</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">obs_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_join</span>(obs, cv_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"obs_id"</span>))</span></code></pre></div>
</div>
<p>…so that we can minimize a final loss function of interest between the true outcome and each CV prediction. This is how we’re going to optimize our overall prediction algorithm: we want to make sure we’re “losing the least” in the way we combine our base learners’ predictions to ultimately make final predictions. We can do this efficiently by choosing a new learner, a metalearner, which reflects the final loss function of interest.</p>
<p>For simplicity, we’ll use another linear regression as our metalearner. Using a linear regression as a metalearner will minimize the Cross-Validated Mean Squared Error (CV-MSE) when combining the base learner predictions. Note that we could use a variety of parametric or non-parametric regressions to minimize the CV-MSE.</p>
<p>No matter what metalearner we choose, the predictors will always be the cross-validated predictions from each base learner, and the outcome will always be the true outcome, <code>y</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">sl_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pred_a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pred_b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pred_c, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> obs_preds)</span>
<span id="cb11-2">broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(sl_fit) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(estimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>p.value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Metalearner regression coefficients"</span>) </span></code></pre></div>
<div class="cell-output-display">

<div id="lofpihbenx" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#lofpihbenx table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#lofpihbenx thead, #lofpihbenx tbody, #lofpihbenx tfoot, #lofpihbenx tr, #lofpihbenx td, #lofpihbenx th {
  border-style: none;
}

#lofpihbenx p {
  margin: 0;
  padding: 0;
}

#lofpihbenx .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#lofpihbenx .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#lofpihbenx .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#lofpihbenx .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#lofpihbenx .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lofpihbenx .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lofpihbenx .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lofpihbenx .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#lofpihbenx .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#lofpihbenx .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#lofpihbenx .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#lofpihbenx .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#lofpihbenx .gt_spanner_row {
  border-bottom-style: hidden;
}

#lofpihbenx .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#lofpihbenx .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#lofpihbenx .gt_from_md > :first-child {
  margin-top: 0;
}

#lofpihbenx .gt_from_md > :last-child {
  margin-bottom: 0;
}

#lofpihbenx .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#lofpihbenx .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#lofpihbenx .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#lofpihbenx .gt_row_group_first td {
  border-top-width: 2px;
}

#lofpihbenx .gt_row_group_first th {
  border-top-width: 2px;
}

#lofpihbenx .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lofpihbenx .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#lofpihbenx .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#lofpihbenx .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lofpihbenx .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lofpihbenx .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#lofpihbenx .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#lofpihbenx .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#lofpihbenx .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lofpihbenx .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lofpihbenx .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#lofpihbenx .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lofpihbenx .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#lofpihbenx .gt_left {
  text-align: left;
}

#lofpihbenx .gt_center {
  text-align: center;
}

#lofpihbenx .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#lofpihbenx .gt_font_normal {
  font-weight: normal;
}

#lofpihbenx .gt_font_bold {
  font-weight: bold;
}

#lofpihbenx .gt_font_italic {
  font-style: italic;
}

#lofpihbenx .gt_super {
  font-size: 65%;
}

#lofpihbenx .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#lofpihbenx .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#lofpihbenx .gt_indent_1 {
  text-indent: 5px;
}

#lofpihbenx .gt_indent_2 {
  text-indent: 10px;
}

#lofpihbenx .gt_indent_3 {
  text-indent: 15px;
}

#lofpihbenx .gt_indent_4 {
  text-indent: 20px;
}

#lofpihbenx .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="5" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Metalearner regression coefficients</td>
    </tr>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="term">term</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="estimate">estimate</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="std.error">std.error</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="statistic">statistic</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="p.value">p.value</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="term" class="gt_row gt_left">(Intercept)</td>
<td headers="estimate" class="gt_row gt_right">0.00</td>
<td headers="std.error" class="gt_row gt_right">0.00</td>
<td headers="statistic" class="gt_row gt_right">−1.42</td>
<td headers="p.value" class="gt_row gt_right">0.16</td></tr>
    <tr><td headers="term" class="gt_row gt_left">pred_a</td>
<td headers="estimate" class="gt_row gt_right">−0.02</td>
<td headers="std.error" class="gt_row gt_right">0.00</td>
<td headers="statistic" class="gt_row gt_right">−4.75</td>
<td headers="p.value" class="gt_row gt_right">0.00</td></tr>
    <tr><td headers="term" class="gt_row gt_left">pred_b</td>
<td headers="estimate" class="gt_row gt_right">0.85</td>
<td headers="std.error" class="gt_row gt_right">0.01</td>
<td headers="statistic" class="gt_row gt_right">128.15</td>
<td headers="p.value" class="gt_row gt_right">0.00</td></tr>
    <tr><td headers="term" class="gt_row gt_left">pred_c</td>
<td headers="estimate" class="gt_row gt_right">0.17</td>
<td headers="std.error" class="gt_row gt_right">0.01</td>
<td headers="statistic" class="gt_row gt_right">30.07</td>
<td headers="p.value" class="gt_row gt_right">0.00</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>This metalearner provides us with the coefficients, or weights, to apply to each of the base learners. In other words, if we have a set of predictions from Learner A, B, and C, we can obtain our best possible predictions by starting with an intercept of -0.003, then adding -0.017 <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> predictions from Learner A, 0.854 <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> predictions from Learner B, and 0.165 <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> predictions from Learner C.</p>
<p><em>For more information on the metalearning step, check out the Appendix.</em></p>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 6: Fit base learners on entire data set</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p><img src="www.khstats.com/img/sl_steps/step6.png" class="img-fluid" style="width:50.0%"></p>
<p>After we fit the metalearner, we officially have our superlearner algorithm, so it’s time to input data and obtain predictions! To implement the algorithm and obtain final predictions, we first need to fit the base learners on the full data set.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">fit_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x4, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>obs)</span>
<span id="cb12-2">fit_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(x4), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>obs)</span>
<span id="cb12-3">fit_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>obs)</span></code></pre></div>
</div>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 7: Obtain predictions from each base learner on entire data set</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p><img src="www.khstats.com/img/sl_steps/step7.png" class="img-fluid" style="width:40.0%"></p>
<p>We’ll use <em>those</em> base learner fits to get predictions from each of the base learners for the entire data set, and then we will plug those predictions into the metalearner fit. Remember, we were previously using cross-validated predictions, rather than fitting the base learners on the whole data set. This was to avoid overfitting.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">pred_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_a)</span>
<span id="cb13-2">pred_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_b)</span>
<span id="cb13-3">pred_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_c)</span>
<span id="cb13-4">full_data_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(pred_a, pred_b, pred_c)</span></code></pre></div>
</div>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 8: Use metalearner fit to weight base learners</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p><img src="www.khstats.com/img/sl_steps/step8.png" class="img-fluid" style="width:60.0%"></p>
<p>Once we have the predictions from the full data set, we can input them to the metalearner, where the output will be a final prediction for <code>y</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">sl_predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(sl_fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> full_data_preds)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sl_predictions =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(sl_predictions)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(sl_predictions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Final SL predictions (manual)"</span>) </span></code></pre></div>
<div class="cell-output-display">

<div id="cxoiligfyd" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#cxoiligfyd table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#cxoiligfyd thead, #cxoiligfyd tbody, #cxoiligfyd tfoot, #cxoiligfyd tr, #cxoiligfyd td, #cxoiligfyd th {
  border-style: none;
}

#cxoiligfyd p {
  margin: 0;
  padding: 0;
}

#cxoiligfyd .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cxoiligfyd .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#cxoiligfyd .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cxoiligfyd .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cxoiligfyd .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cxoiligfyd .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cxoiligfyd .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cxoiligfyd .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cxoiligfyd .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cxoiligfyd .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cxoiligfyd .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cxoiligfyd .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cxoiligfyd .gt_spanner_row {
  border-bottom-style: hidden;
}

#cxoiligfyd .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#cxoiligfyd .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cxoiligfyd .gt_from_md > :first-child {
  margin-top: 0;
}

#cxoiligfyd .gt_from_md > :last-child {
  margin-bottom: 0;
}

#cxoiligfyd .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cxoiligfyd .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#cxoiligfyd .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#cxoiligfyd .gt_row_group_first td {
  border-top-width: 2px;
}

#cxoiligfyd .gt_row_group_first th {
  border-top-width: 2px;
}

#cxoiligfyd .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxoiligfyd .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#cxoiligfyd .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#cxoiligfyd .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cxoiligfyd .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxoiligfyd .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cxoiligfyd .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#cxoiligfyd .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#cxoiligfyd .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cxoiligfyd .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cxoiligfyd .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxoiligfyd .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cxoiligfyd .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxoiligfyd .gt_left {
  text-align: left;
}

#cxoiligfyd .gt_center {
  text-align: center;
}

#cxoiligfyd .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cxoiligfyd .gt_font_normal {
  font-weight: normal;
}

#cxoiligfyd .gt_font_bold {
  font-weight: bold;
}

#cxoiligfyd .gt_font_italic {
  font-style: italic;
}

#cxoiligfyd .gt_super {
  font-size: 65%;
}

#cxoiligfyd .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#cxoiligfyd .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#cxoiligfyd .gt_indent_1 {
  text-indent: 5px;
}

#cxoiligfyd .gt_indent_2 {
  text-indent: 10px;
}

#cxoiligfyd .gt_indent_3 {
  text-indent: 15px;
}

#cxoiligfyd .gt_indent_4 {
  text-indent: 20px;
}

#cxoiligfyd .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="1" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Final SL predictions (manual)</td>
    </tr>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="sl_predictions">sl_predictions</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="sl_predictions" class="gt_row gt_right">5.44</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−1.20</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−0.79</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−0.71</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−1.02</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−1.03</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>And… that’s it! Those are our superlearner predictions for the full data set.</p>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 9: Obtain predictions on new data</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p>We can now modify Step 7 and Step 8 to accommodate any new observation(s):</p>
<blockquote class="blockquote">
<p><strong>To predict on new data:</strong><br>&nbsp;1. Use the fits from each base learner to obtain base learner predictions for the new observation(s).<br>&nbsp;2. Plug those base learner predictions into the metalearner fit.</p>
</blockquote>
<p>We can generate a single <code>new_obs</code>ervation to see how this would work in practice.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">new_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x4 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb15-2">new_pred_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_a, new_obs)</span>
<span id="cb15-3">new_pred_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_b, new_obs)</span>
<span id="cb15-4">new_pred_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit_c, new_obs)</span>
<span id="cb15-5">new_pred_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pred_a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> new_pred_a, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pred_b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> new_pred_b, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pred_c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> new_pred_c)</span>
<span id="cb15-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(sl_fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> new_pred_df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        1 
0.1183103 </code></pre>
</div>
</div>
<p>Our superlearner model predicts that an observation with predictors <img src="https://latex.codecogs.com/png.latex?X_1=.5">, <img src="https://latex.codecogs.com/png.latex?X_2=0">, <img src="https://latex.codecogs.com/png.latex?X_3=0">, and <img src="https://latex.codecogs.com/png.latex?X_4=-3"> will have an outcome of <img src="https://latex.codecogs.com/png.latex?Y=0.118">.</p>


<h2 style="color:#c30a0a" class="anchored">
<p><strong>Step 10 and beyond…</strong></p><strong>
</strong></h2><strong>
</strong><p><strong></strong></p>


<p>We could compute the MSE of the ensemble superlearner predictions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">sl_mse <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> sl_predictions)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb17-2">sl_mse</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.01927392</code></pre>
</div>
</div>
<p>We could also add more algorithms to our base learner library (we definitely should, since we only used linear regressions!), and we could write functions to tune these algorithms’ hyperparameters over various grids. For example, if we were to include random forest in our library, we may want to tune over a number of trees and maximum bucket sizes.</p>
<p>We can then cross-validate this entire process to evaluate the predictive performance of our superlearner algorithm. Alternatively, we could leave a hold-out training data set to evaluate the performance.</p>
</section>
</section>
<section id="using-the-superlearner-package" class="level1">
<h1>Using the <code>SuperLearner</code> package</h1>
<p>Or… we could use a package and avoid all the hand-coding. Here is how you would build an ensemble superlearner for our data with the base learner libraries of <code>ranger</code> (random forests), <code>glmnet</code> (LASSO, by default), and <code>earth</code> (MARS) using the <code>SuperLearner</code> package in <code>R</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(SuperLearner)</span>
<span id="cb19-2">x_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>x4) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>()</span>
<span id="cb19-3">sl_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SuperLearner</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> x_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gaussian</span>(),</span>
<span id="cb19-4">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SL.library =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SL.ranger"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SL.glmnet"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SL.earth"</span>))</span></code></pre></div>
</div>
<p>You can specify the metalearner with the <code>method</code> argument. The default is Non-Negative Least Squares (NNLS).</p>
<section id="cv-risk-and-coefficient-weights" class="level2">
<h2 class="anchored" data-anchor-id="cv-risk-and-coefficient-weights">CV-Risk and Coefficient Weights</h2>
<p>We can examine the cross-validated <code>Risk</code> (loss function), and the <code>Coef</code>ficient (weight) given to each of the models.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">sl_fit</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:  
SuperLearner(Y = obs$y, X = x_df, family = gaussian(), SL.library = c("SL.ranger",  
    "SL.glmnet", "SL.earth")) 

                     Risk      Coef
SL.ranger_All 0.013672503 0.1606329
SL.glmnet_All 0.097257031 0.0000000
SL.earth_All  0.003181357 0.8393671</code></pre>
</div>
</div>
<p>From this summary we can see that the CV-risk (the default risk is MSE) in this library of base learners is smallest for <code>SL.Earth</code>. This translates to the largest coefficient, or weight, given to the predictions from <code>earth</code>.</p>
<p>The LASSO model implemented by <code>glmnet</code> has the largest CV-risk, and after the metalearning step, those predictions receive a coefficient, or weight, of 0. This means that the predictions from LASSO will not be incorporated into the final predictions at all.</p>
</section>
<section id="obtaining-the-predictions" class="level2">
<h2 class="anchored" data-anchor-id="obtaining-the-predictions">Obtaining the predictions</h2>
<p>We can extract the predictions easily via the <code>SL.predict</code> element of the <code>SuperLearner</code> fit object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sl_predictions =</span> sl_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>SL.predict)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Final SL predictions (package)"</span>) </span></code></pre></div>
<div class="cell-output-display">

<div id="exzlacqdmx" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#exzlacqdmx table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#exzlacqdmx thead, #exzlacqdmx tbody, #exzlacqdmx tfoot, #exzlacqdmx tr, #exzlacqdmx td, #exzlacqdmx th {
  border-style: none;
}

#exzlacqdmx p {
  margin: 0;
  padding: 0;
}

#exzlacqdmx .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#exzlacqdmx .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#exzlacqdmx .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#exzlacqdmx .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#exzlacqdmx .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#exzlacqdmx .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#exzlacqdmx .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#exzlacqdmx .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#exzlacqdmx .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#exzlacqdmx .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#exzlacqdmx .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#exzlacqdmx .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#exzlacqdmx .gt_spanner_row {
  border-bottom-style: hidden;
}

#exzlacqdmx .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#exzlacqdmx .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#exzlacqdmx .gt_from_md > :first-child {
  margin-top: 0;
}

#exzlacqdmx .gt_from_md > :last-child {
  margin-bottom: 0;
}

#exzlacqdmx .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#exzlacqdmx .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#exzlacqdmx .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#exzlacqdmx .gt_row_group_first td {
  border-top-width: 2px;
}

#exzlacqdmx .gt_row_group_first th {
  border-top-width: 2px;
}

#exzlacqdmx .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#exzlacqdmx .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#exzlacqdmx .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#exzlacqdmx .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#exzlacqdmx .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#exzlacqdmx .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#exzlacqdmx .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#exzlacqdmx .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#exzlacqdmx .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#exzlacqdmx .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#exzlacqdmx .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#exzlacqdmx .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#exzlacqdmx .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#exzlacqdmx .gt_left {
  text-align: left;
}

#exzlacqdmx .gt_center {
  text-align: center;
}

#exzlacqdmx .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#exzlacqdmx .gt_font_normal {
  font-weight: normal;
}

#exzlacqdmx .gt_font_bold {
  font-weight: bold;
}

#exzlacqdmx .gt_font_italic {
  font-style: italic;
}

#exzlacqdmx .gt_super {
  font-size: 65%;
}

#exzlacqdmx .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#exzlacqdmx .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#exzlacqdmx .gt_indent_1 {
  text-indent: 5px;
}

#exzlacqdmx .gt_indent_2 {
  text-indent: 10px;
}

#exzlacqdmx .gt_indent_3 {
  text-indent: 15px;
}

#exzlacqdmx .gt_indent_4 {
  text-indent: 20px;
}

#exzlacqdmx .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="1" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Final SL predictions (package)</td>
    </tr>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="sl_predictions">sl_predictions</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="sl_predictions" class="gt_row gt_right">5.28</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−1.19</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−0.68</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−0.87</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−0.97</td></tr>
    <tr><td headers="sl_predictions" class="gt_row gt_right">−1.08</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
</section>
<section id="cross-validated-superlearner" class="level2">
<h2 class="anchored" data-anchor-id="cross-validated-superlearner">Cross-validated Superlearner</h2>
<p>Recall that we can cross-validate the entire model fitting process to evaluate the predictive performance of our superlearner algorithm. This is easy with the function <code>CV.SuperLearner()</code>. Beware, this gets computationally burdensome very quickly!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">cv_sl_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CV.SuperLearner</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> x_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gaussian</span>(),</span>
<span id="cb23-2">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SL.library =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SL.ranger"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SL.glmnet"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SL.earth"</span>))</span></code></pre></div>
</div>
<p>For more information on the <code>SuperLearner</code> package, take a look at this <a href="https://cran.r-project.org/web/packages/SuperLearner/vignettes/Guide-to-SuperLearner.html">vignette</a>.</p>
</section>
<section id="alternative-packages-to-superlearn" class="level2">
<h2 class="anchored" data-anchor-id="alternative-packages-to-superlearn">Alternative packages to superlearn</h2>
<p>Other packages freely available in <code>R</code> that can be used to implement the superlearner algorithm include <a href="https://tlverse.org/tlverse-handbook/sl3.html"><code>sl3</code></a> (an update to the original <code>Superlearner</code> package), <a href="https://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/stacked-ensembles.html"><code>h2o</code></a>, and <a href="https://rdrr.io/cran/caretEnsemble/f/vignettes/caretEnsemble-intro.Rmd"><code>caretEnsemble</code></a>. I previously wrote a <a href="https://www.khstats.com/blog/sl3_demo/sl/">brief demo</a> on using <code>sl3</code> for an NYC R-Ladies demo.</p>
<p>The authors of <code>tidymodels</code> – a suite of packages for machine learning including <code>recipes</code>, <code>parsnip</code>, and <code>rsample</code> – recently came out with a new package to perform superlearning/stacking called <a href="[https://stacks.tidymodels.org/articles/basics.html"><code>stacks</code></a>. Prior to this, Alex Hayes wrote a <a href="https://www.alexpghayes.com/blog/implementing-the-super-learner-with-tidymodels/">blog post</a> on using <code>tidymodels</code> infrastructure to implement superlearning.</p>
</section>
</section>
<section id="coming-soon-when-prediction-is-not-the-end-goal" class="level1">
<h1>Coming soon… when prediction is not the end goal</h1>
<p>When prediction is not the end goal, superlearning combines well with semi-parametric estimation methods for statistical inference. This is the reason I was reading <em>Targeted Learning</em> in the first place; I am a statistician with collaborators who typically want estimates of treatment effects with confidence intervals, not predictions!</p>
<p>I’m working on a similar visual guide for one such semiparametric estimation method: <a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/TMLE.pdf">Targeted Maximum Likelihood Estimation</a> (TMLE)). TMLE allows the use of flexible statistical models like the superlearner algorithm when estimating treatment effects. If you found this superlearning tutorial helpful, you may be interested in this <a href="https://www.khstats.com/blog/tmle/tutorial/">similarly visual tutorial</a> on TMLE.</p>


<title>
HTML Image as link
</title>


<a href="https://github.com/kathoffman/causal-inference-visual-guides/blob/master/visual-guides/TMLE.pdf"> <img src="www.khstats.com/img/TMLE.jpg" alt="cheatsheet" width="100%&quot;"> </a>


</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<p>These sections contain a bit of extra information on the superlearning algorithm, such as: intuition on manually computing the loss function of interest, explanation of the discrete superlearner, brief advice on choosing a metalearner, and a different summary visual provided in the <em>Targeted Learning</em> book.</p>
<section id="manually-computing-the-mse" class="level3">
<h3 class="anchored" data-anchor-id="manually-computing-the-mse">Manually computing the MSE</h3>
<p>Let’s say we have chosen our loss function of interest to be the Mean Squared Error (MSE). We could first compute the squared error <img src="https://latex.codecogs.com/png.latex?(y%20-%20%5Chat%7By%7D)%5E2"> for each CV prediction A, B, and C.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">cv_sq_error <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb24-2">  obs_preds <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb24-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cv_sqrd_error_a =</span> (y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>pred_a)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute squared error for each observation</span></span>
<span id="cb24-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cv_sqrd_error_b =</span> (y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>pred_b)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb24-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cv_sqrd_error_c =</span> (y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>pred_c)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">cv_sq_error <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(cv_sqrd_error_a, cv_sqrd_error_b, cv_sqrd_error_c), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make the CV squared errors long form for plotting</span></span>
<span id="cb25-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"base_learner"</span>,</span>
<span id="cb25-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"squared_error"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb25-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_learner =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toupper</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(base_learner, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cv_sqrd_error_"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb25-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(base_learner, squared_error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span>base_learner)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make box plots</span></span>
<span id="cb25-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span>F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Base Learner"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Squared Error"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Squared Errors of Learner A, B, and C"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use "none" instead as
of ggplot2 3.3.4.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/sl/superlearning_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="528"></p>
</div>
</div>
<p>And then take the mean of those three cross-validated squared error columns, grouped by <code>cv_fold</code>, to get the CV-MSE for each fold.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">cv_risks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb27-2">  cv_sq_error <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb27-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(cv_fold) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb27-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cv_mse_a =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(cv_sqrd_error_a),</span>
<span id="cb27-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cv_mse_b =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(cv_sqrd_error_b),</span>
<span id="cb27-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cv_mse_c =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(cv_sqrd_error_c)</span>
<span id="cb27-7">            )</span>
<span id="cb27-8">cv_risks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb27-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(cv_mse_a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>cv_mse_c,</span>
<span id="cb27-10">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"base_learner"</span>,</span>
<span id="cb27-11">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mse"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb27-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_learner =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toupper</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(base_learner,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cv_mse_"</span>)))  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb27-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(cv_fold, mse, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span>base_learner)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cross-Validation (CV) Fold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean Squared Error (MSE)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Base Learner"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV-MSEs for Base Learners A, B, and C"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/sl/superlearning_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We see that across each fold, Learner B consistently has an MSE around 0.02, while Learner C hovers around 0.1, and Learner A varies between 0.35 and 0.45. We can take another mean to get the overall CV-MSE for each learner.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">cv_risks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>cv_fold) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_all</span>(mean) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CV-MSE for each base learner"</span>)</span></code></pre></div>
<div class="cell-output-display">

<div id="zzlxyntbys" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#zzlxyntbys table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#zzlxyntbys thead, #zzlxyntbys tbody, #zzlxyntbys tfoot, #zzlxyntbys tr, #zzlxyntbys td, #zzlxyntbys th {
  border-style: none;
}

#zzlxyntbys p {
  margin: 0;
  padding: 0;
}

#zzlxyntbys .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zzlxyntbys .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#zzlxyntbys .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zzlxyntbys .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zzlxyntbys .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zzlxyntbys .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zzlxyntbys .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zzlxyntbys .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zzlxyntbys .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zzlxyntbys .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zzlxyntbys .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zzlxyntbys .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zzlxyntbys .gt_spanner_row {
  border-bottom-style: hidden;
}

#zzlxyntbys .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#zzlxyntbys .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zzlxyntbys .gt_from_md > :first-child {
  margin-top: 0;
}

#zzlxyntbys .gt_from_md > :last-child {
  margin-bottom: 0;
}

#zzlxyntbys .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zzlxyntbys .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#zzlxyntbys .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#zzlxyntbys .gt_row_group_first td {
  border-top-width: 2px;
}

#zzlxyntbys .gt_row_group_first th {
  border-top-width: 2px;
}

#zzlxyntbys .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zzlxyntbys .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#zzlxyntbys .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#zzlxyntbys .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zzlxyntbys .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zzlxyntbys .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zzlxyntbys .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#zzlxyntbys .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zzlxyntbys .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zzlxyntbys .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zzlxyntbys .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zzlxyntbys .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zzlxyntbys .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zzlxyntbys .gt_left {
  text-align: left;
}

#zzlxyntbys .gt_center {
  text-align: center;
}

#zzlxyntbys .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zzlxyntbys .gt_font_normal {
  font-weight: normal;
}

#zzlxyntbys .gt_font_bold {
  font-weight: bold;
}

#zzlxyntbys .gt_font_italic {
  font-style: italic;
}

#zzlxyntbys .gt_super {
  font-size: 65%;
}

#zzlxyntbys .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#zzlxyntbys .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#zzlxyntbys .gt_indent_1 {
  text-indent: 5px;
}

#zzlxyntbys .gt_indent_2 {
  text-indent: 10px;
}

#zzlxyntbys .gt_indent_3 {
  text-indent: 15px;
}

#zzlxyntbys .gt_indent_4 {
  text-indent: 20px;
}

#zzlxyntbys .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="3" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">CV-MSE for each base learner</td>
    </tr>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="cv_mse_a">cv_mse_a</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="cv_mse_b">cv_mse_b</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="cv_mse_c">cv_mse_c</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="cv_mse_a" class="gt_row gt_right">0.38</td>
<td headers="cv_mse_b" class="gt_row gt_right">0.02</td>
<td headers="cv_mse_c" class="gt_row gt_right">0.11</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>The base learner that performs the best using our chosen loss function of interest is clearly Learner B. We can see from our data simulation code why this is true – Learner B is almost exactly the mimicking the data generating mechanism of <code>y</code>.</p>
<p>Our results align with the linear regression fit from our metalearning step; Learner B predictions received a much larger coefficient relative to Learners A and C.</p>
</section>
<section id="discrete-superlearner" class="level3">
<h3 class="anchored" data-anchor-id="discrete-superlearner">Discrete Superlearner</h3>
<p>We <em>could</em> stop after minimizing our loss function (MSE) and fit Learner B to our full data set, and that would be called using the <strong>discrete superlearner</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">discrete_sl_predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(x4), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>obs))</span></code></pre></div>
</div>
<p>However, we can almost always create an even better prediction algorithm if we use information from <em>all</em> of the algorithms’ CV predictions.</p>
</section>
<section id="choosing-a-metalearner" class="level3">
<h3 class="anchored" data-anchor-id="choosing-a-metalearner">Choosing a metalearner</h3>
<p>In the Reference papers on superlearning, the metalearner which yields the best results theoretically and in practice is a <strong>convex combination optimization</strong> of learners. This means fitting the following regression, where <img src="https://latex.codecogs.com/png.latex?%5Calpha_1">, <img src="https://latex.codecogs.com/png.latex?%5Calpha_2">, and <img src="https://latex.codecogs.com/png.latex?%5Calpha_3"> are all non-negative and sum to 1.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BE%7D%5BY%7C%5Chat%7BY%7D_%7BLrnrA%7D,%5Chat%7BY%7D_%7BLrnrB%7D,%5Chat%7BY%7D_%7BLrnrC%7D%5D%20=%20%5Calpha_1%5Chat%7BY%7D_%7BLrnrA%7D%20+%20%5Calpha_2%5Chat%7BY%7D_%7BLrnrB%7D%20+%20%5Calpha_3%5Chat%7BY%7D_%7BLrnrC%7D"></p>
<p>The default in the <code>Superlearner</code> package is to fit a non-negative least squares (NNLS) regression. NNLS fits the above equation where the <img src="https://latex.codecogs.com/png.latex?%5Calpha">’s must be greater than or equal to 0 but do not necessarily sum to 1. The package then reweights the <img src="https://latex.codecogs.com/png.latex?%5Calpha">’s to force them to sum to 1. This makes the weights a convex combination, but may not yield the same optimal results as an initial convex combination optimization.</p>
<p>The metalearner should change with the goals of the prediction algorithm and the loss function of interest. In these examples it is the MSE, but if the goal is to build a prediction algorithm that is best for binary classification, the loss function of interest may be the rank loss, or <img src="https://latex.codecogs.com/png.latex?1-AUC">. It is outside the scope of this post, but for more information, I recommend this <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4912128/">paper</a> by Erin Ledell on maximizing the Area Under the Curve (AUC) with superlearner algorithms.</p>
</section>
<section id="another-visual-guide-for-superlearning" class="level3">
<h3 class="anchored" data-anchor-id="another-visual-guide-for-superlearning">Another visual guide for superlearning</h3>
<p>The steps of the superlearner algorithm are summarized nicely in this graphic in Chapter 3 of the <em>Targeted Learning</em> book:</p>
<p><img src="www.khstats.com/img/sl_diagram.png" class="img-fluid"></p>
</section>
</section>
<section id="acknowledgments" class="level1">
<h1>Acknowledgments</h1>
<p>Thank you to Eric Polley, Iván Díaz, Nick Williams, Anjile An, and Adam Peterson for very helpful content (and design!) suggestions for this post.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<p>MJ Van der Laan, EC Polley, AE Hubbard, Super Learner, Statistical applications in genetics and molecular, 2007</p>
<p>Polley, Eric. “Chapter 3: Superlearning.” Targeted Learning: Causal Inference for Observational and Experimental Data, by M. J. van der. Laan and Sherri Rose, Springer, 2011.</p>
<p>Polley E, LeDell E, Kennedy C, van der Laan M. Super Learner: Super Learner Prediction. 2016 URL https://CRAN.R-project.org/package=SuperLearner. R package version 2.0-22.</p>
<p>Naimi AI, Balzer LB. Stacked generalization: an introduction to super learning. <em>Eur J Epidemiol.</em> 2018;33(5):459-464. doi:10.1007/s10654-018-0390-z</p>
<p>LeDell, E. (2015). Scalable Ensemble Learning and Computationally Efficient Variance Estimation. UC Berkeley. ProQuest ID: LeDell_berkeley_0028E_15235. Merritt ID: ark:/13030/m5wt1xp7. Retrieved from https://escholarship.org/uc/item/3kb142r2</p>
<p>M. Petersen and L. Balzer. Introduction to Causal Inference. UC Berkeley, August 2014. <a href="www.ucbbiostat.com">www.ucbbiostat.com</a></p>
</section>
<section id="session-info" class="level1">
<h1>Session Info</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>R version 4.1.2 (2021-11-01)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] splines   stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] SuperLearner_2.0-28 gam_1.22-2          foreach_1.5.2      
 [4] nnls_1.4            gt_0.9.0            forcats_0.5.1      
 [7] stringr_1.5.0       dplyr_1.1.2         purrr_0.3.5        
[10] readr_2.1.2         tidyr_1.2.1         tibble_3.2.1       
[13] ggplot2_3.4.0       tidyverse_1.3.2    

loaded via a namespace (and not attached):
 [1] httr_1.4.2          sass_0.4.5          jsonlite_1.8.4     
 [4] modelr_0.1.8        Formula_1.2-4       assertthat_0.2.1   
 [7] googlesheets4_1.0.0 cellranger_1.1.0    yaml_2.3.7         
[10] pillar_1.9.0        backports_1.4.1     lattice_0.20-45    
[13] glue_1.6.2          digest_0.6.31       rvest_1.0.2        
[16] colorspace_2.0-3    htmltools_0.5.4     Matrix_1.3-4       
[19] pkgconfig_2.0.3     broom_1.0.1         earth_5.3.1        
[22] haven_2.4.3         scales_1.2.1        ranger_0.14.1      
[25] TeachingDemos_2.12  tzdb_0.2.0          googledrive_2.0.0  
[28] farver_2.1.1        generics_0.1.3      ellipsis_0.3.2     
[31] withr_2.5.0         cli_3.6.1           survival_3.2-13    
[34] magrittr_2.0.3      crayon_1.5.0        readxl_1.3.1       
[37] evaluate_0.20       fs_1.6.2            fansi_1.0.3        
[40] xml2_1.3.3          tools_4.1.2         hms_1.1.1          
[43] gargle_1.2.0        lifecycle_1.0.3     munsell_0.5.0      
[46] reprex_2.0.1        glmnet_4.1-3        plotrix_3.8-2      
[49] compiler_4.1.2      rlang_1.1.1         plotmo_3.6.1       
[52] grid_4.1.2          iterators_1.0.14    rstudioapi_0.13    
[55] htmlwidgets_1.6.2   labeling_0.4.2      rmarkdown_2.20     
[58] gtable_0.3.1        codetools_0.2-18    DBI_1.1.2          
[61] R6_2.5.1            lubridate_1.8.0     knitr_1.42         
[64] fastmap_1.1.0       utf8_1.2.2          shape_1.4.6        
[67] stringi_1.7.12      Rcpp_1.0.10         vctrs_0.6.2        
[70] dbplyr_2.1.1        tidyselect_1.2.0    xfun_0.39          </code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>statistics</category>
  <guid>www.khstats.com/blog/sl/superlearning.html</guid>
  <pubDate>Sun, 11 Oct 2020 02:13:14 GMT</pubDate>
  <media:content url="www.khstats.com/img/sl_steps/Superlearning_crop.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>On the Sidelines: NYC’s COVID-19 Outbreak from the Eyes of a Pulmonary and Critical Care Team’s Biostatistician</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/covid/index.html</link>
  <description><![CDATA[ 




<p><em>This article is dedicated to the healthcare workers who risked their lives to care for patients with COVID-19. It was originally published on October 3, 2020 and has been republished by <a href="https://www.kevinmd.com/blog/2020/10/new-york-citys-covid-19-outbreak-from-the-eyes-of-a-pulmonary-and-critical-care-teams-biostatistician.html">Kevin MD</a></em>, <a href="https://sph.umich.edu/pursuit/2020posts/on-the-sidelines-new-yorks-covid-19-outbreak-from-the-eyes-of-a-biostatistician.html"><em>The Pursuit</em></a>, <a href="https://www.monroenews.com/news/20201122/kat-hoffman-new-york-city-during-pandemic"><em>The Monroe Evening News</em></a>, and <a href="https://rss.onlinelibrary.wiley.com/doi/10.1111/1740-9713.01492"><em>Significance</em></a>.</p>

<p><span></span></p>

<title>
</title>


<p><a href="https://github.com/kathoffman/amateur-art/blob/main/this-will-define-your-life.jpg"></a></p><a href="https://github.com/kathoffman/amateur-art/blob/main/this-will-define-your-life.jpg">
<title>
</title>
<p><img src="www.khstats.com/blog/covid/img/this-will-define-your-life.jpg" alt="This will define your life. Kat Hoffman (2020)" width="100%&quot;"> </p>
</a><p><a href="https://github.com/kathoffman/amateur-art/blob/main/this-will-define-your-life.jpg"></a></p>


<p><strong>December 15, 2018.</strong> My coworker is moving to California. She’s a statistician for a group of pulmonary and critical care physicians at our New York City hospital, and I’m a statistician who’s trying not to do too many things wrong, only three months into my first job out of school. “I think you’d be good with this research team,” she tells me. “There’s some really interesting studies on lung diseases.” I nod, because that’s what you do when you’ve been at your job for three months.</p>
<p>I take over her projects and start learning organ failure scoring systems, criteria for acute respiratory distress syndrome, and the differences between invasive and non-invasive mechanical ventilation. My close friend does cutting-edge cancer statistics, and I feel a bit resentful. Nobody ever wants to hear about the controversial definitions of sepsis at family parties.</p>
<p>As the months pass by, I slowly build my mental encyclopedia and begin to embrace my role as a pulmonary and critical care biostatistician.</p>
<p><strong>March 5th, 2020.</strong> A full year and three months later, I wake up very sick. It is the kind of sick where you can’t do anything but curl up on your bathroom floor and let <em>being sick</em> consume you. Too sick to read, too sick to sleep. I spike a fever and can hardly move for two days before I hobble to the doctor’s office and nearly faint mid-exam. The doctor insists I stay until I drink an entire bottle of water. “Is there anyone to check on you at home?” he asks, concerned. No, no, I’ll be fine.</p>
<p>By the end of the week my fever breaks and I’m back to work. It’s early March, so “Coronavirus?!” is everyone’s first question. They’re all joking, except the pulmonologists I work with. Nothing respiratory, I assure them. One isn’t convinced. “Some young people are getting ‘silent hypoxia.’ It <em>is</em> possible to have COVID-19 with no respiratory symptoms at all,” she tells me. Months later, I’ll read that as the headline of various news articles, but the time, no testing is available to me.</p>
<p><strong>March 17, 2020.</strong> Barely two weeks pass before the number of confirmed COVID-19 cases explode in New York City. Restaurants are instructed to close the day before Saint Patrick’s Day, my birthday. I can’t meet up with my friends anymore, so I cook macaroni and cheese and run to Central Park to watch the sun set behind skyscrapers. My grandparents call me and they make <em>Happy Birthday</em> sound like a hymn from a Catholic mass and I laugh, and it is the only part of my day that feels like every other birthday.</p>
<p>While I’m leaving the park, my mom texts me that she hopes I had a good day. Any other year it would be strange for her to nearly miss my birthday, but this year she is working long hours. She’s a nursing director back in Michigan and her hospital is already preparing for their own impending COVID-19 outbreak. The preparations will not be in vain.</p>
<p>As I jog home, I pass a sign asking former healthcare workers to volunteer to take care of NYC COVID-19 patients. Before I began my career in biostatistics, I worked at a hospital caring for acutely ill patients, so I sign up without hesitation. My misguided logic is that the exploding numbers of COVID-19 cases will make my critical care collaborators too busy to pursue their research, and this seems like the best way for me to help as the world descends into chaos. While I fill out the online contact form, I wonder what it will feel like to take care of patients again. I look up YouTube videos to refresh myself on drawing blood and inserting IVs.</p>
<p>How absolutely crazy that I thought my biostatistics training wouldn’t be useful, in retrospect.</p>
<p><strong>March 22, 2020.</strong> I’m a pulmonary and critical care team’s statistician so <em>naturally</em> I am one of the first analysts at my hospital pulled into COVID-19 work. It starts with a text on a Sunday – the first of many – from a pulmonologist. “Do we have a data dictionary for our ICU database, Kat?” Our informatics team is using the structure of the ICU database I work with as part of a COVID-19 tracking repository for our entire hospital. Within days, I am told to drop all of my other research projects for COVID-19 work.</p>
<p>The first request for me is straightforward: summarize the laboratory results from our first 300 COVID-19 patients. 300 patients at our hospital! That’s insane, I think to myself. It seems only a week ago the news reports said there were 300 people in the entire city with COVID-19. I begin working through issues linking the databases, identifying missing information, and explaining critical care jargon to other analysts. Each morning I pull new data and watch the files grow exponentially larger.</p>
<p>There are countless questions flooding in from all over the hospital. Most of them revolve around “who will get intubated, and when?” My hospital, like so many other hospitals in NYC, is on track to run out of ventilators soon. My attendance becomes mandatory at multiple “risk prediction” meetings each week. I find myself in charge of extensive data cleaning and then writing code for models to answer vague and terrifying questions: we need to figure out which patients will “crash,” who can be transferred, and, if we run out of ventilators, who has the best chance to survive.</p>
<p>I am a junior researcher, previously unconcerned with hospital operations, suddenly confronted with the task of providing rapid answers for potentially immediate decision making. I accept my new role with the utmost seriousness. My days, normally spent coding with double monitors at a proper desk, suddenly fill with Zoom meetings from 8:30-5:00 from a laptop at my kitchen table. Each night after the meetings end, I take advantage of the relative quiet to code into the early hours of the morning.</p>
<p>For several weeks I use the long, uninterrupted hours of weekends to work, waking up with the sun and continuing on until at least 11pm, with few breaks in between. On some nights I send my mom “good morning” texts at 5am. “Are you waking up early or have you not slept yet?” is always her first question. The next is, “No fever? No cough?” She is worried about me, living in the international epicenter, but I’m just as worried about her, working at a hospital every day. She informs me that my dad is sleeping in my old bedroom in case she brings the virus home.</p>
<p>Hospitals around the city begin to call me, wanting to know if I can still help care for COVID-19 patients as a former healthcare worker. “I want to but I can’t, I’m so sorry, I’m helping with COVID data now.” It sounds and feels inconsequential.</p>
<p><strong>April 4, 2020.</strong> My best friend and her sister are also nurses in Michigan. I FaceTime her to check in. She and her sister’s units have become “hot floors”: every room is filled with a COVID-19 patient. They were living with their parents, another sister, uncle, and cousins, but both have moved to an AirBnb for the foreseeable future. “It’s so crazy here, Kitty,” she tells me in a defeated voice. At the time, Michigan’s case trajectory is second only to New York’s.</p>
<p>One of her nursing friends has been hospitalized with COVID-19 and is on 6 Liters of oxygen. I can’t help but think about the prediction models I’ve been working on. I mentally run his characteristics through them. I know what my models would estimate his probability of intubation to be.</p>
<p>I listen to her talk about the N-95 masks they’ve been given. “Remember how they used to say those were one-time use?” she asks me. I do. “They started telling us they were good for the whole day, and then they said they’d be good for the whole week, and now they’re saying we might have to start sharing.” I wonder what data analyst, perhaps just like me, is crunching those numbers and feeding the information to hospital administration. “The virus is so terrible. I’ve never done so much post-mortem care, zipped so many body bags…” Her voice drifts off.</p>
<p>I feel guilty, on the sidelines. I see the raccoon eyes – the only part of their faces visible between hair caps and procedure masks – of the physicians I spend all day hopping on and off meetings with, and I desperately want to help. I cannot hold the hand of a COVID-19 patient but I have all their data at my keystrokes: millions of lab results, vital signs, and procedure codes. I see their inflammatory cytokines spike, I watch their oxygen levels plummet, I can tell you which organs are failing, who’s on which experimental drug, and who’s just been made Do Not Intubate and Do Not Resuscitate. I follow in horror, almost in real-time, the time-stamps of admission, intubation, death. I cannot compare this experience to physically caring for COVID-19 patients, but I feel haunted by it all the same.</p>
<p>I hole up in my tiny studio in Manhattan for days at a time, listening to the wails of ambulances and pings of messages from my computer. I see only one friend with any frequency; we both live alone, 18 blocks from each other. She texts me often, asking to meet in Central Park. She suspects I am not doing well, and she is right. I walk with her all over the Upper East Side a few times a week, each of us donned in our black cotton masks. We try not to talk about COVID-19, but it’s hard to avoid when our walks take us past the pop-up ICU tents and refrigerated trucks that stretch entire blocks – the overflow morgues for NYC’s dead.</p>
<p>We try to time our walks so that we’re outside at 7pm, when the city unites to cheer for healthcare workers. If I’m not out walking with her, I climb religiously onto my fire escape every night to clap. Sometimes a man in the apartment across the street sings Sinatra. <em>I want to wake up in the city that never sleeps… New York, New York!</em> I’ve only lived here two years, but I miss “the city that never sleeps” so badly that it hurts.</p>
<p>Life continues in this way for me, with no real sense of time or distinguishing events, from mid March until early May.</p>
<p><strong>May 10, 2020.</strong> It is Mother’s Day, and my 50th straight day of working with COVID-19 data. At 11pm, my cell phone goes off. It is an ominous vibration against my kitchen table, where I am perpetually sitting with my laptop whirring. “Hi Honey… I just wanted to let you know that, mmm…” it’s my mom, and her voice is cracking. I finish the sentence for her, “Aunt Peggy died?” I ask, sadly. “Yes.” “Okay. Thanks for letting me know.” I stare into the white brick wall in front of my kitchen table for so long that I start seeing multicolored spots.</p>
<p>My grandfather’s eldest sister, my Aunt Peggy, had begun showing telltale symptoms of COVID-19 and tested positive only a few days previously. She’d been without any visitors in her assisted living home for months due to isolation restrictions. She was royalty in our family; the red-lipsticked, always fashionably late, prized guest at every family party. She had an unforgettable, incredibly sweet voice, and I can still hear her words to me last Christmas. “How’s <em>New York</em>, Katherine? I’m so proud of you.” She was the first nurse in my family, and she influenced my mom to become a nurse, who influenced me to pursue medical research. The matriarch of our family left us on Mother’s Day.</p>
<p>I spend the night trying to find a rental car company that will allow me to drive one-way from New York to Michigan. It can’t be done; I am several weeks too late in my exodus from the city. I book a flight instead and leave a few days later on a near-empty plane to spend time with my family. I plan to stay in Michigan for two weeks, but I don’t leave for two months.</p>
<p><strong>September 20, 2020.</strong> The leaves I watched bud in Central Park during my walks this spring are changing to red and gold. As I write this, I think of countless other ways I could attempt to explain what my tiny corner of the world was like during NYC’s outbreak. Most are too personal to ever record. At the same time, it is difficult to share even the memories I have, partially because I know they are incomparable to the frontline workers’ who risked their lives everyday.</p>
<p>My experiences living and working in Manhattan during March, April, and May will stick with me forever. I hope there comes a day that I can meet in real life – mask free – all the analysts, hospital administrators, physicians, residents, fellows, medical students, and data engineers I conversed with so frequently during the height of the outbreak. At the same time, I hope we never have to work together again. It is a wish that I fear will not come true.</p>
<p>Just this past week I attended a meeting with our Informatics team. “It’s good to ‘see’ everyone,” someone said. It’s only half true; the circumstances that bring us to meetings together are never good. We discussed data structures for a possible second wave of COVID-19 in NYC as schools and indoor dining reopen. After the call, I felt an immense sadness, despite being in a much better place than when I left the city in May.</p>
<p>At the bottom of my heart, I don’t know if I can handle another round of it all. Can you?</p>



 ]]></description>
  <category>career</category>
  <guid>www.khstats.com/blog/covid/index.html</guid>
  <pubDate>Sat, 03 Oct 2020 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/covid/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Customizable correlation plots in R</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/corr-plots/index.html</link>
  <description><![CDATA[ 




<hr>
<p><em>Updated to include <code>gt</code> package August 23, 2022.</em></p>
<p>If you’re ever felt limited by correlogram packages in <code>R</code>, this post will show you how to write your own function to tidy the many correlations into a <code>ggplot2</code>-friendly form for plotting.</p>
<!--more-->
<p>By the end of this post, you will be able to run one function to get a tidied data frame of correlations:</p>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatted_cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="rbeycwmayr" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#rbeycwmayr .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#rbeycwmayr .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#rbeycwmayr .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#rbeycwmayr .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#rbeycwmayr .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#rbeycwmayr .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#rbeycwmayr .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#rbeycwmayr .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#rbeycwmayr .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#rbeycwmayr .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#rbeycwmayr .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#rbeycwmayr .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#rbeycwmayr .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#rbeycwmayr .gt_from_md > :first-child {
  margin-top: 0;
}

#rbeycwmayr .gt_from_md > :last-child {
  margin-bottom: 0;
}

#rbeycwmayr .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#rbeycwmayr .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#rbeycwmayr .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#rbeycwmayr .gt_row_group_first td {
  border-top-width: 2px;
}

#rbeycwmayr .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#rbeycwmayr .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#rbeycwmayr .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#rbeycwmayr .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#rbeycwmayr .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#rbeycwmayr .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#rbeycwmayr .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#rbeycwmayr .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#rbeycwmayr .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#rbeycwmayr .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#rbeycwmayr .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#rbeycwmayr .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#rbeycwmayr .gt_left {
  text-align: left;
}

#rbeycwmayr .gt_center {
  text-align: center;
}

#rbeycwmayr .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#rbeycwmayr .gt_font_normal {
  font-weight: normal;
}

#rbeycwmayr .gt_font_bold {
  font-weight: bold;
}

#rbeycwmayr .gt_font_italic {
  font-style: italic;
}

#rbeycwmayr .gt_super {
  font-size: 65%;
}

#rbeycwmayr .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#rbeycwmayr .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#rbeycwmayr .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#rbeycwmayr .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#rbeycwmayr .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#rbeycwmayr .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure1</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure2</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">r</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">n</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">p</th>
<th class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th">sig_p</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">p_if_sig</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">r_if_sig</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_center">NA</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">cyl</td>
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">6.112688e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">6.112688e-10</td>
<td class="gt_row gt_right">-0.8521620</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">disp</td>
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">9.380328e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">9.380328e-10</td>
<td class="gt_row gt_right">-0.8475514</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">hp</td>
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.787835e-07</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.787835e-07</td>
<td class="gt_row gt_right">-0.7761684</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">drat</td>
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.776240e-05</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.776240e-05</td>
<td class="gt_row gt_right">0.6811719</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">wt</td>
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.293958e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.293958e-10</td>
<td class="gt_row gt_right">-0.8676594</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>You can then run <code>ggplot2</code> code on this data to make your own correlation heat maps.</p>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
<p>If you just want the code, skip to the end.</p>
<hr>
<section id="less-customizable-options" class="level1">
<h1>Less-customizable options</h1>
<p>I really appreciate some of the packages and functions that allow me to make correlation plots super quickly using <code>R</code>. Here are a few examples:</p>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">corrplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">corrplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(mtcars))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">corrgram<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">corrgram</span>(mtcars)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">ggcorrplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggcorrplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(mtcars))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
<p>All of these are nice, but none of them are ultimately as customizable as I need them to be. I’ll next show how you can bypass using someone else’s function constraints to prepare correlations in your data in a <code>ggplot2</code>-friendly format.</p>
</section>
<section id="getting-the-correlations" class="level1">
<h1>Getting the correlations</h1>
<p>We could use the base <code>R</code> function <code>cor()</code> to get our correlations, but I do not like the defaults for missing data. Instead, I use Frank Harrell’s <code>Hmisc::rcorr()</code> function for two reasons:</p>
<ol type="1">
<li><p>it drops missing pairs as the default</p></li>
<li><p>it returns p-values, so you only need one function to get both the correlation coefficient and matching p-value</p></li>
</ol>
<p>Let’s load the libraries we’ll need for this, which are <code>knitr</code> for showing tables using <code>gt</code>, and <code>tidyverse</code> (we’ll specifically use <code>tidyr</code>, <code>dplyr</code>, <code>ggplot2</code>, <code>tibble</code> and <code>purrr</code>).</p>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warn.conflict=</span>F)</span></code></pre></div>
<p>First, let’s look at our output from our correlation function we’ll use, <code>Hmisc::rcorr()</code>. It requires the input to be a matrix, and outputs a list of three matrices.</p>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">mtcars_cor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Hmisc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rcorr</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(mtcars))</span></code></pre></div>
<p>These three matrices include the correlation coefficient (default is Pearson’s), <code>r</code>, the p-value, <code>P</code>, and the number of observations used for each correlation, <code>n</code>. Let’s turn each matrix into a <code>data frame</code> and look at the top six rows with <code>head</code> and <code>gt</code>.</p>
<p>The correlation coefficients, <code>r</code>:</p>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(mtcars_cor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>r) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="wdqljvnedg" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#wdqljvnedg .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#wdqljvnedg .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#wdqljvnedg .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#wdqljvnedg .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#wdqljvnedg .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wdqljvnedg .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#wdqljvnedg .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#wdqljvnedg .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#wdqljvnedg .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#wdqljvnedg .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#wdqljvnedg .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#wdqljvnedg .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#wdqljvnedg .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#wdqljvnedg .gt_from_md > :first-child {
  margin-top: 0;
}

#wdqljvnedg .gt_from_md > :last-child {
  margin-bottom: 0;
}

#wdqljvnedg .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#wdqljvnedg .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#wdqljvnedg .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#wdqljvnedg .gt_row_group_first td {
  border-top-width: 2px;
}

#wdqljvnedg .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#wdqljvnedg .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#wdqljvnedg .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#wdqljvnedg .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wdqljvnedg .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#wdqljvnedg .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#wdqljvnedg .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#wdqljvnedg .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wdqljvnedg .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#wdqljvnedg .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#wdqljvnedg .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#wdqljvnedg .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#wdqljvnedg .gt_left {
  text-align: left;
}

#wdqljvnedg .gt_center {
  text-align: center;
}

#wdqljvnedg .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#wdqljvnedg .gt_font_normal {
  font-weight: normal;
}

#wdqljvnedg .gt_font_bold {
  font-weight: bold;
}

#wdqljvnedg .gt_font_italic {
  font-style: italic;
}

#wdqljvnedg .gt_super {
  font-size: 65%;
}

#wdqljvnedg .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#wdqljvnedg .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#wdqljvnedg .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#wdqljvnedg .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#wdqljvnedg .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#wdqljvnedg .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mpg</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">cyl</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">disp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">hp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">drat</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">wt</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">qsec</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">vs</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">am</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">gear</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">carb</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">0.41868403</td>
<td class="gt_row gt_right">0.6640389</td>
<td class="gt_row gt_right">0.5998324</td>
<td class="gt_row gt_right">0.4802848</td>
<td class="gt_row gt_right">-0.5509251</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">0.9020329</td>
<td class="gt_row gt_right">0.8324475</td>
<td class="gt_row gt_right">-0.6999381</td>
<td class="gt_row gt_right">0.7824958</td>
<td class="gt_row gt_right">-0.59124207</td>
<td class="gt_row gt_right">-0.8108118</td>
<td class="gt_row gt_right">-0.5226070</td>
<td class="gt_row gt_right">-0.4926866</td>
<td class="gt_row gt_right">0.5269883</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">0.9020329</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">0.7909486</td>
<td class="gt_row gt_right">-0.7102139</td>
<td class="gt_row gt_right">0.8879799</td>
<td class="gt_row gt_right">-0.43369788</td>
<td class="gt_row gt_right">-0.7104159</td>
<td class="gt_row gt_right">-0.5912270</td>
<td class="gt_row gt_right">-0.5555692</td>
<td class="gt_row gt_right">0.3949769</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">0.8324475</td>
<td class="gt_row gt_right">0.7909486</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.4487591</td>
<td class="gt_row gt_right">0.6587479</td>
<td class="gt_row gt_right">-0.70822339</td>
<td class="gt_row gt_right">-0.7230967</td>
<td class="gt_row gt_right">-0.2432043</td>
<td class="gt_row gt_right">-0.1257043</td>
<td class="gt_row gt_right">0.7498125</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">-0.6999381</td>
<td class="gt_row gt_right">-0.7102139</td>
<td class="gt_row gt_right">-0.4487591</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.7124406</td>
<td class="gt_row gt_right">0.09120476</td>
<td class="gt_row gt_right">0.4402785</td>
<td class="gt_row gt_right">0.7127111</td>
<td class="gt_row gt_right">0.6996101</td>
<td class="gt_row gt_right">-0.0907898</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">0.7824958</td>
<td class="gt_row gt_right">0.8879799</td>
<td class="gt_row gt_right">0.6587479</td>
<td class="gt_row gt_right">-0.7124406</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.17471588</td>
<td class="gt_row gt_right">-0.5549157</td>
<td class="gt_row gt_right">-0.6924953</td>
<td class="gt_row gt_right">-0.5832870</td>
<td class="gt_row gt_right">0.4276059</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>The p-values, <code>P</code>:</p>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(mtcars_cor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>P) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="pidkenikfl" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#pidkenikfl .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pidkenikfl .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pidkenikfl .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pidkenikfl .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pidkenikfl .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pidkenikfl .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pidkenikfl .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pidkenikfl .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pidkenikfl .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pidkenikfl .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pidkenikfl .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pidkenikfl .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pidkenikfl .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pidkenikfl .gt_from_md > :first-child {
  margin-top: 0;
}

#pidkenikfl .gt_from_md > :last-child {
  margin-bottom: 0;
}

#pidkenikfl .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pidkenikfl .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#pidkenikfl .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#pidkenikfl .gt_row_group_first td {
  border-top-width: 2px;
}

#pidkenikfl .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pidkenikfl .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#pidkenikfl .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#pidkenikfl .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pidkenikfl .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pidkenikfl .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pidkenikfl .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pidkenikfl .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pidkenikfl .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pidkenikfl .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pidkenikfl .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pidkenikfl .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pidkenikfl .gt_left {
  text-align: left;
}

#pidkenikfl .gt_center {
  text-align: center;
}

#pidkenikfl .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pidkenikfl .gt_font_normal {
  font-weight: normal;
}

#pidkenikfl .gt_font_bold {
  font-weight: bold;
}

#pidkenikfl .gt_font_italic {
  font-style: italic;
}

#pidkenikfl .gt_super {
  font-size: 65%;
}

#pidkenikfl .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#pidkenikfl .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#pidkenikfl .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#pidkenikfl .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#pidkenikfl .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#pidkenikfl .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mpg</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">cyl</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">disp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">hp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">drat</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">wt</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">qsec</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">vs</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">am</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">gear</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">carb</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">6.112688e-10</td>
<td class="gt_row gt_right">9.380328e-10</td>
<td class="gt_row gt_right">1.787835e-07</td>
<td class="gt_row gt_right">1.776240e-05</td>
<td class="gt_row gt_right">1.293958e-10</td>
<td class="gt_row gt_right">1.708199e-02</td>
<td class="gt_row gt_right">3.415937e-05</td>
<td class="gt_row gt_right">2.850207e-04</td>
<td class="gt_row gt_right">5.400948e-03</td>
<td class="gt_row gt_right">1.084446e-03</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">6.112688e-10</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">1.803002e-12</td>
<td class="gt_row gt_right">3.477861e-09</td>
<td class="gt_row gt_right">8.244636e-06</td>
<td class="gt_row gt_right">1.217567e-07</td>
<td class="gt_row gt_right">3.660533e-04</td>
<td class="gt_row gt_right">1.843018e-08</td>
<td class="gt_row gt_right">2.151207e-03</td>
<td class="gt_row gt_right">4.173297e-03</td>
<td class="gt_row gt_right">1.942340e-03</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">9.380328e-10</td>
<td class="gt_row gt_right">1.803002e-12</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">7.142679e-08</td>
<td class="gt_row gt_right">5.282022e-06</td>
<td class="gt_row gt_right">1.222311e-11</td>
<td class="gt_row gt_right">1.314404e-02</td>
<td class="gt_row gt_right">5.235012e-06</td>
<td class="gt_row gt_right">3.662114e-04</td>
<td class="gt_row gt_right">9.635921e-04</td>
<td class="gt_row gt_right">2.526789e-02</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">1.787835e-07</td>
<td class="gt_row gt_right">3.477861e-09</td>
<td class="gt_row gt_right">7.142679e-08</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">9.988772e-03</td>
<td class="gt_row gt_right">4.145827e-05</td>
<td class="gt_row gt_right">5.766253e-06</td>
<td class="gt_row gt_right">2.940896e-06</td>
<td class="gt_row gt_right">1.798309e-01</td>
<td class="gt_row gt_right">4.930119e-01</td>
<td class="gt_row gt_right">7.827810e-07</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">1.776240e-05</td>
<td class="gt_row gt_right">8.244636e-06</td>
<td class="gt_row gt_right">5.282022e-06</td>
<td class="gt_row gt_right">9.988772e-03</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">4.784260e-06</td>
<td class="gt_row gt_right">6.195826e-01</td>
<td class="gt_row gt_right">1.167553e-02</td>
<td class="gt_row gt_right">4.726790e-06</td>
<td class="gt_row gt_right">8.360110e-06</td>
<td class="gt_row gt_right">6.211834e-01</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">1.293958e-10</td>
<td class="gt_row gt_right">1.217567e-07</td>
<td class="gt_row gt_right">1.222311e-11</td>
<td class="gt_row gt_right">4.145827e-05</td>
<td class="gt_row gt_right">4.784260e-06</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">3.388683e-01</td>
<td class="gt_row gt_right">9.798492e-04</td>
<td class="gt_row gt_right">1.125440e-05</td>
<td class="gt_row gt_right">4.586601e-04</td>
<td class="gt_row gt_right">1.463861e-02</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>The number of observations, <code>n</code>. There are no missing data in the <code>mtcars</code> data set so there are 32 pairs used for all correlations.</p>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(mtcars_cor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="otygowbuni" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#otygowbuni .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#otygowbuni .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#otygowbuni .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#otygowbuni .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#otygowbuni .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#otygowbuni .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#otygowbuni .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#otygowbuni .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#otygowbuni .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#otygowbuni .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#otygowbuni .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#otygowbuni .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#otygowbuni .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#otygowbuni .gt_from_md > :first-child {
  margin-top: 0;
}

#otygowbuni .gt_from_md > :last-child {
  margin-bottom: 0;
}

#otygowbuni .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#otygowbuni .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#otygowbuni .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#otygowbuni .gt_row_group_first td {
  border-top-width: 2px;
}

#otygowbuni .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#otygowbuni .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#otygowbuni .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#otygowbuni .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#otygowbuni .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#otygowbuni .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#otygowbuni .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#otygowbuni .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#otygowbuni .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#otygowbuni .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#otygowbuni .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#otygowbuni .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#otygowbuni .gt_left {
  text-align: left;
}

#otygowbuni .gt_center {
  text-align: center;
}

#otygowbuni .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#otygowbuni .gt_font_normal {
  font-weight: normal;
}

#otygowbuni .gt_font_bold {
  font-weight: bold;
}

#otygowbuni .gt_font_italic {
  font-style: italic;
}

#otygowbuni .gt_super {
  font-size: 65%;
}

#otygowbuni .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#otygowbuni .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#otygowbuni .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#otygowbuni .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#otygowbuni .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#otygowbuni .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mpg</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">cyl</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">disp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">hp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">drat</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">wt</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">qsec</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">vs</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">am</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">gear</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">carb</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">32</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>Next we can write a function that formats a <code>data frame</code> correctly for <code>Hmisc::rcorr()</code> and then turns each of the three elements of the list (<code>r</code>,<code>n</code> and <code>P</code>)</p>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">cors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df) {</span>
<span id="cb10-2">  M <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Hmisc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rcorr</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(df))</span>
<span id="cb10-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># turn all three matrices (r, n, and P into a data frame)</span></span>
<span id="cb10-4">  Mdf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(M, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(.x))</span>
<span id="cb10-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># return the three data frames in a list</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(Mdf)</span>
<span id="cb10-7">}</span></code></pre></div>
<p>Nothing too crazy happened in this function. Now we just have a list of three data frames. We can look at the the first element of our list using <code>first()</code>, which shows us the correlations between all our variables:</p>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">first</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="qhqdicghyo" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#qhqdicghyo .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#qhqdicghyo .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qhqdicghyo .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#qhqdicghyo .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#qhqdicghyo .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qhqdicghyo .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qhqdicghyo .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#qhqdicghyo .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#qhqdicghyo .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#qhqdicghyo .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#qhqdicghyo .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#qhqdicghyo .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#qhqdicghyo .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#qhqdicghyo .gt_from_md > :first-child {
  margin-top: 0;
}

#qhqdicghyo .gt_from_md > :last-child {
  margin-bottom: 0;
}

#qhqdicghyo .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#qhqdicghyo .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#qhqdicghyo .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#qhqdicghyo .gt_row_group_first td {
  border-top-width: 2px;
}

#qhqdicghyo .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qhqdicghyo .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#qhqdicghyo .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#qhqdicghyo .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qhqdicghyo .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qhqdicghyo .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#qhqdicghyo .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#qhqdicghyo .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qhqdicghyo .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qhqdicghyo .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qhqdicghyo .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qhqdicghyo .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qhqdicghyo .gt_left {
  text-align: left;
}

#qhqdicghyo .gt_center {
  text-align: center;
}

#qhqdicghyo .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#qhqdicghyo .gt_font_normal {
  font-weight: normal;
}

#qhqdicghyo .gt_font_bold {
  font-weight: bold;
}

#qhqdicghyo .gt_font_italic {
  font-style: italic;
}

#qhqdicghyo .gt_super {
  font-size: 65%;
}

#qhqdicghyo .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#qhqdicghyo .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#qhqdicghyo .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#qhqdicghyo .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#qhqdicghyo .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#qhqdicghyo .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mpg</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">cyl</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">disp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">hp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">drat</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">wt</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">qsec</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">vs</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">am</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">gear</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">carb</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">0.41868403</td>
<td class="gt_row gt_right">0.6640389</td>
<td class="gt_row gt_right">0.5998324</td>
<td class="gt_row gt_right">0.4802848</td>
<td class="gt_row gt_right">-0.5509251</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">0.9020329</td>
<td class="gt_row gt_right">0.8324475</td>
<td class="gt_row gt_right">-0.6999381</td>
<td class="gt_row gt_right">0.7824958</td>
<td class="gt_row gt_right">-0.59124207</td>
<td class="gt_row gt_right">-0.8108118</td>
<td class="gt_row gt_right">-0.5226070</td>
<td class="gt_row gt_right">-0.4926866</td>
<td class="gt_row gt_right">0.5269883</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">0.9020329</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">0.7909486</td>
<td class="gt_row gt_right">-0.7102139</td>
<td class="gt_row gt_right">0.8879799</td>
<td class="gt_row gt_right">-0.43369788</td>
<td class="gt_row gt_right">-0.7104159</td>
<td class="gt_row gt_right">-0.5912270</td>
<td class="gt_row gt_right">-0.5555692</td>
<td class="gt_row gt_right">0.3949769</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">0.8324475</td>
<td class="gt_row gt_right">0.7909486</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.4487591</td>
<td class="gt_row gt_right">0.6587479</td>
<td class="gt_row gt_right">-0.70822339</td>
<td class="gt_row gt_right">-0.7230967</td>
<td class="gt_row gt_right">-0.2432043</td>
<td class="gt_row gt_right">-0.1257043</td>
<td class="gt_row gt_right">0.7498125</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">-0.6999381</td>
<td class="gt_row gt_right">-0.7102139</td>
<td class="gt_row gt_right">-0.4487591</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.7124406</td>
<td class="gt_row gt_right">0.09120476</td>
<td class="gt_row gt_right">0.4402785</td>
<td class="gt_row gt_right">0.7127111</td>
<td class="gt_row gt_right">0.6996101</td>
<td class="gt_row gt_right">-0.0907898</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">0.7824958</td>
<td class="gt_row gt_right">0.8879799</td>
<td class="gt_row gt_right">0.6587479</td>
<td class="gt_row gt_right">-0.7124406</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.17471588</td>
<td class="gt_row gt_right">-0.5549157</td>
<td class="gt_row gt_right">-0.6924953</td>
<td class="gt_row gt_right">-0.5832870</td>
<td class="gt_row gt_right">0.4276059</td>
</tr>
</tbody>
</table>

</div>
</div>
</section>
<section id="prep-the-correlations-for-ggplot2" class="level1">
<h1>Prep the correlations for <code>ggplot2</code></h1>
<p>The next step is to get the data ready for plotting with <code>ggplot2</code>. We can keep the data in a list for now and use the <code>map()</code> function from <code>purrr</code>.</p>
<p>First, we need to move the rownames to their own column using <code>tibble::rownames_to_column()</code>. The output of that looks like:</p>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure1"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look at the first element of the list (r)</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">first</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="dtdoyczpgp" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#dtdoyczpgp .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#dtdoyczpgp .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#dtdoyczpgp .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#dtdoyczpgp .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#dtdoyczpgp .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#dtdoyczpgp .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#dtdoyczpgp .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#dtdoyczpgp .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#dtdoyczpgp .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#dtdoyczpgp .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#dtdoyczpgp .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#dtdoyczpgp .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#dtdoyczpgp .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#dtdoyczpgp .gt_from_md > :first-child {
  margin-top: 0;
}

#dtdoyczpgp .gt_from_md > :last-child {
  margin-bottom: 0;
}

#dtdoyczpgp .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#dtdoyczpgp .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#dtdoyczpgp .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#dtdoyczpgp .gt_row_group_first td {
  border-top-width: 2px;
}

#dtdoyczpgp .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#dtdoyczpgp .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#dtdoyczpgp .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#dtdoyczpgp .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#dtdoyczpgp .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#dtdoyczpgp .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#dtdoyczpgp .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#dtdoyczpgp .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#dtdoyczpgp .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#dtdoyczpgp .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#dtdoyczpgp .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#dtdoyczpgp .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#dtdoyczpgp .gt_left {
  text-align: left;
}

#dtdoyczpgp .gt_center {
  text-align: center;
}

#dtdoyczpgp .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#dtdoyczpgp .gt_font_normal {
  font-weight: normal;
}

#dtdoyczpgp .gt_font_bold {
  font-weight: bold;
}

#dtdoyczpgp .gt_font_italic {
  font-style: italic;
}

#dtdoyczpgp .gt_super {
  font-size: 65%;
}

#dtdoyczpgp .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#dtdoyczpgp .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#dtdoyczpgp .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#dtdoyczpgp .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#dtdoyczpgp .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#dtdoyczpgp .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure1</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mpg</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">cyl</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">disp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">hp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">drat</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">wt</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">qsec</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">vs</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">am</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">gear</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">carb</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">0.41868403</td>
<td class="gt_row gt_right">0.6640389</td>
<td class="gt_row gt_right">0.5998324</td>
<td class="gt_row gt_right">0.4802848</td>
<td class="gt_row gt_right">-0.5509251</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">cyl</td>
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">0.9020329</td>
<td class="gt_row gt_right">0.8324475</td>
<td class="gt_row gt_right">-0.6999381</td>
<td class="gt_row gt_right">0.7824958</td>
<td class="gt_row gt_right">-0.59124207</td>
<td class="gt_row gt_right">-0.8108118</td>
<td class="gt_row gt_right">-0.5226070</td>
<td class="gt_row gt_right">-0.4926866</td>
<td class="gt_row gt_right">0.5269883</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">disp</td>
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">0.9020329</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">0.7909486</td>
<td class="gt_row gt_right">-0.7102139</td>
<td class="gt_row gt_right">0.8879799</td>
<td class="gt_row gt_right">-0.43369788</td>
<td class="gt_row gt_right">-0.7104159</td>
<td class="gt_row gt_right">-0.5912270</td>
<td class="gt_row gt_right">-0.5555692</td>
<td class="gt_row gt_right">0.3949769</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">hp</td>
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">0.8324475</td>
<td class="gt_row gt_right">0.7909486</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.4487591</td>
<td class="gt_row gt_right">0.6587479</td>
<td class="gt_row gt_right">-0.70822339</td>
<td class="gt_row gt_right">-0.7230967</td>
<td class="gt_row gt_right">-0.2432043</td>
<td class="gt_row gt_right">-0.1257043</td>
<td class="gt_row gt_right">0.7498125</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">drat</td>
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">-0.6999381</td>
<td class="gt_row gt_right">-0.7102139</td>
<td class="gt_row gt_right">-0.4487591</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.7124406</td>
<td class="gt_row gt_right">0.09120476</td>
<td class="gt_row gt_right">0.4402785</td>
<td class="gt_row gt_right">0.7127111</td>
<td class="gt_row gt_right">0.6996101</td>
<td class="gt_row gt_right">-0.0907898</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">wt</td>
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">0.7824958</td>
<td class="gt_row gt_right">0.8879799</td>
<td class="gt_row gt_right">0.6587479</td>
<td class="gt_row gt_right">-0.7124406</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">-0.17471588</td>
<td class="gt_row gt_right">-0.5549157</td>
<td class="gt_row gt_right">-0.6924953</td>
<td class="gt_row gt_right">-0.5832870</td>
<td class="gt_row gt_right">0.4276059</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>Next, we can turn move of the columns to a single column called <code>measure2</code> using <code>tidyr::pivot_longer()</code></p>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure1"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># format each data set (r,P,n) long</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(.x, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>measure1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure2"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look at the first element of the list (r)</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">first</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="nqkztinihc" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#nqkztinihc .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#nqkztinihc .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#nqkztinihc .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#nqkztinihc .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#nqkztinihc .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#nqkztinihc .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#nqkztinihc .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#nqkztinihc .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#nqkztinihc .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#nqkztinihc .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#nqkztinihc .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#nqkztinihc .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#nqkztinihc .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#nqkztinihc .gt_from_md > :first-child {
  margin-top: 0;
}

#nqkztinihc .gt_from_md > :last-child {
  margin-bottom: 0;
}

#nqkztinihc .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#nqkztinihc .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#nqkztinihc .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#nqkztinihc .gt_row_group_first td {
  border-top-width: 2px;
}

#nqkztinihc .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#nqkztinihc .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#nqkztinihc .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#nqkztinihc .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#nqkztinihc .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#nqkztinihc .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#nqkztinihc .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#nqkztinihc .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#nqkztinihc .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#nqkztinihc .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#nqkztinihc .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#nqkztinihc .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#nqkztinihc .gt_left {
  text-align: left;
}

#nqkztinihc .gt_center {
  text-align: center;
}

#nqkztinihc .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#nqkztinihc .gt_font_normal {
  font-weight: normal;
}

#nqkztinihc .gt_font_bold {
  font-weight: bold;
}

#nqkztinihc .gt_font_italic {
  font-style: italic;
}

#nqkztinihc .gt_super {
  font-size: 65%;
}

#nqkztinihc .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#nqkztinihc .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#nqkztinihc .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#nqkztinihc .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#nqkztinihc .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#nqkztinihc .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure1</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure2</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">value</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_right">1.0000000</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">cyl</td>
<td class="gt_row gt_right">-0.8521620</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">disp</td>
<td class="gt_row gt_right">-0.8475514</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">hp</td>
<td class="gt_row gt_right">-0.7761684</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">drat</td>
<td class="gt_row gt_right">0.6811719</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">wt</td>
<td class="gt_row gt_right">-0.8676594</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>Now, we’re ready to unlist our data by using <code>bind_rows()</code>. This will turn our correlations into a very long data frame with all the rows from <code>r</code>, then <code>n</code>, then <code>P</code>.</p>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure1"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># format each data set (r,P,n) long</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(.x, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>measure1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure2"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge our three list elements by binding the rows</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="kjvmlbztep" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#kjvmlbztep .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#kjvmlbztep .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#kjvmlbztep .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#kjvmlbztep .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#kjvmlbztep .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#kjvmlbztep .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#kjvmlbztep .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#kjvmlbztep .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#kjvmlbztep .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#kjvmlbztep .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#kjvmlbztep .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#kjvmlbztep .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#kjvmlbztep .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#kjvmlbztep .gt_from_md > :first-child {
  margin-top: 0;
}

#kjvmlbztep .gt_from_md > :last-child {
  margin-bottom: 0;
}

#kjvmlbztep .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#kjvmlbztep .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#kjvmlbztep .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#kjvmlbztep .gt_row_group_first td {
  border-top-width: 2px;
}

#kjvmlbztep .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#kjvmlbztep .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#kjvmlbztep .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#kjvmlbztep .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#kjvmlbztep .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#kjvmlbztep .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#kjvmlbztep .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#kjvmlbztep .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#kjvmlbztep .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#kjvmlbztep .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#kjvmlbztep .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#kjvmlbztep .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#kjvmlbztep .gt_left {
  text-align: left;
}

#kjvmlbztep .gt_center {
  text-align: center;
}

#kjvmlbztep .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#kjvmlbztep .gt_font_normal {
  font-weight: normal;
}

#kjvmlbztep .gt_font_bold {
  font-weight: bold;
}

#kjvmlbztep .gt_font_italic {
  font-style: italic;
}

#kjvmlbztep .gt_super {
  font-size: 65%;
}

#kjvmlbztep .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#kjvmlbztep .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#kjvmlbztep .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#kjvmlbztep .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#kjvmlbztep .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#kjvmlbztep .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">id</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure1</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure2</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">value</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">r</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_right">1.0000000</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">r</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">cyl</td>
<td class="gt_row gt_right">-0.8521620</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">r</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">disp</td>
<td class="gt_row gt_right">-0.8475514</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">r</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">hp</td>
<td class="gt_row gt_right">-0.7761684</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">r</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">drat</td>
<td class="gt_row gt_right">0.6811719</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">r</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">wt</td>
<td class="gt_row gt_right">-0.8676594</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>For <code>ggplot2</code>, we’ll need to have <code>r</code>, <code>n</code>, and <code>p</code> as their own column. We can use <code>pivot_longer()</code> to do this.</p>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure1"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># format each data set (r,P,n) long</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(.x, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>measure1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure2"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge our three list elements by binding the rows</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="lipsrimwao" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#lipsrimwao .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#lipsrimwao .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lipsrimwao .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#lipsrimwao .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#lipsrimwao .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lipsrimwao .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lipsrimwao .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#lipsrimwao .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#lipsrimwao .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#lipsrimwao .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#lipsrimwao .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#lipsrimwao .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#lipsrimwao .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#lipsrimwao .gt_from_md > :first-child {
  margin-top: 0;
}

#lipsrimwao .gt_from_md > :last-child {
  margin-bottom: 0;
}

#lipsrimwao .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#lipsrimwao .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#lipsrimwao .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#lipsrimwao .gt_row_group_first td {
  border-top-width: 2px;
}

#lipsrimwao .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lipsrimwao .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#lipsrimwao .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#lipsrimwao .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lipsrimwao .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lipsrimwao .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#lipsrimwao .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#lipsrimwao .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lipsrimwao .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lipsrimwao .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#lipsrimwao .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lipsrimwao .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#lipsrimwao .gt_left {
  text-align: left;
}

#lipsrimwao .gt_center {
  text-align: center;
}

#lipsrimwao .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#lipsrimwao .gt_font_normal {
  font-weight: normal;
}

#lipsrimwao .gt_font_bold {
  font-weight: bold;
}

#lipsrimwao .gt_font_italic {
  font-style: italic;
}

#lipsrimwao .gt_super {
  font-size: 65%;
}

#lipsrimwao .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#lipsrimwao .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#lipsrimwao .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#lipsrimwao .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#lipsrimwao .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#lipsrimwao .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure1</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure2</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">r</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">n</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">P</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">cyl</td>
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">6.112688e-10</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">disp</td>
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">9.380328e-10</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">hp</td>
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.787835e-07</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">drat</td>
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.776240e-05</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">wt</td>
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.293958e-10</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>Finally, we can add a few columns that will potentially be useful later for making our correlation plots more informative. Let’s add columns that tell us whether the p-value was less than 0.05, and if so, give us back 1) the p-value and 2) the correlation coefficient, in case we want to label our plot with these values.</p>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure1"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># format each data set (r,P,n) long</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(.x, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>measure1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure2"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge our three list elements by binding the rows</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change so everything is lower case</span></span>
<span id="cb16-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> P) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sig_p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>, T, F),</span>
<span id="cb16-11">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_if_sig =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sig_p, p, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb16-12">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r_if_sig =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sig_p, r, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="cxjayjfyos" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#cxjayjfyos .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cxjayjfyos .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cxjayjfyos .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cxjayjfyos .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cxjayjfyos .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cxjayjfyos .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cxjayjfyos .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cxjayjfyos .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cxjayjfyos .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cxjayjfyos .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cxjayjfyos .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cxjayjfyos .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#cxjayjfyos .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cxjayjfyos .gt_from_md > :first-child {
  margin-top: 0;
}

#cxjayjfyos .gt_from_md > :last-child {
  margin-bottom: 0;
}

#cxjayjfyos .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cxjayjfyos .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#cxjayjfyos .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#cxjayjfyos .gt_row_group_first td {
  border-top-width: 2px;
}

#cxjayjfyos .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxjayjfyos .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#cxjayjfyos .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#cxjayjfyos .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cxjayjfyos .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxjayjfyos .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cxjayjfyos .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#cxjayjfyos .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cxjayjfyos .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cxjayjfyos .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxjayjfyos .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cxjayjfyos .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cxjayjfyos .gt_left {
  text-align: left;
}

#cxjayjfyos .gt_center {
  text-align: center;
}

#cxjayjfyos .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cxjayjfyos .gt_font_normal {
  font-weight: normal;
}

#cxjayjfyos .gt_font_bold {
  font-weight: bold;
}

#cxjayjfyos .gt_font_italic {
  font-style: italic;
}

#cxjayjfyos .gt_super {
  font-size: 65%;
}

#cxjayjfyos .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#cxjayjfyos .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#cxjayjfyos .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#cxjayjfyos .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#cxjayjfyos .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#cxjayjfyos .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure1</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure2</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">r</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">n</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">p</th>
<th class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th">sig_p</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">p_if_sig</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">r_if_sig</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_center">NA</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">cyl</td>
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">6.112688e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">6.112688e-10</td>
<td class="gt_row gt_right">-0.8521620</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">disp</td>
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">9.380328e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">9.380328e-10</td>
<td class="gt_row gt_right">-0.8475514</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">hp</td>
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.787835e-07</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.787835e-07</td>
<td class="gt_row gt_right">-0.7761684</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">drat</td>
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.776240e-05</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.776240e-05</td>
<td class="gt_row gt_right">0.6811719</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">wt</td>
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.293958e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.293958e-10</td>
<td class="gt_row gt_right">-0.8676594</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>This seems like everything I think I’ll ever ever want to plot. Of course you could add more. At this point I turned my formatted correlations into a function:</p>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">formatted_cors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df){</span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>(df) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure1"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(.x, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>measure1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure2"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> P) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sig_p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>, T, F),</span>
<span id="cb17-9">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_if_sig =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sig_p, p, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb17-10">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r_if_sig =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sig_p, r, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)) </span>
<span id="cb17-11">}</span></code></pre></div>
<p>We can test the function works as expected:</p>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatted_cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="fdsgveetvj" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#fdsgveetvj .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#fdsgveetvj .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#fdsgveetvj .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#fdsgveetvj .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#fdsgveetvj .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fdsgveetvj .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#fdsgveetvj .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#fdsgveetvj .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#fdsgveetvj .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#fdsgveetvj .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#fdsgveetvj .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#fdsgveetvj .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#fdsgveetvj .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#fdsgveetvj .gt_from_md > :first-child {
  margin-top: 0;
}

#fdsgveetvj .gt_from_md > :last-child {
  margin-bottom: 0;
}

#fdsgveetvj .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#fdsgveetvj .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#fdsgveetvj .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#fdsgveetvj .gt_row_group_first td {
  border-top-width: 2px;
}

#fdsgveetvj .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#fdsgveetvj .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#fdsgveetvj .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#fdsgveetvj .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fdsgveetvj .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#fdsgveetvj .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#fdsgveetvj .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#fdsgveetvj .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fdsgveetvj .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#fdsgveetvj .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#fdsgveetvj .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#fdsgveetvj .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#fdsgveetvj .gt_left {
  text-align: left;
}

#fdsgveetvj .gt_center {
  text-align: center;
}

#fdsgveetvj .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#fdsgveetvj .gt_font_normal {
  font-weight: normal;
}

#fdsgveetvj .gt_font_bold {
  font-weight: bold;
}

#fdsgveetvj .gt_font_italic {
  font-style: italic;
}

#fdsgveetvj .gt_super {
  font-size: 65%;
}

#fdsgveetvj .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#fdsgveetvj .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#fdsgveetvj .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#fdsgveetvj .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#fdsgveetvj .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#fdsgveetvj .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure1</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">measure2</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">r</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">n</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">p</th>
<th class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th">sig_p</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">p_if_sig</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">r_if_sig</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_right">1.0000000</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_center">NA</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">NA</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">cyl</td>
<td class="gt_row gt_right">-0.8521620</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">6.112688e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">6.112688e-10</td>
<td class="gt_row gt_right">-0.8521620</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">disp</td>
<td class="gt_row gt_right">-0.8475514</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">9.380328e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">9.380328e-10</td>
<td class="gt_row gt_right">-0.8475514</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">hp</td>
<td class="gt_row gt_right">-0.7761684</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.787835e-07</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.787835e-07</td>
<td class="gt_row gt_right">-0.7761684</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">drat</td>
<td class="gt_row gt_right">0.6811719</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.776240e-05</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.776240e-05</td>
<td class="gt_row gt_right">0.6811719</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">mpg</td>
<td class="gt_row gt_left">wt</td>
<td class="gt_row gt_right">-0.8676594</td>
<td class="gt_row gt_right">32</td>
<td class="gt_row gt_right">1.293958e-10</td>
<td class="gt_row gt_center">TRUE</td>
<td class="gt_row gt_right">1.293958e-10</td>
<td class="gt_row gt_right">-0.8676594</td>
</tr>
</tbody>
</table>

</div>
</div>
</section>
<section id="plotting" class="level1">
<h1>Plotting</h1>
<p>We’re finally ready to plot our correlation heat maps in <code>ggplot2</code>.</p>
<p>The simplest form of this plot only requires us to specify <code>measure1</code> and <code>measure2</code> on the <code>x</code> and <code>y</code>-axis, respectively. Then we can map the correlation <code>r</code> to the <code>fill</code> <code>aes</code>thetic, and add a tile as the <code>geom</code>etry.</p>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatted_cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> measure1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> measure2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> r)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_tile</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="672"></p>
</div>
<p>We can make some minor aesthetic changes, such as the fill coloring scale, titles, and font family.</p>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatted_cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> measure1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> measure2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> r)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_tile</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson's</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Correlation"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Correlations in Mtcars"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># map a red, white and blue color scale to correspond to -1:1 sequential gradient</span></span>
<span id="cb20-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mid=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FBFEF9"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0C6291"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A63446"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove excess space on x and y axes</span></span>
<span id="cb20-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change global font to roboto</span></span>
<span id="cb20-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roboto"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="672"></p>
</div>
<p>We can add the correlations for extra information. For this particular plot, I only added significant (p-value less than 0.05) correlations, using the column <code>r_if_sig</code> that outputs from <code>formatted_cors()</code>.</p>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatted_cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(measure1, measure2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(r_if_sig,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_tile</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson's</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Correlation"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Correlations in Mtcars"</span>,</span>
<span id="cb21-5">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Only significant Pearson's correlation coefficients shown"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mid=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FBFEF9"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0C6291"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A63446"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roboto"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
<p>Another version of this could involve squares with different sizes to denote strength of correlation using <code>geom_point</code> with <code>shape</code> set to a value from <a href="http://www.sthda.com/english/wiki/ggplot2-point-shapes">these available <code>geom_shape</code>s</a>. Make sure you take the absolute value of the correlation so that strong negative correlations can also be denoted larger.</p>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatted_cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(measure1, measure2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span>r)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## to get the rect filled</span></span>
<span id="cb22-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_tile</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(r)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson's</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Correlation"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Correlations in Mtcars"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradient2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mid=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FBFEF9"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0C6291"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A63446"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roboto"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="576"></p>
</div>
<p>Please feel free to reach out with questions or suggestions. Thank you to Elena Leib for spotting a minor bug in a previous version of this post!</p>
</section>
<section id="just-the-code" class="level1">
<h1>Just the code</h1>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">cors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df) {</span>
<span id="cb23-2">  M <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Hmisc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rcorr</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(df))</span>
<span id="cb23-3">  Mdf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(M, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(.x))</span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(Mdf)</span>
<span id="cb23-5">}</span>
<span id="cb23-6"></span>
<span id="cb23-7">formatted_cors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df){</span>
<span id="cb23-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>(df) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure1"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(.x, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>measure1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"measure2"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> P) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sig_p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>, T, F),</span>
<span id="cb23-15">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p_if_sig =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sig_p, p, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb23-16">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r_if_sig =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sig_p, r, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)) </span>
<span id="cb23-17">}</span>
<span id="cb23-18"></span>
<span id="cb23-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatted_cors</span>(mtcars) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(measure1, measure2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(r_if_sig,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_tile</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson's</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Correlation"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Correlations in Mtcars"</span>,</span>
<span id="cb23-23">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Only significant Pearson's correlation coefficients shown"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mid=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FBFEF9"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0C6291"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A63446"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roboto"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/corr-plots/index_files/figure-html/unnamed-chunk-24-1.png" class="img-fluid" width="672"></p>
</div>
<section id="session-info" class="level3">
<h3 class="anchored" data-anchor-id="session-info">Session info</h3>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<p>R version 4.1.3 (2022-03-10) Platform: x86_64-apple-darwin17.0 (64-bit) Running under: macOS Catalina 10.15.7</p>
<p>Matrix products: default BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib</p>
<p>locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8</p>
<p>attached base packages: [1] stats graphics grDevices utils datasets methods base</p>
<p>other attached packages: [1] gt_0.6.0 knitr_1.38 forcats_0.5.1 stringr_1.4.1<br>
[5] dplyr_1.0.9 purrr_0.3.4 readr_2.1.2 tidyr_1.2.0<br>
[9] tibble_3.1.8 ggplot2_3.3.6 tidyverse_1.3.1</p>
<p>loaded via a namespace (and not attached): [1] fs_1.5.2 lubridate_1.8.0 RColorBrewer_1.1-3 [4] httr_1.4.2 tools_4.1.3 backports_1.4.1<br>
[7] utf8_1.2.2 R6_2.5.1 rpart_4.1.16<br>
[10] Hmisc_4.7-0 DBI_1.1.2 colorspace_2.0-3<br>
[13] nnet_7.3-17 withr_2.5.0 tidyselect_1.1.2<br>
[16] gridExtra_2.3 cabinets_0.6.0 compiler_4.1.3<br>
[19] cli_3.3.0 rvest_1.0.2 htmlTable_2.4.0<br>
[22] xml2_1.3.3 labeling_0.4.2 sass_0.4.1<br>
[25] scales_1.2.1 checkmate_2.0.0 digest_0.6.29<br>
[28] foreign_0.8-82 rmarkdown_2.13 base64enc_0.1-3<br>
[31] jpeg_0.1-9 pkgconfig_2.0.3 htmltools_0.5.2<br>
[34] dbplyr_2.1.1 fastmap_1.1.0 htmlwidgets_1.5.4<br>
[37] rlang_1.0.4 readxl_1.4.0 rstudioapi_0.13<br>
[40] generics_0.1.3 farver_2.1.1 jsonlite_1.8.0<br>
[43] magrittr_2.0.3 Formula_1.2-4 Matrix_1.4-0<br>
[46] Rcpp_1.0.9 munsell_0.5.0 fansi_1.0.3<br>
[49] lifecycle_1.0.1 stringi_1.7.8 yaml_2.3.5<br>
[52] plyr_1.8.7 grid_4.1.3 crayon_1.5.1<br>
[55] lattice_0.20-45 haven_2.5.0 splines_4.1.3<br>
[58] hms_1.1.1 pillar_1.8.1 reshape2_1.4.4<br>
[61] reprex_2.0.1 glue_1.6.2 evaluate_0.15<br>
[64] latticeExtra_0.6-29 data.table_1.14.2 modelr_0.1.8<br>
[67] png_0.1-7 vctrs_0.4.1 tzdb_0.3.0<br>
[70] cellranger_1.1.0 gtable_0.3.0 assertthat_0.2.1<br>
[73] xfun_0.32 broom_0.8.0 ggcorrplot_0.1.3<br>
[76] survival_3.2-13 corrgram_1.14 cluster_2.1.2<br>
[79] corrplot_0.92 ellipsis_0.3.2</p>


</section>
</section>

 ]]></description>
  <category>programming</category>
  <guid>www.khstats.com/blog/corr-plots/index.html</guid>
  <pubDate>Mon, 24 Aug 2020 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/img/corr-cover-image.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Rethinking Conditional and Iterated Expectations as Linear Regression Models</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/iterated-expectations/index.html</link>
  <description><![CDATA[ 




<section id="tldr" class="level1">
<h1>TLDR</h1>
<ol type="1">
<li><p>You can a regress an outcome on a grouping variable <em>plus any other variable(s)</em> and the unadjusted and adjusted group means will be identical.</p></li>
<li><p>We can see this in a simple example using the <a href="https://github.com/allisonhorst/palmerpenguins"><code>palmerpenguins</code></a> data:</p></li>
</ol>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#remotes::install_github("allisonhorst/palmerpenguins")</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(palmerpenguins)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use complete cases for simplicity</span></span>
<span id="cb1-7">penguins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>(penguins)</span>
<span id="cb1-8"></span>
<span id="cb1-9">penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit a linear regression for bill length given bill depth and species</span></span>
<span id="cb1-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a new column containing the fitted values for bill length</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">preds =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(bill_length_mm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> bill_depth_mm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> .))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute unadjusted and adjusted group means</span></span>
<span id="cb1-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(species) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_bill_length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(bill_length_mm),</span>
<span id="cb1-16">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_predicted_bill_length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(preds)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="pktqjpkmae" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#pktqjpkmae .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pktqjpkmae .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pktqjpkmae .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pktqjpkmae .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pktqjpkmae .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pktqjpkmae .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pktqjpkmae .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pktqjpkmae .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pktqjpkmae .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pktqjpkmae .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pktqjpkmae .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pktqjpkmae .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pktqjpkmae .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pktqjpkmae .gt_from_md > :first-child {
  margin-top: 0;
}

#pktqjpkmae .gt_from_md > :last-child {
  margin-bottom: 0;
}

#pktqjpkmae .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pktqjpkmae .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#pktqjpkmae .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#pktqjpkmae .gt_row_group_first td {
  border-top-width: 2px;
}

#pktqjpkmae .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pktqjpkmae .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#pktqjpkmae .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#pktqjpkmae .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pktqjpkmae .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pktqjpkmae .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pktqjpkmae .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pktqjpkmae .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pktqjpkmae .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pktqjpkmae .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pktqjpkmae .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pktqjpkmae .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pktqjpkmae .gt_left {
  text-align: left;
}

#pktqjpkmae .gt_center {
  text-align: center;
}

#pktqjpkmae .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pktqjpkmae .gt_font_normal {
  font-weight: normal;
}

#pktqjpkmae .gt_font_bold {
  font-weight: bold;
}

#pktqjpkmae .gt_font_italic {
  font-style: italic;
}

#pktqjpkmae .gt_super {
  font-size: 65%;
}

#pktqjpkmae .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#pktqjpkmae .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#pktqjpkmae .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#pktqjpkmae .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#pktqjpkmae .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#pktqjpkmae .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th">species</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mean_bill_length</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mean_predicted_bill_length</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center">Adelie</td>
<td class="gt_row gt_right">38.82397</td>
<td class="gt_row gt_right">38.82397</td>
</tr>
<tr class="even">
<td class="gt_row gt_center">Chinstrap</td>
<td class="gt_row gt_right">48.83382</td>
<td class="gt_row gt_right">48.83382</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center">Gentoo</td>
<td class="gt_row gt_right">47.56807</td>
<td class="gt_row gt_right">47.56807</td>
</tr>
</tbody>
</table>

</div>
</div>
<ol start="3" type="1">
<li><p>This is because <img src="https://latex.codecogs.com/png.latex?E%5BE%5BY%7CX,Z%5D%7CZ=z%5D=E%5BY%7CZ=z%5D">.</p></li>
<li><p>We can view a fitted value from the regression, <img src="https://latex.codecogs.com/png.latex?E%5BY%7CX,Z%5D">, as a random variable to help us see this.</p></li>
</ol>
<p><strong><em>Skip to the end</em></strong> <strong><em>to see the proof.</em></strong></p>
<hr>
<p><img src="www.khstats.com/img/expectations.png" class="img-fluid"></p>
<p>I’ll admit I spent many weeks of my first probability theory course struggling to understand when and why my professor was writing <img src="https://latex.codecogs.com/png.latex?X"> versus <img src="https://latex.codecogs.com/png.latex?x">. When I finally learned all the rules for expectations of random variables, I still had zero appreciation for their implications in my future work as an applied statistician.</p>
<p>I recently found myself in a rabbit hole of expectation properties while trying to write a seemingly simple function in <code>R</code>. Now that I have the output of my function all sorted out, I have a newfound appreciation for how I can use regressions – a framework I’m very comfortable with – to rethink some of the properties I learned in my probability theory courses.</p>
<p>In the function, I was regressing an outcome on a few variables plus a grouping variable, and then returning the group means of the fitted values. My function kept outputting adjusted group means that were <em>identical</em> to the unadjusted group means.</p>
<p>I soon realized that for what I needed to do, my grouping variable should not be in the regression model. However, I was still perplexed as to how the adjusted and unadjusted group means could be the same.</p>
<p>I created a very basic example to test this unexpected result. I regressed a variable from the new <code>penguins</code> data set, <code>bill_length_mm</code>, on another variable called <code>bill_depth_mm</code> and a grouping variable <code>species</code>. I then looked at the mean within each category of <code>species</code> for both the unadjusted <code>bill_depth_mm</code> and fitted values from my linear regression model for <code>bill_depth_mm</code>.</p>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit a linear regression for bill length given bill depth and species</span></span>
<span id="cb2-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a new column containing the fitted values for bill length</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">preds =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(bill_length_mm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> bill_depth_mm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> .))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute unadjusted and adjusted group means</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(species) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_bill_length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(bill_length_mm),</span>
<span id="cb2-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_predicted_bill_length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(preds)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output-display">

<div id="pdkvokftyu" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#pdkvokftyu .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pdkvokftyu .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pdkvokftyu .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pdkvokftyu .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pdkvokftyu .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pdkvokftyu .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pdkvokftyu .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pdkvokftyu .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pdkvokftyu .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pdkvokftyu .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pdkvokftyu .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pdkvokftyu .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pdkvokftyu .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pdkvokftyu .gt_from_md > :first-child {
  margin-top: 0;
}

#pdkvokftyu .gt_from_md > :last-child {
  margin-bottom: 0;
}

#pdkvokftyu .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pdkvokftyu .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#pdkvokftyu .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#pdkvokftyu .gt_row_group_first td {
  border-top-width: 2px;
}

#pdkvokftyu .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pdkvokftyu .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#pdkvokftyu .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#pdkvokftyu .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pdkvokftyu .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pdkvokftyu .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pdkvokftyu .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pdkvokftyu .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pdkvokftyu .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pdkvokftyu .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pdkvokftyu .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pdkvokftyu .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pdkvokftyu .gt_left {
  text-align: left;
}

#pdkvokftyu .gt_center {
  text-align: center;
}

#pdkvokftyu .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pdkvokftyu .gt_font_normal {
  font-weight: normal;
}

#pdkvokftyu .gt_font_bold {
  font-weight: bold;
}

#pdkvokftyu .gt_font_italic {
  font-style: italic;
}

#pdkvokftyu .gt_super {
  font-size: 65%;
}

#pdkvokftyu .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#pdkvokftyu .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#pdkvokftyu .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#pdkvokftyu .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#pdkvokftyu .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#pdkvokftyu .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th">species</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mean_bill_length</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">mean_predicted_bill_length</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center">Adelie</td>
<td class="gt_row gt_right">38.82397</td>
<td class="gt_row gt_right">38.82397</td>
</tr>
<tr class="even">
<td class="gt_row gt_center">Chinstrap</td>
<td class="gt_row gt_right">48.83382</td>
<td class="gt_row gt_right">48.83382</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center">Gentoo</td>
<td class="gt_row gt_right">47.56807</td>
<td class="gt_row gt_right">47.56807</td>
</tr>
</tbody>
</table>

</div>
</div>
<p>I saw the same strange output, even in my simple example. I realized this must be some statistics property I’d learned about and since forgotten, so I decided to write out what I was doing in expectations.</p>
<p>First, I wrote down the unadjusted group means in the form of an expectation. I wrote down a conditional expectation, since we are looking at the mean of <code>bill_length_mm</code> when <code>species</code> is restricted to a certain category. We can explicitly show this by taking the expectation of a random variable, <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BBill%20Length%7D">, while setting another random variable, <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BSpecies%7D">, equal to only one category at a time.</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5B%5Cmathrm%7BBillLength%7D%7C%5Cmathrm%7BSpecies%7D=Adelie%5D"></p>
<p><img src="https://latex.codecogs.com/png.latex?E%5B%5Cmathrm%7BBillLength%7D%7C%5Cmathrm%7BSpecies%7D=Chinstrap%5D"></p>
<p><img src="https://latex.codecogs.com/png.latex?E%5B%5Cmathrm%7BBillLength%7D%7C%5Cmathrm%7BSpecies%7D=Gentoo%5D"></p>
<p>More generally, we could write out the unadjusted group mean using a group indicator variable, <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BSpecies%7D">, which can take on all possible values <img src="https://latex.codecogs.com/png.latex?species">.</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5B%5Cmathrm%7BBillLength%7D%7C%5Cmathrm%7BSpecies%7D=species%5D"></p>
<p>So that’s our unadjusted group means. What about the adjusted group mean? We can start by writing out the linear regression model, which is the expected value of <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BBillLength%7D">, conditional on the random variables <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BBillDepth%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BSpecies%7D">.</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5B%5Cmathrm%7BBillLength%7D%7C%5Cmathrm%7BBillDepth%7D,%5Cmathrm%7BSpecies%7D%5D"></p>
<p>When I used the <code>predict</code> function on the fit of that linear regression model, I obtained the fitted values from that expectation, before I separated the fitted values by group to get the grouped means. We can see those fitted values as random variables themselves, and write out another conditional mean using a group indicator variable, just as we did for the unadjusted group means earlier.</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5BE%5B%5Cmathrm%7BBillLength%7D%7C%5Cmathrm%7BBillDepth%7D,%5Cmathrm%7BSpecies%7D%5D%7C%5Cmathrm%7BSpecies%7D=species%5D"></p>
<p>My table of unadjusted and adjusted Bill Length means thus showed me that:</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5BE%5B%5Cmathrm%7BBillLength%7D%7C%5Cmathrm%7BBillDepth%7D,%5Cmathrm%7BSpecies%7D%5D%7C%5Cmathrm%7BSpecies%7D=species%5D%20%5C%5C%20=%20E%5B%5Cmathrm%7BBillLength%7D%7C%5Cmathrm%7BSpecies%7D=species%5D"></p>
<p>Or, in more general notation:</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5BE%5BY%7CX,Z%5D%7CZ=z%5D%20=%20E%5BY%7CZ=z%5D"></p>
<p>Is it true?! Spoiler alert – yes. Let’s work through the steps of the proof one by one.</p>
<hr>
</section>
<section id="proof-set-up" class="level1">
<h1>Proof set-up</h1>
<p><em>Let’s pretend for the proof that both our</em> <img src="https://latex.codecogs.com/png.latex?Y"> (outcome), <img src="https://latex.codecogs.com/png.latex?X"> (adjustment variable), and <img src="https://latex.codecogs.com/png.latex?Z"> (grouping variable) are categorical (discrete) variables. This is just to make the math a bit cleaner, since the expectation of a discrete variable (a weighted summation) is a little easier to show than the expectation of a continuous variable (the integral of a probability density function times the realization of the random variable).</p>
<p><em>A few fundamental expectation results we’ll need:</em></p>
<section id="conditional-probability" class="level4">
<h4 class="anchored" data-anchor-id="conditional-probability">Conditional probability</h4>
<p><img src="https://latex.codecogs.com/png.latex?P(A%7CB)%20=%20%5Cfrac%7BP(A%20%E2%88%A9%20B)%7D%7BP(B)%7D"></p>
</section>
<section id="partition-theorem" class="level4">
<h4 class="anchored" data-anchor-id="partition-theorem">Partition theorem</h4>
<p><img src="https://latex.codecogs.com/png.latex?E%5BA%7CB%5D%20=%20%5Csum_Ba%20%5Ccdot%20P(A=a%7CB=b)"></p>
</section>
<section id="marginal-distribution-from-a-joint-distribution" class="level4">
<h4 class="anchored" data-anchor-id="marginal-distribution-from-a-joint-distribution">Marginal distribution from a joint distribution</h4>
<p><img src="https://latex.codecogs.com/png.latex?%5Csum_A%5Csum_Ba%5Ccdot%20P(A=a,B=b)%20=%20%5Csum_Aa%5Csum_B%5Ccdot%20P(A=a,B=b)%20=%20%5Csum_Aa%5Ccdot%20P(A=a)=E%5BA%5D"></p>
<hr>
</section>
</section>
<section id="step-by-step-proof" class="level1 page-columns page-full">
<h1>Step-by-step Proof</h1>
<p>Click on the superscript number after each step for more information.</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5BE%5BY%7CX,Z%5D%7CZ=z%5D"></p>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=E%5BE%5BY%7CX,Z=z%5D%7CZ=z%5D"> <sup>1</sup></p><div class="no-row-height column-margin column-container"><li id="fn1"><p><sup>1</sup>&nbsp;Because we’re making our outer expectation conditional on <img src="https://latex.codecogs.com/png.latex?Z=z">, we can also move <img src="https://latex.codecogs.com/png.latex?Z=z"> into our inner expectation. This becomes obvious in the <code>penguins</code> example, since we only use the fitted values from one category of <code>species</code> to get the adjusted group mean for that category.</p></li></div></div>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=%5Csum_%7BX%7DE%5BY%7CX=x,Z=z%5D%5Ccdot%20P(X=x%7CZ=z)"> <sup>2</sup></p><div class="no-row-height column-margin column-container"><li id="fn2"><p><sup>2</sup>&nbsp;We can rewrite <img src="https://latex.codecogs.com/png.latex?E%5BY%7CX,Z=z%5D"> as the weighted summation of all possible values <img src="https://latex.codecogs.com/png.latex?X"> can take. <img src="https://latex.codecogs.com/png.latex?E%5BY%7CX,Z=z%5D"> will only ever be able to take values of <img src="https://latex.codecogs.com/png.latex?X"> that vary over the range of <img src="https://latex.codecogs.com/png.latex?x">, <img src="https://latex.codecogs.com/png.latex?E%5BY%7CX=x,Z=z%5D"> since our value <img src="https://latex.codecogs.com/png.latex?z"> is already fixed. We can weight each of these possible <img src="https://latex.codecogs.com/png.latex?E%5BY%7CX=x,Z=z%5D"> values by <img src="https://latex.codecogs.com/png.latex?P(X=x%7CZ=z)">, since that’s the probabilty <img src="https://latex.codecogs.com/png.latex?X"> will take value <img src="https://latex.codecogs.com/png.latex?x"> at our already-fixed <img src="https://latex.codecogs.com/png.latex?z">. Thus, we can start to find <img src="https://latex.codecogs.com/png.latex?E%5BE%5BY%7CX,Z=z%5D%7CZ=z%5D"> by weighting each <img src="https://latex.codecogs.com/png.latex?E%5BY%7CX=x,Z=z%5D"> by <img src="https://latex.codecogs.com/png.latex?P(X=x%7CZ=z)"> and adding them all up (see Partition Theorem).</p></li></div></div>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=%5Csum_%7BX%7D%5Csum_%7BY%7Dy%20P(Y=y%7CX=x,Z=z)%5Ccdot%20P(X=x%7CZ=z)"> <sup>3</sup></p><div class="no-row-height column-margin column-container"><li id="fn3"><p><sup>3</sup>&nbsp;We can get the expectation of <img src="https://latex.codecogs.com/png.latex?Y"> at each of those possible values of <img src="https://latex.codecogs.com/png.latex?X"> by a similar process as step 2 (weighting each <img src="https://latex.codecogs.com/png.latex?y"> by <img src="https://latex.codecogs.com/png.latex?P(Y=y%7CX=x,%20Z=z)">.</p></li></div></div>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=%5Csum_%7BX%7D%5Csum_%7BY%7Dy%20%5Cfrac%7BP(Y=y,X=x,Z=z)%7D%7BP(X=x,Z=z)%7D%5Ccdot%20%5Cfrac%7BP(X=x,Z=z)%7D%7BP(Z=z)%7D"> <sup>4</sup></p><div class="no-row-height column-margin column-container"><li id="fn4"><p><sup>4</sup>&nbsp;By the Law of Conditional Probability, we can rewrite our conditional probabilities as joint distributions.</p></li></div></div>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=%5Csum_%7BX%7D%5Csum_%7BY%7Dy%20%5Cfrac%7BP(Y=y,X=x,Z=z)%7D%7BP(Z=z)%7D"> <sup>5</sup></p><div class="no-row-height column-margin column-container"><li id="fn5"><p><sup>5</sup>&nbsp;The denominator of the first fraction cancels out with the numerator of the second fraction.</p></li></div></div>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=%5Csum_%7BY%7Dy%5Csum_%7BX%7D%5Cfrac%7BP(Y=y,X=x,Z=z)%7D%7BP(Z=z)%7D"> <sup>6</sup></p><div class="no-row-height column-margin column-container"><li id="fn6"><p><sup>6</sup>&nbsp;We can switch the summations around so that <img src="https://latex.codecogs.com/png.latex?y"> is outside the summation over all values of <img src="https://latex.codecogs.com/png.latex?X">. This lets us get the joint distribution of only <img src="https://latex.codecogs.com/png.latex?Y"> and <img src="https://latex.codecogs.com/png.latex?Z">.</p></li></div></div>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=%5Csum_%7BY%7Dy%5Cfrac%7BP(Y=y,Z=z)%7D%7BP(Z=z)%7D"> <sup>7</sup></p><div class="no-row-height column-margin column-container"><li id="fn7"><p><sup>7</sup>&nbsp;This is a conditional expectation, written in the form of a joint distribution.</p></li></div></div>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=%5Csum_%7BY%7Dy%20P(Y=y%7CZ=z)"> <sup>8</sup></p><div class="no-row-height column-margin column-container"><li id="fn8"><p><sup>8</sup>&nbsp;By the Partition Theorem.</p></li></div></div>
<div class="page-columns page-full"><p><img src="https://latex.codecogs.com/png.latex?=E%5BY%7CZ=z%5D"> <sup>9</sup></p><div class="no-row-height column-margin column-container"><li id="fn9"><p><sup>9</sup>&nbsp;Rewriting the previous equation as an expectation.</p></li></div></div>
<p>So, we’ve proved that:</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5BE%5BY%7CX,Z%5D%7CZ=z%5D%20=%20E%5BY%7CZ=z%5D"></p>
<p>which, thankfully, means I have an answer to my function output confusion. It was a lightbulb moment for me to realize I should think of an inner expectation as a random variable, and all the rules I learned about conditional and iterated expectations can be revisited in the regressions I fit on a daily basis.</p>
<p>Here’s hoping you too feel inspired to revisit probability theory from time to time, even if your work is very applied. It is, after all, a perfect activity for social distancing! 😷</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<p>Gorman KB, Williams TD, Fraser WR (2014) Ecological Sexual Dimorphism and Environmental Variability within a Community of Antarctic Penguins (Genus Pygoscelis). PLoS ONE 9(3): e90081. https://doi.org/10.1371/journal.pone.0090081</p>
<p><a href="https://www.math.arizona.edu/~tgk/464_07/cond_exp.pdf">A Conditional Expectation - Arizona Math</a></p>


</section>


 ]]></description>
  <category>statistics</category>
  <guid>www.khstats.com/blog/iterated-expectations/index.html</guid>
  <pubDate>Mon, 10 Aug 2020 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/iterated-expectations/expectations.png" medium="image" type="image/png" height="78" width="144"/>
</item>
<item>
  <title>Silver Linings: five coding tricks learned during Lockdown</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/covid-functions/index.html</link>
  <description><![CDATA[ 




<p>Tips for using {tidylog}, {gtsummary}, {labelled}, {snakecase}, and more.</p>
<!--more-->
<p><strong><em>July 10, 2020.</em></strong></p>
<p>In non-coronavirus times, I am the biostatistician for a team of NYC pulmonologists and intensivists. When the pandemic hit NYC in mid-March, I immediately became a <strike>100%</strike> 200% COVID-19 statistician. I received many analysis requests, though not all of them from official investigators:</p>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
My family recently learned I am the statistician for my hospital’s pulmonologists and now I get COVID-19 analysis requests from them, too <a href="https://t.co/wlHmUaBh6Y">pic.twitter.com/wlHmUaBh6Y</a>
</p>
— Kat Hoffman (<span class="citation" data-cites="rkatlady">@rkatlady</span>) <a href="https://twitter.com/rkatlady/status/1248746176834306056?ref_src=twsrc%5Etfw">April 10, 2020</a>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>Jokes aside, I was really busy during the Spring 2020 outbreak. While doing work for both hospital operations and rapidly moving COVID-19 academic research, it was especially important to code efficiently and accurately while working with a deluge of Electronic Health Record (EHR) data.</p>
<p>This post contains my favorite (because they were either the most useful or most used) lines of <code>R</code> code for turning very raw-form EHR data into analytical files for descriptive reporting and statistical inference. For the examples, I’ve created data that is a simplified version of my actual data sets – just in case you too would like to pretend you are a COVID-19 biostatistician!</p>
<p>The first data set contains some basic demographic and clinical outcome information for all COVID-19 positive patients who arrived at a hospital. The second data set contains laboratory results for all patients who arrived at the hospital during a certain window of time. In theory, the first data set (<code>patients</code>) should be a subset of the second (<code>labs</code>).</p>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load tidyverse for data creation and set seed for reproducible data</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data set of basic patient demographics</span></span>
<span id="cb1-6">patients <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb1-8">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>id, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>admit_dt, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>death_or_discharge_dt,</span>
<span id="cb1-9">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>age, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>sex, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>height, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>weight, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>current_smoker, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>immunosuppressed, </span>
<span id="cb1-10">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-03-21 00:10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-05-13 12:10"</span>,</span>
<span id="cb1-11"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">199</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No"</span>, </span>
<span id="cb1-12">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">104</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-04-03 12:15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-04-29 18:34"</span>,</span>
<span id="cb1-13"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No"</span>, </span>
<span id="cb1-14">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">106</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-03-28 12:22"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-04-05 19:18"</span>,</span>
<span id="cb1-15"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">189</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span>, </span>
<span id="cb1-16">     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-04-10 18:15"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-04-14 19:12"</span>,</span>
<span id="cb1-17"> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">88</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">62</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span>, </span>
<span id="cb1-18">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-04-18 00:49"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-04-25 19:18"</span>,</span>
<span id="cb1-19"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">67</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">156</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span></span>
<span id="cb1-20">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set time zone for date time variables</span></span>
<span id="cb1-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_at</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ends_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_dt"</span>)), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"America/New_York"</span>))</span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate labs data</span></span>
<span id="cb1-25">labs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x){</span>
<span id="cb1-26">  lab_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-03-01 00:00"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-05-30 00:00"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hours"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>))</span>
<span id="cb1-27">  id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(lab_time))</span>
<span id="cb1-28">  lab_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D-Dimer"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Platelet Count"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C-Reactive Protein"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lactate Dehydrogenase"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LYMPHOCYTE PERC"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Absolute Lymphocyte Count"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(lab_time), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T)</span>
<span id="cb1-29">  lab_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(lab_time), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>)</span>
<span id="cb1-30">  lab_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(lab_value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;1000"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(lab_value)))</span>
<span id="cb1-31">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(id, lab_time, lab_name, lab_value)</span>
<span id="cb1-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(df)</span>
<span id="cb1-33">}) </span></code></pre></div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">patients</span></code></pre></div>
<section id="a-tibble-5-9" class="level1">
<h1>A tibble: 5 × 9</h1>
<pre><code> id admit_dt            death_or_discharge_dt   age sex    height weight</code></pre>
<p><dbl> <dttm> <dttm> <dbl> <chr> <dbl> <dbl> 1 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male 68 199 2 104 2020-04-03 12:15:00 2020-04-29 18:34:00 25 Male 72 NA 3 106 2020-03-28 12:22:00 2020-04-05 19:18:00 49 Female 64 189 4 107 2020-04-10 18:15:00 2020-04-14 19:12:00 88 Male 62 111 5 111 2020-04-18 00:49:00 2020-04-25 19:18:00 61 Female 67 156 # … with 2 more variables: current_smoker <chr>, immunosuppressed <chr></chr></chr></dbl></dbl></chr></dbl></dttm></dttm></dbl></p>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">labs</span></code></pre></div>
</section>
<section id="a-tibble-1623-4" class="level1">
<h1>A tibble: 1,623 × 4</h1>
<pre><code>  id lab_time            lab_name                  lab_value</code></pre>
<p><int> <dttm> <chr> <chr><br>
1 100 2020-05-02 03:00:00 Platelet Count 245<br>
2 100 2020-03-20 20:00:00 C-Reactive Protein &gt;1000<br>
3 100 2020-05-15 07:00:00 C-Reactive Protein 620<br>
4 100 2020-04-29 00:00:00 Absolute Lymphocyte Count 937<br>
5 100 2020-05-02 08:00:00 Platelet Count 984<br>
6 100 2020-04-13 14:00:00 Absolute Lymphocyte Count 177<br>
7 100 2020-04-30 15:00:00 LYMPHOCYTE PERC 227<br>
8 100 2020-03-24 19:00:00 LYMPHOCYTE PERC 405<br>
9 100 2020-03-12 04:00:00 C-Reactive Protein 878<br>
10 100 2020-04-09 11:00:00 Platelet Count 711<br>
# … with 1,613 more rows</chr></chr></dttm></int></p>
</section>
<section id="tidylog" class="level1">
<h1>1. <code>tidylog</code></h1>
<p>The first line of <code>R</code> code I found most useful was actually just loading an entire package. It sounds crazy, but that’s all you have to do! You simply load the package, <code>tidylog</code>, after <code>tidyverse</code> (or <code>dplyr</code> or <code>tidyr</code>):</p>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidylog, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warn.conflicts =</span> F)</span></code></pre></div>
<p>Then, whenever you use one of the previously mentioned packages to wrangle data, <code>tidylog</code> will give you super helpful information about what just happened. For example, if you use <code>mutate</code> on a column, it will tell you how many new <code>NA</code> values were created, if any. It will also remind you which variables you removed, and will give you feedback after you’ve grouped or ungrouped by a certain variable.</p>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">patients <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb7-2">  patients <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute BMI</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bmi =</span> weight <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> height<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">703</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove the patients height and weight from the data frame</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>height, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>weight)</span></code></pre></div>
<pre><code>mutate: new variable 'bmi' (double) with 5 unique values and 20% NA</code></pre>
<pre><code>select: dropped 2 variables (height, weight)</code></pre>
<p>It’s especially helpful for joining data, because it will tell you how many rows matched in the right and left hand side of your data. In this example, we can see that about 50% of the lab values in <code>labs</code> have a match in patients – as expected. However, one patient in <code>patients</code> does not have any labs in <code>labs</code> – not good! This would be a scenario I would need to follow up with my data source (the Informatics team I work with) to figure out.</p>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">patient_labs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb10-2">  patients <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(labs)</span></code></pre></div>
<pre><code>Joining, by = "id"
left_join: added 3 columns (lab_time, lab_name, lab_value)
&gt; rows only in x 1
&gt; rows only in y (994)
&gt; matched rows 629 (includes duplicates)
&gt; =====
&gt; rows total 630</code></pre>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">patient_labs</span></code></pre></div>
</section>
<section id="a-tibble-630-11" class="level1">
<h1>A tibble: 630 × 11</h1>
<pre><code>  id admit_dt            death_or_discharge_dt   age sex   current…¹ immun…²</code></pre>
<p><dbl> <dttm> <dttm> <dbl> <chr> <chr> <chr><br>
1 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
2 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
3 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
4 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
5 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
6 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
7 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
8 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
9 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
10 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
# … with 620 more rows, 4 more variables: bmi <dbl>, lab_time <dttm>, # lab_name <chr>, lab_value <chr>, and abbreviated variable names # ¹​current_smoker, ²​immunosuppressed</chr></chr></dttm></dbl></chr></chr></chr></dbl></dttm></dttm></dbl></p>
<p><code>library(tidylog)</code> has singlehandedly helped me detect countless errors while working with rapidly changing COVID-19 data from many different sources. My coworker once summed it up perfectly by saying, “<code>tidylog</code> isn’t just a package, it’s a lifestyle.”</p>
</section>
<section id="gtsummarytbl_summary-labelledadd_variable_labels-snakecaseto_title_case" class="level1">
<h1>2. <code>gtsummary::tbl_summary()</code> + <code>labelled::add_variable_labels</code> + <code>snakecase::to_title_case</code></h1>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
efficiently labeling variables: a useful skill if you make a lot of <a href="https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw">#rstats</a> tables👩🏼‍💻<br><br>feat. labelled, snakecase, stringr &amp; gtsummary 📦s <a href="https://t.co/YmiYZEjVKS">pic.twitter.com/YmiYZEjVKS</a>
</p>
— Kat Hoffman (<span class="citation" data-cites="kat_hoffman_">@kat_hoffman_</span>) <a href="https://twitter.com/kat_hoffman_/status/1305218425732595713?ref_src=twsrc%5Etfw">September 13, 2020</a>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p><code>gtsummary</code>’s <code>tbl_summary()</code> is hands down my favorite function for making summary tables. It is so smooth and flexible to use, and it works seamlessly with the new <code>gt</code> package for making tables. You simply input a dataset containing the variables you want to summarize, and, optionally, a grouping variable to stratify those summary statistics by, and you’ll immediately have a clean and clear descriptive table!</p>
<p>In this example, I’ll use <code>tbl_summary()</code> to summarize the median and IQR or number and percent of all the demographic variables in our <code>patients</code> data set. We <em>could</em> use this code: the barebones function truly only needs a data set containing the variables of interest, and then <code>gtsummary</code> does all the formatting work:</p>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gtsummary)</span></code></pre></div>
<pre><code>
Attaching package: 'gtsummary'</code></pre>
<pre><code>The following objects are masked from 'package:tidylog':

    mutate, select</code></pre>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">patients <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># select vars of interest for tables</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(age, sex, bmi, current_smoker, immunosuppressed) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl_summary</span>(</span>
<span id="cb17-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make sure all numeric variables are reported as continuous</span></span>
<span id="cb17-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"continuous"</span>)</span>
<span id="cb17-7">  ) </span></code></pre></div>
<p>That’d be fine, but what I <em>really</em> found to be useful during the NYC outbreak was the <code>labelled</code> function. Since I was constantly presenting data to clinicians, it was important that the tables and figures I showed were clear and concise. I try to always eliminate the “ugly” variable names from my presentations and reports, as a rule… but while doing that as automatically as possible.</p>
<p>It was incredibly helpful to use <code>set_variable_labels()</code> from the <code>labelled</code> package to make the variable names ready for reporting. My favorite trick was to combine this function with the <code>to_title_case()</code> function from the <code>snakecase</code> package. The latter will take any variable of the format <strong><code>snake_case</code></strong> (i.e.&nbsp;all lowercase, with underscores between words), remove the underscores, and capitalize the first letter of each word – just like a title.</p>
<p>If you use <code>to_title_case(names(.))</code> in the <code>.labels</code> global argument of the <code>set_variable_names()</code> function, it’ll clean up most variables in an extremely intuitive and readable way. Then if there are variables (such as acronyms) that are still not labelled the way you’d prefer them to be, you can directly change them by listing the variable name and the character string you’d like it to say instead. We can do this for BMI, so it does not read “Bmi” when <code>to_title_case</code> transforms the label.</p>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">patients <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># select vars of interest for tables</span></span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(age, sex, bmi, current_smoker, immunosuppressed) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># edit variable names using labelled package</span></span>
<span id="cb18-5">  labelled<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_variable_labels</span>(</span>
<span id="cb18-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change all variable labels to "Title Case"</span></span>
<span id="cb18-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.labels =</span> snakecase<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_title_case</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(.)),</span>
<span id="cb18-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change any extra variables that are not title case, like BMI</span></span>
<span id="cb18-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bmi =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMI"</span></span>
<span id="cb18-10">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl_summary</span>(</span>
<span id="cb18-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't show missing (unknown) values</span></span>
<span id="cb18-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">missing =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no"</span>,</span>
<span id="cb18-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make sure all numeric variables are reported as continuous</span></span>
<span id="cb18-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"continuous"</span>)</span>
<span id="cb18-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bold the labels</span></span>
<span id="cb18-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bold_labels</span>()</span></code></pre></div>
<pre><code>Warning: `all_numeric()` was deprecated in gtsummary 1.3.6.
The {tidyselect} and {dplyr} packages have implemented functions to select variables by class and type, and the {gtsummary} version is now deprecated.

Use `where(is.numeric)` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.</code></pre>
<pre><code>Warning: The `fmt_missing()` function is deprecated and will soon be removed
* Use the `sub_missing()` function instead</code></pre>
<div class="cell-output-display">

<div id="uwvdhggpza" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#uwvdhggpza .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#uwvdhggpza .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uwvdhggpza .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#uwvdhggpza .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#uwvdhggpza .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uwvdhggpza .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uwvdhggpza .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#uwvdhggpza .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#uwvdhggpza .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#uwvdhggpza .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#uwvdhggpza .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#uwvdhggpza .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#uwvdhggpza .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#uwvdhggpza .gt_from_md > :first-child {
  margin-top: 0;
}

#uwvdhggpza .gt_from_md > :last-child {
  margin-bottom: 0;
}

#uwvdhggpza .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#uwvdhggpza .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#uwvdhggpza .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#uwvdhggpza .gt_row_group_first td {
  border-top-width: 2px;
}

#uwvdhggpza .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uwvdhggpza .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#uwvdhggpza .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#uwvdhggpza .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uwvdhggpza .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uwvdhggpza .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#uwvdhggpza .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#uwvdhggpza .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uwvdhggpza .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uwvdhggpza .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uwvdhggpza .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uwvdhggpza .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uwvdhggpza .gt_left {
  text-align: left;
}

#uwvdhggpza .gt_center {
  text-align: center;
}

#uwvdhggpza .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#uwvdhggpza .gt_font_normal {
  font-weight: normal;
}

#uwvdhggpza .gt_font_bold {
  font-weight: bold;
}

#uwvdhggpza .gt_font_italic {
  font-style: italic;
}

#uwvdhggpza .gt_super {
  font-size: 65%;
}

#uwvdhggpza .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#uwvdhggpza .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#uwvdhggpza .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#uwvdhggpza .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#uwvdhggpza .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#uwvdhggpza .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th"><strong>Characteristic</strong></th>
<th class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th"><strong>N = 5</strong><sup>1</sup></th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" style="font-weight: bold">Age</td>
<td class="gt_row gt_center">61 (49, 64)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" style="font-weight: bold">Sex</td>
<td class="gt_row gt_center"></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" style="text-align: left; text-indent: 10px;">Female</td>
<td class="gt_row gt_center">2 (40%)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" style="text-align: left; text-indent: 10px;">Male</td>
<td class="gt_row gt_center">3 (60%)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" style="font-weight: bold">BMI</td>
<td class="gt_row gt_center">27.3 (23.4, 30.8)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" style="font-weight: bold">Current Smoker</td>
<td class="gt_row gt_center">2 (40%)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" style="font-weight: bold">Immunosuppressed</td>
<td class="gt_row gt_center">3 (60%)</td>
</tr>
</tbody><tfoot class="gt_footnotes">
<tr class="even">
<td colspan="2" class="gt_footnote"><sup>1</sup> Median (IQR); n (%)</td>
</tr>
</tfoot>

</table>

</div>
</div>
<p>So clean and readable, with such little effort! A few other lines of code I usually add to make the tables nicer with very little effort are <code>missing = "no"</code> to the main <code>tbl_summary()</code> argument, and <code>bold_labels()</code> after.</p>
</section>
<section id="dplyrfilter-stringrstr_detect-tolower" class="level1">
<h1>3. <code>dplyr::filter()</code> + <code>stringr::str_detect()</code> + <code>tolower()</code></h1>
<p>This has been <em>such</em> a life saver when searching through very long-form COVID-19 data for a particular lab, vital sign, medication, or order of interest. I often don’t know the exact word, much less capitalization, of the string I’m looking for in a data set, but this combination of functions really saves the day.</p>
<p>Here we can use it to figure out the name of patients’ absolute lymphocyte count labs. Of course we could just do something like:</p>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(labs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lab_name))</span></code></pre></div>
<p>[1] “Absolute Lymphocyte Count” “C-Reactive Protein”<br>
[3] “D-Dimer” “Lactate Dehydrogenase”<br>
[5] “LYMPHOCYTE PERC” “Platelet Count”</p>
<p>But in my actual data sets of upwards of 50 million rows, this would return thousands of results! I discovered the easiest way to find what I was looking for was to first convert the <code>lab_name</code> to all lowercase using <code>tolower(lab_name)</code>, and then search for strings using <code>str_detect()</code>, only keeping rows that matched using <code>filter()</code> and then looking at <em>those</em> unique values using <code>pull()</code>* and <code>unique()</code>.</p>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">labs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tolower</span>(lab_name), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lymph"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(lab_name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>() </span></code></pre></div>
<pre><code>filter: removed 1,078 rows (66%), 545 rows remaining</code></pre>
<p>[1] “Absolute Lymphocyte Count” “LYMPHOCYTE PERC”</p>
<p>Although you don’t have to use pipes to do this, I often used those filtered rows for other exploratory data checks, such as looking at the units or distributions of the tests, so it was helpful to have it in the “tidy” format.</p>
<p>*<code>pull()</code> is a somewhat lesser known function of <code>dplyr</code> that extracts a column as a dimensionless vector from a data frame, rather than <code>select</code>ing a single column, which <code>R</code> still treats as a data frame.</p>
</section>
<section id="readrparse_number" class="level1">
<h1>4. <code>readr::parse_number()</code></h1>
<p>This is handy whenever I’m dealing with test results that can contain values above or below a detection range. Instead of using <code>as.numeric()</code> on a vector, I’ve switched to always using <code>readr</code>’s <code>parse_number()</code> function. This is because <code>as.numeric()</code> will turn values with meaningful information (such as “&gt;1,000”) into <code>NA</code>.</p>
<p>Let’s look at this with the D-Dimer values in <code>patients_labs</code>. If you’ve been keeping up with any of the cytokine storm in COVID-19 headlines, you’ll know that D-Dimers are often sky-high in severely ill COVID-19 patients. So high, that they’re sometimes out of detectable ranges*!</p>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">patient_labs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tolower</span>(lab_name), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dimer"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb24-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(lab_name, lab_value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb24-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lab_value_numeric =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(lab_value),</span>
<span id="cb24-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lab_value_parsed_number =</span> readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(lab_value))</span></code></pre></div>
<pre><code>filter: removed 536 rows (85%), 94 rows remaining</code></pre>
<pre><code>Warning in mask$eval_all_mutate(quo): NAs introduced by coercion</code></pre>
</section>
<section id="a-tibble-94-4" class="level1">
<h1>A tibble: 94 × 4</h1>
<p>lab_name lab_value lab_value_numeric lab_value_parsed_number <chr> <chr> <dbl> <dbl> 1 D-Dimer 642 642 642 2 D-Dimer 531 531 531 3 D-Dimer 674 674 674 4 D-Dimer 751 751 751 5 D-Dimer 436 436 436 6 D-Dimer 181 181 181 7 D-Dimer 107 107 107 8 D-Dimer &gt;1000 NA 1000 9 D-Dimer 251 251 251 10 D-Dimer 148 148 148 # … with 84 more rows</dbl></dbl></chr></chr></p>
<p>When we use <code>as.numeric()</code> to switch the values from strings, we lose those out of range values. Those are our sickest patients, so if we continue with the analysis, we’ll definitely bias our results. However, if we use <code>parse_number()</code> we can at least evaluate those patients conservatively, using the upper bound of the test detection range.</p>
<p>*Detectable range is usually &gt;55,000 ng/mL, but for the sake of demonstration, let’s pretend it’s &gt;1,000 of the mystery units in my fake data set.</p>
</section>
<section id="lubridates-within-interval-hours" class="level1">
<h1>5. <code>lubridate</code>’s <code>%within%</code> + <code>interval()</code> + <code>hours()</code></h1>
<p>Last but not least is two beautiful functions from the <code>lubridate</code> package. If you ever find yourself working with time-stamped data, you should definitely check it out. I tried multiple functions and packages at the beginning of the outbreak, and in the end, nothing compared to <code>lubridate</code>, at least for my use-cases.</p>
<p>The <code>%within%</code> function allows you to determine whether a time value (stored in <code>R</code> as a <code>POSIXct</code> object) falls within a window of time. You can specify this window of time using the <code>interval()</code> function. If you have only the start or the end time of the window of interest, you can add or subtract using supplemental functions like <code>days()</code> or <code>hours()</code>.</p>
<p>For my COVID-19 research, the pulmonologists were often interested in snapshots of patients relative to a certain time in their disease course, for example, within the first 24 hours after intubation. The <code>lubridate</code> functions made it super easy to extract the labs, vital signs, or other information that happened relative to another date.</p>
<p>Here’s how we could use the aforementioned functions in the <code>patient_labs</code> dataset we made previously. We can extract all the labs relative to 24 hours after the hospital admission date.</p>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span></code></pre></div>
<pre><code>
Attaching package: 'lubridate'</code></pre>
<pre><code>The following objects are masked from 'package:base':

    date, intersect, setdiff, union</code></pre>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">patient_labs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb30-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(lab_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%within%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span>(admit_dt, admit_dt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">days</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span></code></pre></div>
<pre><code>filter: removed 623 rows (99%), 7 rows remaining</code></pre>
</section>
<section id="a-tibble-7-11" class="level1">
<h1>A tibble: 7 × 11</h1>
<pre><code> id admit_dt            death_or_discharge_dt   age sex    current…¹ immun…²</code></pre>
<p><dbl> <dttm> <dttm> <dbl> <chr> <chr> <chr><br>
1 100 2020-03-21 00:10:00 2020-05-13 12:10:00 64 Male Yes No<br>
2 104 2020-04-03 12:15:00 2020-04-29 18:34:00 25 Male Yes No<br>
3 106 2020-03-28 12:22:00 2020-04-05 19:18:00 49 Female No Yes<br>
4 106 2020-03-28 12:22:00 2020-04-05 19:18:00 49 Female No Yes<br>
5 106 2020-03-28 12:22:00 2020-04-05 19:18:00 49 Female No Yes<br>
6 106 2020-03-28 12:22:00 2020-04-05 19:18:00 49 Female No Yes<br>
7 107 2020-04-10 18:15:00 2020-04-14 19:12:00 88 Male No Yes<br>
# … with 4 more variables: bmi <dbl>, lab_time <dttm>, lab_name <chr>, # lab_value <chr>, and abbreviated variable names ¹​current_smoker, # ²​immunosuppressed</chr></chr></dttm></dbl></chr></chr></chr></dbl></dttm></dttm></dbl></p>
<p>Perfect! I could go on to informatively join this data to another using <code>tidylog</code>, make tables with clean labels using <code>tbl_summary()</code>, <code>set_variable_labels()</code>, and <code>to_title_case()</code>, find further labs of interest with <code>filter()</code>, <code>str_detect()</code>, and <code>tolower()</code>, and make the lab values numeric with <code>parse_number()</code>… the possibilities are endless!</p>
<p>I hope you enjoyed a quick insight into the data side of COVID-19 research, and/or perhaps picked up some useful function combinations for your own applied work with <code>R</code>.</p>


</section>

 ]]></description>
  <category>programming</category>
  <guid>www.khstats.com/blog/covid-functions/index.html</guid>
  <pubDate>Sat, 11 Jul 2020 02:13:14 GMT</pubDate>
  <media:content url="www.khstats.com/img/covid_fx/gtsummary_tweet-crop.png" medium="image" type="image/png" height="74" width="144"/>
</item>
<item>
  <title>Patient Treatment Timelines for Longitudinal Survival Data</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/trt-timelines/trt-timelines.html</link>
  <description><![CDATA[ 




<p>A ggplot code walkthrough for making treatment timelines or “swimmer plots” for longitudinal time-to-event data on 1) a categorical covariate and 2) a continuous covariate organized by missingness frequency.</p>
<!--more-->
<p><strong><em>November 3, 2019.</em></strong></p>
<p>I am a biostatistician at a research university, and I often find myself working with longitudinal survival data. As with any data analysis, I need to examine the quality of my data before deciding which statistical methods to implement.</p>
<p>This post contains reproducible examples for how I prefer to visually explore survival data containing longitudinal exposures or covariates. I create a “treatment timeline” for each patient, and the end product looks something like this:</p>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="960"></p>
</div>
<p>Each line represents one patient, and each square represents a measurement at a specified point. I find these graphs useful to look for patterns or discrepancies in follow up times, treatment, and missingness. They also allow me to verify that my coding is correct as I move through different data manipulations for my analyses.</p>
<p>For the following examples I generate longitudinal survival data sets. I skip over how I made this data because it’s not the focus of this post, but if you have questions about the data generation please let me know. In general, I am trying to work from the point in a survival data analysis where you’ve already calculated each individual’s time to event.</p>
<section id="example-1-binary-treatment" class="level1">
<h1>Example 1: Binary Treatment</h1>
<p>To make these charts, my first step is to load the package <code>tidyverse</code>, since I use functions from <code>dplyr</code>, <code>tidyr</code>, <code>forcats</code>, and <code>ggplot2</code>.</p>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
<p>Here is the data generation code. If you’re interested in how I made it, you can check the comments, but if not, <strong>I recommend just copying and pasting into your <code>R</code> console to try the plotting code.</strong></p>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb2-2">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The data sets I make these visualizations for are typically 100-500 patients in size, but for space purposes I'll set my n to only 50.</span></span>
<span id="cb2-3">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.rows =</span> n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># empty data frame / tibble with n rows</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># patient ids are 1-n</span></span>
<span id="cb2-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_trt_prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># randomly generate a treatment probability for each patient so we can see patterns</span></span>
<span id="cb2-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">months_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># randomly generate length of time in the study</span></span>
<span id="cb2-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># death randomly occurs at any time point. Obviously an unrealistic assumption. :)</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pt_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># group by patient so we can do more data manipulation</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">complete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">months_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(months_followup), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add i^n all the months patients are in the study</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(pt_trt_prob, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.direction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fill in the treatment probability I made earlier so I can use this to add treatment for every time point</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># no longer need patients grouped</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, pt_trt_prob<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fill in treatment for everyone based on their treatment probability</span></span>
<span id="cb2-14">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace_na</span>(death, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># also fill in death</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pt_id, months_followup, trt, death) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove leftover columns from data generation</span></span></code></pre></div>
<p>Let’s look at the data. It’s in “long” format with patient ID’s repeating for each <code>month_followup</code> they were in my (fake) study. At every month, we know whether or not they were on the treatment, and whether they died at that time point. This first example does not contain any missingness.</p>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(dat))</span></code></pre></div>
<div class="cell-output-display">
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">pt_id</th>
<th style="text-align: right;">months_followup</th>
<th style="text-align: left;">trt</th>
<th style="text-align: right;">death</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: left;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: left;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: left;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">3</td>
<td style="text-align: left;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">4</td>
<td style="text-align: left;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">5</td>
<td style="text-align: left;">1</td>
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>
</div>
<p>We can now plot our data in a very basic way. We really only need to specify in the <code>aes</code>thetics that the <code>x</code>-axis is time, the <code>y</code>-axis is subject IDs, the <code>col</code>or should correspond to treatment, and <em>our lines should be <code>group</code>ed together by subject</em>. Don’t forget that last one! Then we can say we want <code>geom_line</code> to make a base timeline for each subject, and the points on the timeline should be squares (<code>shape = 15</code> in the <code>geom_point</code> mapping function).</p>
<p>Et voilà! A cute patient treatment timeline.</p>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> months_followup, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> trt)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
<p>Okay, it’s not <em>that</em> cute. But that little bit of code is really the core of the plot! If you want to add markers of death (or any other event) and rearrange by length of follow up time it just takes a little bit of extra data manipulation and one additional line of <code>ggplot2</code> code.</p>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pt_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a new column with all patients last follow up visit</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last_month_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(months_followup), </span>
<span id="cb5-5">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new variable for month that patients died, if they died</span></span>
<span id="cb5-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month_death =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(death <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> last_month_followup, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-7">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reorder pt id by last month of follow up (highest to lowest)</span></span>
<span id="cb5-8">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># without fct_rev, chart is arranged in opposite direction (lowest to highest)</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(pt_id, last_month_followup))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> months_followup, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> trt)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add in a new mapping layer of points that correspond to death</span></span>
<span id="cb5-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> month_death, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) </span></code></pre></div>
<pre><code>Warning: Removed 515 rows containing missing values (geom_point).</code></pre>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
<p>Don’t worry about the warning for removing missing values – it’s because we have <code>NA</code>s at most months for our <code>month_death</code>, so <code>geom_point</code> doesn’t know where to put an ‘x’ marker.</p>
<p>Finally, let’s work on making the plot a bit nicer to look at:</p>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pt_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last_month_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(months_followup), </span>
<span id="cb7-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month_death =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(death <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> last_month_followup, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(pt_id, last_month_followup)),</span>
<span id="cb7-7">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make the treatment variable labels nicer</span></span>
<span id="cb7-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(trt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> months_followup, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> trt)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> month_death, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Months of Follow-Up"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient ID"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treatment"</span>,</span>
<span id="cb7-15">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient Treatment Timeline"</span>,</span>
<span id="cb7-16">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x indicates month of patient death"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># edit legend box and make patient ids small</span></span>
<span id="cb7-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>),</span>
<span id="cb7-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.direction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"horizontal"</span>,</span>
<span id="cb7-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove extra space around timeline</span></span>
<span id="cb7-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the color of the lines and points</span></span>
<span id="cb7-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodgerblue"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick1"</span>))</span></code></pre></div>
<pre><code>Warning: Removed 515 rows containing missing values (geom_point).</code></pre>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
<p>I have never made one of these plots for publication, so I don’t mind that the subtitle contains legend information. If you wanted to have the <code>month_death</code> markers in a legend, you could change:</p>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> month_death, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<p>to:</p>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> month_death, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> month_death), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span></code></pre></div>
</section>
<section id="example-2-continuous-covariate-with-missingness" class="level1">
<h1>Example 2: Continuous Covariate with Missingness</h1>
<p>We can follow the very same steps for making a timeline for a continuous variable.</p>
<p>Again, here is the data generation code so you can make these plots yourself:</p>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">dat_cc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.rows =</span> n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>(),</span>
<span id="cb11-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">months_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># random months of follow up</span></span>
<span id="cb11-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_cov_mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># random mean of a patient's covariate measures</span></span>
<span id="cb11-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># random death</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pt_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">complete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">months_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(months_followup), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(pt_cov_mean, death, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.direction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last_month_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(months_followup),</span>
<span id="cb11-11">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(death <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> last_month_followup, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cov =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>(), pt_cov_mean, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># everyone's covariates are close to their original mean (use to see patterns later)</span></span></code></pre></div>
<p>This time I am incorporating missingness at a patient-level on my simulated covariate measurements to show how we can use the plots to look at potential patterns in missingness.</p>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">dat_cc_samp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_cc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">idx =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_frac</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> pt_cov_mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sample 40% of data, with weights for the sample determined by the patient's mean covariate. This would mean patients with a higher mean covariate measure are more likely to have missing data.</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(idx)</span>
<span id="cb12-5"></span>
<span id="cb12-6">dat_cc_miss  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat_cc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cov =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> dat_cc_samp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>,</span>
<span id="cb12-8">                         <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> cov)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pt_id, months_followup, cov, death)</span></code></pre></div>
<p>Looking again at the data we’ll be using:</p>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(dat_cc_miss))</span></code></pre></div>
<div class="cell-output-display">
<table class="table">
<thead>
<tr class="header">
<th style="text-align: right;">pt_id</th>
<th style="text-align: right;">months_followup</th>
<th style="text-align: right;">cov</th>
<th style="text-align: right;">death</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">91.69544</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NA</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">NA</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: right;">2</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">156.57317</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">NA</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: right;">2</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">172.23156</td>
<td style="text-align: right;">1</td>
</tr>
</tbody>
</table>
</div>
<p>We can plot the data and see this missingness with gray timeline points and lines:</p>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">dat_cc_miss <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pt_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last_month_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(months_followup), </span>
<span id="cb14-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month_death =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(death <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> last_month_followup, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(pt_id), last_month_followup))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> months_followup, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id,</span>
<span id="cb14-8">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cov)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> month_death, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Months of Follow-Up"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient ID"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariate"</span>,</span>
<span id="cb14-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient Timelines: Continuous Covariate"</span>,</span>
<span id="cb14-15">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x indicates month of patient death, gray indicates missing covariate"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>),</span>
<span id="cb14-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb14-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.direction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"horizontal"</span>,</span>
<span id="cb14-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodgerblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick1"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>,</span>
<span id="cb14-22">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)) </span></code></pre></div>
<pre><code>Warning: Removed 143 rows containing missing values (geom_point).</code></pre>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
<p>Alternatively, we could rearrange our timelines by the number of measures we have for each patient’s <code>cov</code>ariate of interest by making a new column containing the <code>sum(!is.na(cov))</code> and rearranging our <code>pt_id</code> by that column.</p>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">dat_cc_miss <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pt_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last_month_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(months_followup),</span>
<span id="cb16-4">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a column containing how many measures we have for each patient</span></span>
<span id="cb16-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_measures =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(cov))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb16-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reorder IDs by number of measures we have for each patient</span></span>
<span id="cb16-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(pt_id), n_measures)),</span>
<span id="cb16-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month_death =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(death <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> last_month_followup, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> months_followup, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id,</span>
<span id="cb16-12">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cov)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> month_death, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Months of Follow-Up"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient ID"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariate"</span>,</span>
<span id="cb16-18">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient Timelines: Continuous Covariate"</span>,</span>
<span id="cb16-19">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x indicates month of patient death, gray indicates missing covariate"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>),</span>
<span id="cb16-21">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb16-22">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.direction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"horizontal"</span>,</span>
<span id="cb16-23">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodgerblue"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick1"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>,</span>
<span id="cb16-26">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)) </span></code></pre></div>
<pre><code>Warning: Removed 143 rows containing missing values (geom_point).</code></pre>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="672"></p>
</div>
<p>From this plot we can start to see that patients with more missing measurements have higher covariate measurements. This becomes clearer if we rearrange patients by their <em>proportion</em> of non-missing measurements.</p>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">dat_cc_miss <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pt_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last_month_followup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(months_followup),</span>
<span id="cb18-4">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the proportion is the total number of measures divided by the total months of followup</span></span>
<span id="cb18-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop_measures =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(cov))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>last_month_followup) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reorder IDs by proportion of measures we have for each patient</span></span>
<span id="cb18-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(pt_id), prop_measures)),</span>
<span id="cb18-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month_death =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(death <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> last_month_followup, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> months_followup, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id,</span>
<span id="cb18-11">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> pt_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cov)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> month_death, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pt_id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Months of Follow-Up"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient ID"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariate"</span>,</span>
<span id="cb18-17">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient Timelines: Continuous Covariate"</span>,</span>
<span id="cb18-18">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x indicates month of patient death, gray indicates missing covariate"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># move legend to the side by removing legend location</span></span>
<span id="cb18-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodgerblue"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick1"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>,</span>
<span id="cb18-23">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)) </span></code></pre></div>
<pre><code>Warning: Removed 143 rows containing missing values (geom_point).</code></pre>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="768"></p>
</div>
<p>If this were my real data, I would follow up with my research collaborators for more information on the missingness mechanism.</p>
<p>Please let me know if you have questions or a suggestion for a data set. Happy treatment timeline plotting!</p>
<hr>
<section id="session-info" class="level3">
<h3 class="anchored" data-anchor-id="session-info">Session info</h3>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<p>R version 4.1.3 (2022-03-10) Platform: x86_64-apple-darwin17.0 (64-bit) Running under: macOS Catalina 10.15.7</p>
<p>Matrix products: default BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib</p>
<p>locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8</p>
<p>attached base packages: [1] stats graphics grDevices utils datasets methods base</p>
<p>other attached packages: [1] forcats_0.5.1 stringr_1.4.1 dplyr_1.0.9 purrr_0.3.4<br>
[5] readr_2.1.2 tidyr_1.2.0 tibble_3.1.8 ggplot2_3.3.6<br>
[9] tidyverse_1.3.1</p>
<p>loaded via a namespace (and not attached): [1] tidyselect_1.1.2 xfun_0.32 haven_2.5.0 colorspace_2.0-3 [5] vctrs_0.4.1 generics_0.1.3 htmltools_0.5.2 yaml_2.3.5<br>
[9] utf8_1.2.2 rlang_1.0.4 pillar_1.8.1 glue_1.6.2<br>
[13] withr_2.5.0 DBI_1.1.2 dbplyr_2.1.1 modelr_0.1.8<br>
[17] readxl_1.4.0 lifecycle_1.0.1 munsell_0.5.0 gtable_0.3.0<br>
[21] cellranger_1.1.0 rvest_1.0.2 htmlwidgets_1.5.4 evaluate_0.15<br>
[25] labeling_0.4.2 knitr_1.38 tzdb_0.3.0 fastmap_1.1.0<br>
[29] cabinets_0.6.0 fansi_1.0.3 highr_0.9 broom_0.8.0<br>
[33] backports_1.4.1 scales_1.2.1 jsonlite_1.8.0 farver_2.1.1<br>
[37] fs_1.5.2 gridExtra_2.3 hms_1.1.1 digest_0.6.29<br>
[41] stringi_1.7.8 grid_4.1.3 cli_3.3.0 tools_4.1.3<br>
[45] magrittr_2.0.3 crayon_1.5.1 pkgconfig_2.0.3 ellipsis_0.3.2<br>
[49] xml2_1.3.3 reprex_2.0.1 lubridate_1.8.0 assertthat_0.2.1 [53] rmarkdown_2.13 httr_1.4.2 rstudioapi_0.13 R6_2.5.1<br>
[57] compiler_4.1.3</p>


</section>
</section>

 ]]></description>
  <category>programming</category>
  <guid>www.khstats.com/blog/trt-timelines/trt-timelines.html</guid>
  <pubDate>Thu, 28 Nov 2019 05:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/trt-timelines/swimmer-plot-crop.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Stats on Drugs: An Interview with a Pharmaceutical CRO Biostatistician</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/ditl/pharma-cro.html</link>
  <description><![CDATA[ 




<p>An interview with my MS Biostatistics classmate Kim Hirschhorn about her experience as a biostatistician at a Contract Research Organization (CRO) for pharmaceutical companies.</p>
<!--more-->
<p><img src="www.khstats.com/img/kim1.png" class="img-fluid"></p>
<p>Earlier this year I wrote my first blog post, <a href="https://www.khstats.com/blog/ditl-biostats/">“A Day in the Life of a Biostatistician,”</a> documenting the granular details of my work as an early career academic research biostatistician. I’m excited to announce I am turning that post into a “day in the life” series in which I interview other biostatisticians with differing roles. My hope is that it will enlighten anyone interested in the field of biostatistics, and especially help undergraduate and current biostatistics Masters students make informed decisions about their careers.</p>
<p>My first interviewee is Kim Hirschhorn, a former classmate and good friend from my time at the University of Michigan School of Public Health. Kim is an avid reality TV show watcher, loves Eggo waffles and Hostess Ho-Hos, and is a great statistician; so great, professors were often confused as to why she wasn’t planning to pursue a PhD. Kim, however, has always been adamant that she doesn’t need a PhD to have the career she wants.</p>
<p>Kim’s determination to find a job which allowed for ample career growth with “only” an MS in Biostatistics paid off. After graduating in 2018, she chose to work as a biostatistician at PRA Health Sciences, a Contract Research Organization (CRO) for pharmaceutical companies. Biostatistician roles at CROs offer excellent career trajectory for Masters-level statisticians and don’t have a job title ceiling as some careers in statistics notoriously do for those without a PhD. Additionally, it’s a lucrative job option for a Masters-level biostatistician. (🤑!) For more information on salaries of early career statisticians you can check out the <a href="https://magazine.amstat.org/blog/2019/08/01/mastergraduate/">American Statistical Association’s recent survey of 2018 Masters in Statistics graduates</a>. But, to learn more about what Kim actually does as a biostatistician at a pharmaceutical CRO, read on!</p>
<p><strong>Kat: Thanks for taking the time to chat, Kim! Can you tell me where you work and what the mission of your company is?</strong></p>
<p><em>Kim: I work at the Chicago office of a large CRO called PRA Health Sciences. PRA stands for Pharmaceutical Research Associates, and our primary responsibility is to run clinical trials for pharmaceutical companies. This includes everything from planning the study at an administrative level – such as identifying physicians to recruit patients and administer drug therapies – to collecting data like patients’ disease progression and adverse events, analyzing and summarizing the results, and submitting requests for the successful trials to be approved by the Food and Drug Administration (FDA). After a pharmaceutical company has researched and developed a potential new drug, we partner with them to implement the various phases of clinical trials necessary to test that drug.</em></p>
<p><strong>Whoa, sometimes I forget about all the steps in a clinical trial. Before we go any further, can you give us a quick explanation about what those phases of clinical trials mean?</strong></p>
<p><em>There are three main phases: Phase I, II, and III. In general, Phase I clinical trials check whether a drug is safe to administer. Sometimes this also involves testing which dosage of a drug is safe – or at least not overwhelmingly toxic – to the body. Phase I trials are usually done on a small group of patients. Phase II trials are done on a larger group of patients and focus on whether the drug is effective, or in other words, whether it can actually fix whatever health problem the pharmaceutical company had in mind when developing it. Most drugs fail in Phase II.</em></p>
<p><em>If a drug does move onto a Phase III trial, its performance in comparison to the current standard of care (which is often another drug on the market) is evaluated. In both Phase II and III, patients are randomized into treatment and control groups and typically neither physicians nor patients know which treatment is administered. Even patients who are not receiving a treatment will receive a sugar pill, or placebo drug. Oftentimes a clinical trial’s aims will fall somewhere between two phases. For example, I’ve worked on Phase 1b/2a trials that collect information on safety, determine the recommended dose, and then evaluate the drug’s efficacy.</em></p>
<p><strong>I see, so which of those phases do you work on?</strong></p>
<p><em>I have been a Biostatistician I for a bit over a year now, so that means I am the lead biostatistician on a few simple Phase I trials. There is usually not much statistical testing occurring here; it’s all about how many patients have an adverse response to the drug. Since I am still in the most junior biostatistician role, a lot of my time is spent doing biostatistical support for Phase II and III trials, where more senior biostatisticians oversee my work and pre-specify the analyses. The longer I stay at my job, the more responsibilities I will have and the more complex studies I will lead.</em></p>
<p><strong>What’s involved in leading a study, even a “small and simple” phase I? How is that different from the work you do as “biostatistical support” on the Phase II and III trials?</strong></p>
<p><em>When I am the lead of a study, I am meeting with members of the pharmaceutical company and working with them to develop a statistical analysis plan. Once the clinical trial starts and I begin to receive data, I work with programmers to ensure everything that needs to be done for the analysis is completed in the time allotted by that trial’s budget. Since the studies I am leading now are early phase, I am in charge of doing all the statistical analyses and reporting the results back to the pharmaceutical company. </em></p>
<p><em>In contrast, when I am biostatistical support, I am mostly executing analyses already specified in a statistical analysis plan. This typically involves writing macros in the statistical programming language <a href="https://www.sas.com/en_us/software/stat.html">SAS</a> to ultimately produce what is dozens of outputs. A large portion of my time as a junior biostatistician is spent figuring out the best way to present that huge amount of data and results in a comprehensible way. Even before I have data from a clinical trial, I have to plan out detailed tables and prepare a shell document for when the data is ready for analysis.</em></p>
<p><strong>Who are you working with in your day-to-day roles?</strong></p>
<p><em>I get assignments from my manager, and then work with the lead biostatisticians on each trial. It is standard in the pharmaceutical industry that all analyses must be independently reproduced. This usually means the lead biostatistician is redoing my analysis without looking at my code, so sometimes I have to work closely with him or her to figure out why our results are not matching. Besides that, I frequently collaborate with the data programmers and statistical programmers in charge of the data for the trials I am working on.</em></p>
<p><em>Data programmers are in charge of taking raw data from the trials, checking it for inconsistencies, and putting it into a standardized form for statistical programmers. Statistical programmers then take those standardized data sets, derive many new variables from those initially collected for each patient, and produce hundreds of tables and figures summarizing the data. In some cases they also help prepare the data for my analyses, for example, they might write code to calculate the number of days or months until each patient experienced disease progression so that I can use that information for statistical models.</em></p>
<p><em>If there is a problem with the data when I am running a model, I ask the statistical programmer to check his or her code, and if there is no issue there, the data programmer looks at their code. If necessary, the data programmer may go back to the clinical sites who are collecting the data from patients and ask them to correct any missing information or inconsistencies.</em></p>
<p><strong>Sounds like your data is in pretty good shape when it arrives to you, then! Earlier you mentioned writing macros in SAS. Does everyone use SAS? Could you use R or another programming language if you wanted?</strong></p>
<p><em>I have used R for a few side analyses, such as a data mining analysis. However, the industry standard for pharmaceuticals has always been SAS. I don’t foresee that changing anytime soon. Although a huge benefit of R is that it is free and open source software, meaning anyone can contribute code in a package, SAS has the advantage that if you run a certain type of statistical model, you can be absolutely sure that is what ran on your data. Because SAS is a paid software, it is liable for what it says it is doing, and there is always support on hand if you have questions about errors or results you are getting from any given data procedure.</em></p>
<p><strong>What are your hours like? What sort of flexibility do you have for vacation, or working remotely?</strong></p>
<p><em>I usually get in at 8:15 and leave somewhere between 4:45 and 5:15. I do get a lot of vacation days, with the caveat that if there is a deliverable deadline for a project I’m working on, I may not be able to take my vacation during that time. As for working remotely, it’s an option I have as-needed, such as if I have a doctor’s appointment. The job can definitely be done 100% remotely, and in fact many members of the company work remotely, but it’s not really an option for a Biostatistician I to do all the time because we rely so heavily on our senior biostatisticians. I prefer that, though - it’s easier for me to work in the office!</em></p>
<p><strong>How will your roles and responsibilities change as you progress as a biostatistician at a CRO?</strong></p>
<p><em>When I said a lot of my time is spent working on table shells and report planning, I think it’s worth acknowledging that that is not a very exciting activity. However, as a Biostatistician I progresses to Biostatistician II, Senior Biostatistician, Principal Biostatistician, Senior Principal Biostatistician, etc., a lot of those more mundane (in my opinion) tasks decrease. You are in charge of much more complex studies and specifying the statistical analyses for that clinical trial. The work also naturally becomes more managerial.</em></p>
<p><em>Being in charge of a trial means meeting with both external clients and internal company leadership, setting timelines for data/statistical programmers and junior biostatisticians, answering questions that come up about data and analyses, maintaining oversight of the hours each team member is spending on the project, and tracking the corresponding budget carefully. As biostatisticians progress in the career ladder at a CRO, they have some flexibility in how much data they actually analyze on a day-to-day basis.</em></p>
<p><strong>What made you decide to take this position at a CRO over your other offers?</strong></p>
<p><em>Well of course it’s not all about money, but this was one of the highest offers I received, so that helped. The potential for career growth was also very appealing to me. Typically after about 4-5 years you are a Senior Biostatistician and qualified to lead any study. But, you can lead studies long before this if the pharmaceutical company agrees you are qualified to do so. I really like that career progression at a pharmaceutical CRO is very much about experience and skills, as opposed to whether or not you hold a PhD. This is often not the case if you work directly for a pharmaceutical company.</em></p>
<p><strong>Finally, what made you choose to enter the field of Biostatistics?</strong></p>
<p><em>I have always been drawn to a career in public health. During my first year at the University of Illinois, I was a stereotypical freshman pre-med student. I ultimately changed my mind about medical school and got a Bachelor’s degree in statistics, but I still took several epidemiology and biology classes just because I found them interesting. Math has always been my strongest subject, but I wanted to find a way to combine it with my other interests. After doing a fair share of Googling, I found the field of Biostatistics. I met with the head of U of I’s Statistics MS program, and he shared his experience of working in industry as a biostatistician before becoming a professor. He spoke very highly of the field and gave me a lot of great information on the types of careers I could have with a Masters in Statistics or Biostatistics. I was pretty much sold after that meeting.</em></p>
<p><strong>Looking back, are you happy with your decision to do a Masters in Biostatistics, rather than Statistics or Applied Statistics?</strong></p>
<p><em>Yes, I’m really happy I decided on a Masters in Biostatistics. Throughout my program, our applied problem sets were always related to medicine or healthcare in some way, and it was easy for me to take health-specific statistics classes, such as a clinical trials methodology course. Since I was pretty sure I wanted to go into healthcare, I think biostatistics was a great decision for me, because a Masters in Biostatistics shows my passion for the field and may give me an edge over similar applicants who have a more general Masters in Statistics or Applied Statistics. I still find public health to be the most interesting sector to practice statistics in, so I think the degree will always be to my advantage.</em></p>
<p><strong>Thanks so much for chatting, Kim!</strong></p>
<p>If you have other questions for Kim, or if there are careers within biostatistics you’d like to hear about, feel free to email me and let me know.</p>
<p>All the best,</p>
<p>Kat</p>



 ]]></description>
  <category>career</category>
  <guid>www.khstats.com/blog/ditl/pharma-cro.html</guid>
  <pubDate>Sun, 06 Oct 2019 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/img/kim1-crop.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Using {sl3} for superlearning</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/sl/sl.html</link>
  <description><![CDATA[ 




<p>A short and sweet guide to using the R package {sl3} for superlearning. This is part of a tutorial created for an R Ladies NYC Talk in 2019.</p>
<!--more-->
<p><img src="www.khstats.com/img/sl3/slide_deck.png" class="img-fluid"> <strong>January 10, 2020.</strong></p>
<p>In September 2019, I gave an R-Ladies NYC presentation about using the package <code>sl3</code> to implement the superlearner algorithm for predictions. You can download the slides for it <a href="https://github.com/kathoffman/sl3-demo/raw/master/superlearning_slides_no_animation.pdf">here</a>. This post is a modification to the original demo I gave.</p>
<p>For a more in-depth background on what the superlearner algorithm is, please see my more <a href="khstats.com/blog/sl/sl">recent blog post</a>.</p>
<section id="step-0-load-your-libraries-set-a-seed-and-load-the-data" class="level1">
<h1>Step 0: Load your libraries, set a seed, and load the data</h1>
<p>You’ll likely need to install <code>sl3</code> from the <code>tlverse</code> github page, as it was not yet on CRAN at the time of writing this post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#devtools::install_github("tlverse/sl3")</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sl3)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'dplyr'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:stats':

    filter, lag</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span></code></pre></div>
</div>
<p>We will use the same WASH Benefits data set as the TLverse does in their <a href="https://tlverse.org/tlverse-handbook/">Hitchhiker’s Guide</a>. We will be predicting children in rural Kenya and Bengladesh’s weight to height z-scores.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">washb_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/tlverse/tlverse-data/master/wash-benefits/washb_data.csv"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(washb_data))</span></code></pre></div>
<div class="cell-output-display">

<div id="jsgbozvhxc" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#jsgbozvhxc .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#jsgbozvhxc .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#jsgbozvhxc .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#jsgbozvhxc .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#jsgbozvhxc .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#jsgbozvhxc .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#jsgbozvhxc .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#jsgbozvhxc .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#jsgbozvhxc .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#jsgbozvhxc .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#jsgbozvhxc .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#jsgbozvhxc .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#jsgbozvhxc .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#jsgbozvhxc .gt_from_md > :first-child {
  margin-top: 0;
}

#jsgbozvhxc .gt_from_md > :last-child {
  margin-bottom: 0;
}

#jsgbozvhxc .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#jsgbozvhxc .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#jsgbozvhxc .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#jsgbozvhxc .gt_row_group_first td {
  border-top-width: 2px;
}

#jsgbozvhxc .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#jsgbozvhxc .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#jsgbozvhxc .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#jsgbozvhxc .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#jsgbozvhxc .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#jsgbozvhxc .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#jsgbozvhxc .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#jsgbozvhxc .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#jsgbozvhxc .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#jsgbozvhxc .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#jsgbozvhxc .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#jsgbozvhxc .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#jsgbozvhxc .gt_left {
  text-align: left;
}

#jsgbozvhxc .gt_center {
  text-align: center;
}

#jsgbozvhxc .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#jsgbozvhxc .gt_font_normal {
  font-weight: normal;
}

#jsgbozvhxc .gt_font_bold {
  font-weight: bold;
}

#jsgbozvhxc .gt_font_italic {
  font-style: italic;
}

#jsgbozvhxc .gt_super {
  font-size: 65%;
}

#jsgbozvhxc .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#jsgbozvhxc .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#jsgbozvhxc .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#jsgbozvhxc .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#jsgbozvhxc .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#jsgbozvhxc .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">whz</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">tr</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">fracode</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">month</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">aged</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">sex</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">momage</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">momedu</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">momheight</th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th">hfiacat</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">Nlt18</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">Ncomp</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">watmin</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">elec</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">floor</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">walls</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">roof</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_wardrobe</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_table</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_chair</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_khat</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_chouki</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_tv</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_refrig</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_bike</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_moto</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_sewmach</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">asset_mobile</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right">0.00</td>
<td class="gt_row gt_left">Control</td>
<td class="gt_row gt_left">N05265</td>
<td class="gt_row gt_right">9</td>
<td class="gt_row gt_right">268</td>
<td class="gt_row gt_left">male</td>
<td class="gt_row gt_right">30</td>
<td class="gt_row gt_left">Primary (1-5y)</td>
<td class="gt_row gt_right">146.40</td>
<td class="gt_row gt_left">Food Secure</td>
<td class="gt_row gt_right">3</td>
<td class="gt_row gt_right">11</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-1.16</td>
<td class="gt_row gt_left">Control</td>
<td class="gt_row gt_left">N05265</td>
<td class="gt_row gt_right">9</td>
<td class="gt_row gt_right">286</td>
<td class="gt_row gt_left">male</td>
<td class="gt_row gt_right">25</td>
<td class="gt_row gt_left">Primary (1-5y)</td>
<td class="gt_row gt_right">148.75</td>
<td class="gt_row gt_left">Moderately Food Insecure</td>
<td class="gt_row gt_right">2</td>
<td class="gt_row gt_right">4</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">-1.05</td>
<td class="gt_row gt_left">Control</td>
<td class="gt_row gt_left">N08002</td>
<td class="gt_row gt_right">9</td>
<td class="gt_row gt_right">264</td>
<td class="gt_row gt_left">male</td>
<td class="gt_row gt_right">25</td>
<td class="gt_row gt_left">Primary (1-5y)</td>
<td class="gt_row gt_right">152.15</td>
<td class="gt_row gt_left">Food Secure</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">10</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-1.26</td>
<td class="gt_row gt_left">Control</td>
<td class="gt_row gt_left">N08002</td>
<td class="gt_row gt_right">9</td>
<td class="gt_row gt_right">252</td>
<td class="gt_row gt_left">female</td>
<td class="gt_row gt_right">28</td>
<td class="gt_row gt_left">Primary (1-5y)</td>
<td class="gt_row gt_right">140.25</td>
<td class="gt_row gt_left">Food Secure</td>
<td class="gt_row gt_right">3</td>
<td class="gt_row gt_right">5</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right">-0.59</td>
<td class="gt_row gt_left">Control</td>
<td class="gt_row gt_left">N06531</td>
<td class="gt_row gt_right">9</td>
<td class="gt_row gt_right">336</td>
<td class="gt_row gt_left">female</td>
<td class="gt_row gt_right">19</td>
<td class="gt_row gt_left">Secondary (&gt;5y)</td>
<td class="gt_row gt_right">150.95</td>
<td class="gt_row gt_left">Food Secure</td>
<td class="gt_row gt_right">2</td>
<td class="gt_row gt_right">7</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
</tr>
<tr class="even">
<td class="gt_row gt_right">-0.51</td>
<td class="gt_row gt_left">Control</td>
<td class="gt_row gt_left">N06531</td>
<td class="gt_row gt_right">9</td>
<td class="gt_row gt_right">304</td>
<td class="gt_row gt_left">male</td>
<td class="gt_row gt_right">20</td>
<td class="gt_row gt_left">Secondary (&gt;5y)</td>
<td class="gt_row gt_right">154.20</td>
<td class="gt_row gt_left">Severely Food Insecure</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">3</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">0</td>
<td class="gt_row gt_right">1</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="step-1-specify-outcome-and-predictors" class="level1">
<h1>Step 1: Specify outcome and predictors</h1>
<p>We need the columns for the outcome and predictors to be specified as strings.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">outcome <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whz"</span></span>
<span id="cb9-2">covars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> washb_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>whz) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>()</span></code></pre></div>
</div>
</section>
<section id="step-2-make-an-sl3-task" class="level1">
<h1>Step 2: Make an sl3 task</h1>
<p>This is the object we’ll use whenever we want to fit a statistical model in <code>sl3</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">washb_task <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_sl3_Task</span>(</span>
<span id="cb10-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> washb_data,</span>
<span id="cb10-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariates =</span> covars,</span>
<span id="cb10-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outcome =</span> outcome</span>
<span id="cb10-5">)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in process_data(data, nodes, column_names = column_names, flag = flag, : Character covariates found: tr, fracode, sex, momedu, hfiacat;
Converting these to factors</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in process_data(data, nodes, column_names = column_names, flag = flag, :
Missing covariate data detected: imputing covariates.</code></pre>
</div>
</div>
<p>Note that we can’t have missing data in most statistical learning algorithms, so <code>sl3</code>’s default pre-processing imputes at the median and adds a column for missingness (in case the missingness is informative).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">washb_task</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>An sl3 Task with 4695 obs and these nodes:
$covariates
 [1] "tr"              "fracode"         "month"           "aged"           
 [5] "sex"             "momage"          "momedu"          "momheight"      
 [9] "hfiacat"         "Nlt18"           "Ncomp"           "watmin"         
[13] "elec"            "floor"           "walls"           "roof"           
[17] "asset_wardrobe"  "asset_table"     "asset_chair"     "asset_khat"     
[21] "asset_chouki"    "asset_tv"        "asset_refrig"    "asset_bike"     
[25] "asset_moto"      "asset_sewmach"   "asset_mobile"    "delta_momage"   
[29] "delta_momheight"

$outcome
[1] "whz"

$id
NULL

$weights
NULL

$offset
NULL

$time
NULL</code></pre>
</div>
</div>
<section id="an-aside-exploring-sl3s-many-options" class="level2">
<h2 class="anchored" data-anchor-id="an-aside-exploring-sl3s-many-options">An aside: Exploring <code>sl3</code>’s many options</h2>
<p>There’s a ton of different aspects of model fitting <code>sl3</code> has the capabilities to address. For example, we can look into algorithms for when the outcome is binomial, categorical, or continuous. There are also options for when you have clustered data, or if you need to preprocess/screen your data before implementing base learners.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sl3_list_properties</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] "binomial"      "categorical"   "continuous"    "cv"           
 [5] "density"       "h2o"           "ids"           "importance"   
 [9] "offset"        "preprocessing" "sampling"      "screener"     
[13] "timeseries"    "weights"       "wrapper"      </code></pre>
</div>
</div>
<p>We can learn more about each of these properties on this <a href="https://tlverse.org/sl3/reference/index.html">reference page</a>.</p>
</section>
<section id="another-aside-looking-at-available-learners" class="level2">
<h2 class="anchored" data-anchor-id="another-aside-looking-at-available-learners">Another aside: looking at available “learners”</h2>
<p>We’ll need to pick out base learners for our stack, as well as pick a metalearner. Since we are trying to predict z-scores, a continuous variable, let’s look at our potential learners for a continuous variable.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sl3_list_learners</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"continuous"</span>) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] "Lrnr_arima"                     "Lrnr_bartMachine"              
 [3] "Lrnr_bayesglm"                  "Lrnr_bilstm"                   
 [5] "Lrnr_bound"                     "Lrnr_caret"                    
 [7] "Lrnr_cv_selector"               "Lrnr_dbarts"                   
 [9] "Lrnr_earth"                     "Lrnr_expSmooth"                
[11] "Lrnr_ga"                        "Lrnr_gam"                      
[13] "Lrnr_gbm"                       "Lrnr_glm"                      
[15] "Lrnr_glm_fast"                  "Lrnr_glmnet"                   
[17] "Lrnr_grf"                       "Lrnr_gru_keras"                
[19] "Lrnr_gts"                       "Lrnr_h2o_glm"                  
[21] "Lrnr_h2o_grid"                  "Lrnr_hal9001"                  
[23] "Lrnr_HarmonicReg"               "Lrnr_hts"                      
[25] "Lrnr_lightgbm"                  "Lrnr_lstm_keras"               
[27] "Lrnr_mean"                      "Lrnr_multiple_ts"              
[29] "Lrnr_nnet"                      "Lrnr_nnls"                     
[31] "Lrnr_optim"                     "Lrnr_pkg_SuperLearner"         
[33] "Lrnr_pkg_SuperLearner_method"   "Lrnr_pkg_SuperLearner_screener"
[35] "Lrnr_polspline"                 "Lrnr_randomForest"             
[37] "Lrnr_ranger"                    "Lrnr_rpart"                    
[39] "Lrnr_rugarch"                   "Lrnr_screener_correlation"     
[41] "Lrnr_solnp"                     "Lrnr_stratified"               
[43] "Lrnr_svm"                       "Lrnr_tsDyn"                    
[45] "Lrnr_xgboost"                  </code></pre>
</div>
</div>
<p>You’ll notice each learner starts with <code>Lrnr</code> and seems to correspond to a package in <code>R</code>.</p>
</section>
</section>
<section id="step-3-choosing-the-base-learners" class="level1">
<h1>Step 3: Choosing the base learners</h1>
<p>Let’s pick just a few base learners to match the examples in my slides: a random forest, a generalized boosting model, and a generalized linear model. Let’s keep their default parameters for now.</p>
<p><code>make_learner_stack()</code> is an easy way to create a stack of default baselearners. It takes the names of the learners as strings and you’re good to go!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">stack <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_learner_stack</span>(</span>
<span id="cb19-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lrnr_randomForest"</span>, </span>
<span id="cb19-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lrnr_gbm"</span>,</span>
<span id="cb19-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lrnr_glm"</span></span>
<span id="cb19-5">)</span></code></pre></div>
</div>
</section>
<section id="step-4-choose-a-metalearner" class="level1">
<h1>Step 4: Choose a metalearner</h1>
<p>There are many models we can choose from but we’ll keep it simple and use a generalized linear model. We are again using the <code>make_learner()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">metalearner <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_learner</span>(Lrnr_glm)</span></code></pre></div>
</div>
</section>
<section id="step-5-make-a-superlearner-object" class="level1">
<h1>Step 5: Make a superlearner object</h1>
<p>Remember, under-the-hood <code>Lrnr_sl</code> takes the cross-validated predictions from the base models and uses them to predict the true outcome. That prediction model then is used to fit the predictions from base learners fit on the whole data set.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">sl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_learner</span>(Lrnr_sl, </span>
<span id="cb21-2">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">learners =</span> stack,</span>
<span id="cb21-3">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metalearner =</span> metalearner)</span></code></pre></div>
</div>
<p>A superlearner object has different functions built into it, such as <code>train()</code>. We can train our superlearner shell model on the task we made earlier.</p>
</section>
<section id="step-6-train-your-superlearner" class="level1">
<h1>Step 6: Train your superlearner</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">sl_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train</span>(washb_task)</span></code></pre></div>
</div>
</section>
<section id="step-7-examine-the-results-of-the-superlearner" class="level1">
<h1>Step 7: Examine the results of the superlearner</h1>
<section id="examine-coefficients-and-cv-risk" class="level2">
<h2 class="anchored" data-anchor-id="examine-coefficients-and-cv-risk">Examine coefficients and CV-risk</h2>
<p>The default risk is MSE (Mean Squared Error). The coefficients show you how the metalearner decided to weight each base model for the final ensemble.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">sl_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "SuperLearner:"
List of 3
 $ : chr "Lrnr_randomForest_500_TRUE_5"
 $ : chr "Lrnr_gbm_10000_2_0.001"
 $ : chr "Lrnr_glm_TRUE"
[1] "Lrnr_glm_TRUE"
$coefficients
                   intercept Lrnr_randomForest_500_TRUE_5 
                -0.037630882                  0.056299184 
      Lrnr_gbm_10000_2_0.001                Lrnr_glm_TRUE 
                 0.876353346                  0.005369642 

$R
                             intercept Lrnr_randomForest_500_TRUE_5
intercept                    -68.52007                     39.84692
Lrnr_randomForest_500_TRUE_5   0.00000                     21.59036
Lrnr_gbm_10000_2_0.001         0.00000                      0.00000
Lrnr_glm_TRUE                  0.00000                      0.00000
                             Lrnr_gbm_10000_2_0.001 Lrnr_glm_TRUE
intercept                                  40.07621     40.091631
Lrnr_randomForest_500_TRUE_5               14.60067     13.860606
Lrnr_gbm_10000_2_0.001                     10.05776      9.862373
Lrnr_glm_TRUE                               0.00000     -8.642721

$rank
[1] 4

$family

Family: gaussian 
Link function: identity 


$deviance
[1] 4723.324

$aic
[1] 13362.07

$null.deviance
[1] 5000.347

$iter
[1] 2

$df.residual
[1] 4691

$df.null
[1] 4694

$converged
[1] TRUE

$boundary
[1] FALSE

$linkinv_fun
function (eta) 
eta
&lt;environment: namespace:stats&gt;

$link_fun
function (mu) 
mu
&lt;environment: namespace:stats&gt;

$training_offset
[1] FALSE

[1] "Cross-validated risk:"
                        learner coefficients      MSE        se    fold_sd
1: Lrnr_randomForest_500_TRUE_5  0.056299184 1.034798 0.0237462 0.07053924
2:       Lrnr_gbm_10000_2_0.001  0.876353346 1.006393 0.0233679 0.07188694
3:                Lrnr_glm_TRUE  0.005369642 1.021995 0.0238539 0.06474016
4:                 SuperLearner           NA 1.006033 0.0233913 0.07107934
   fold_min_MSE fold_max_MSE
1:    0.9099614     1.165088
2:    0.8753148     1.121065
3:    0.8900577     1.116998
4:    0.8772851     1.119882</code></pre>
</div>
<div class="cell-output-display">

<div id="cptwmtqzfn" style="overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#cptwmtqzfn .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cptwmtqzfn .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cptwmtqzfn .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cptwmtqzfn .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cptwmtqzfn .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cptwmtqzfn .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cptwmtqzfn .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cptwmtqzfn .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cptwmtqzfn .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cptwmtqzfn .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cptwmtqzfn .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cptwmtqzfn .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#cptwmtqzfn .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cptwmtqzfn .gt_from_md > :first-child {
  margin-top: 0;
}

#cptwmtqzfn .gt_from_md > :last-child {
  margin-bottom: 0;
}

#cptwmtqzfn .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cptwmtqzfn .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#cptwmtqzfn .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#cptwmtqzfn .gt_row_group_first td {
  border-top-width: 2px;
}

#cptwmtqzfn .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cptwmtqzfn .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#cptwmtqzfn .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#cptwmtqzfn .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cptwmtqzfn .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cptwmtqzfn .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cptwmtqzfn .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#cptwmtqzfn .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cptwmtqzfn .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cptwmtqzfn .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cptwmtqzfn .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cptwmtqzfn .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cptwmtqzfn .gt_left {
  text-align: left;
}

#cptwmtqzfn .gt_center {
  text-align: center;
}

#cptwmtqzfn .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cptwmtqzfn .gt_font_normal {
  font-weight: normal;
}

#cptwmtqzfn .gt_font_bold {
  font-weight: bold;
}

#cptwmtqzfn .gt_font_italic {
  font-style: italic;
}

#cptwmtqzfn .gt_super {
  font-size: 65%;
}

#cptwmtqzfn .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#cptwmtqzfn .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#cptwmtqzfn .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#cptwmtqzfn .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#cptwmtqzfn .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#cptwmtqzfn .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th">learner</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">coefficients</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">MSE</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">se</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">fold_sd</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">fold_min_MSE</th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th">fold_max_MSE</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center">Lrnr_randomForest_500_TRUE_5</td>
<td class="gt_row gt_right">0.056299184</td>
<td class="gt_row gt_right">1.034798</td>
<td class="gt_row gt_right">0.0237462</td>
<td class="gt_row gt_right">0.07053924</td>
<td class="gt_row gt_right">0.9099614</td>
<td class="gt_row gt_right">1.165088</td>
</tr>
<tr class="even">
<td class="gt_row gt_center">Lrnr_gbm_10000_2_0.001</td>
<td class="gt_row gt_right">0.876353346</td>
<td class="gt_row gt_right">1.006393</td>
<td class="gt_row gt_right">0.0233679</td>
<td class="gt_row gt_right">0.07188694</td>
<td class="gt_row gt_right">0.8753148</td>
<td class="gt_row gt_right">1.121065</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center">Lrnr_glm_TRUE</td>
<td class="gt_row gt_right">0.005369642</td>
<td class="gt_row gt_right">1.021995</td>
<td class="gt_row gt_right">0.0238539</td>
<td class="gt_row gt_right">0.06474016</td>
<td class="gt_row gt_right">0.8900577</td>
<td class="gt_row gt_right">1.116998</td>
</tr>
<tr class="even">
<td class="gt_row gt_center">SuperLearner</td>
<td class="gt_row gt_right">NA</td>
<td class="gt_row gt_right">1.006033</td>
<td class="gt_row gt_right">0.0233913</td>
<td class="gt_row gt_right">0.07107934</td>
<td class="gt_row gt_right">0.8772851</td>
<td class="gt_row gt_right">1.119882</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="look-at-the-predictions" class="level2">
<h2 class="anchored" data-anchor-id="look-at-the-predictions">Look at the predictions</h2>
<p><code>predict()</code> allows you to see what the model predicts on any given task. Here we look at predictions from the same data we trained the superlearner on, so the predicted weight to height z-scores of the first six children in our data set.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">sl_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(washb_task) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -0.6641946 -0.7508882 -0.7014290 -0.7542267 -0.6456398 -0.6791542</code></pre>
</div>
</div>
</section>
</section>
<section id="extras" class="level1">
<h1>Extras</h1>
<ul>
<li><p>Cross validate your entire ensembled superlearner using the cross-validation package <code>origami</code>, written by the same authors as <code>sl3</code>. Or just hold out a testing data set to evaluate performance.</p></li>
<li><p>Use <code>make_learner()</code> to customize the tuning parameters of your base learners or metalearner. Ex: <code>lrnr_RF_200trees &lt;- make_lrnr(Lrnr_randomForest, ntree = 200)</code></p></li>
<li><p>Add many layers to your superlearner and organize it into a “pipeline”</p></li>
</ul>
<p><strong>For more demos, check out the following teaching materials from the authors of <code>sl3</code>.</strong> My tutorial uses one of their example data sets in case you’d like to extend your learning via their training resources.</p>
<ul>
<li><p>https://tlverse.org/tlverse-handbook/ensemble-machine-learning.html</p></li>
<li><p>https://tlverse.org/acic2019-workshop/ensemble-machine-learning.html</p></li>
<li><p>https://github.com/tlverse/sl3_lecture</p></li>
</ul>


</section>

 ]]></description>
  <category>programming</category>
  <guid>www.khstats.com/blog/sl/sl.html</guid>
  <pubDate>Fri, 13 Sep 2019 02:13:14 GMT</pubDate>
  <media:content url="www.khstats.com/img/sl3/sl_talk_screenshot.png" medium="image" type="image/png" height="80" width="144"/>
</item>
<item>
  <title>Tips and Tricks from the 2019 New York R Conference</title>
  <dc:creator>Katherine Hoffman</dc:creator>
  <link>www.khstats.com/blog/nyrconf/index.html</link>
  <description><![CDATA[ 




<p>My favorite takeaways from attending the 2019 New York R Conference.</p>
<!--more-->
<p><strong><em>June 6, 2019.</em></strong></p>
<p>In early May I attended the <a href="https://www.rstats.nyc/">New York R Conference</a>. There were 24 speakers, including my coworker at Weill Cornell Medicine, Elizabeth Sweeney! Each person did a 20-minute presentation on some way they use R for their work and/or hobbies. There was a <em>ton</em> of information, and even though not all of it was directly useful for my workflow as a statistical consultant in an academic setting, I really enjoyed being around so many people who love R.</p>
<p>I’ve linked some videos of my favorite talks and put together some the topics/packages/functions I found most intriguing or useful in my day-to-day work as a research biostatistician. (This was originally a presentation for my <a href="https://wcm-computing-club.github.io/">biostatistics team’s computing club</a>.)</p>
<section id="visualizing-data-with-naniar" class="level1">
<h1>Visualizing data with <code>naniar</code></h1>
<p>Brooke Watson, a data scientist at the American Civil Liberties Union, gave a great presentation on how she uses R to defend immigrants. She shared several data wrangling tips. One new function for me was <code>naniar::vis_miss()</code> to visualize your missing data quickly.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages("tidyverse")</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages("naniar")</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(naniar)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vis_miss</span>(airquality) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a base R data set</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="www.khstats.com/blog/nyrconf/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>It returns a <code>ggplot2</code> object so you can edit titles, colors, etc. if necessary. You can also add various sorting and clustering arguments to make it easier to see patterns of missingness in your data.</p>
</section>
<section id="checking-out-data-differences-with-daff" class="level1">
<h1>Checking out data differences with <code>daff</code></h1>
<p>Brooke also gave a demo for a neat package to check if and where differences in two data sets are occurring.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages("daff)</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(daff)</span>
<span id="cb2-3">dat1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">B =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(T,F,T))</span>
<span id="cb2-4">dat2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span>))</span>
<span id="cb2-5">my_diff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff_data</span>(dat1, dat2)</span>
<span id="cb2-6">my_diff</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Daff Comparison: 'dat1' vs. 'dat2' 
      +++    ---  
@@  A C      B    
+   1 apple  TRUE 
    2 &lt;NA&gt;   FALSE
    3 &lt;NA&gt;   TRUE 
+++ 4 banana &lt;NA&gt; </code></pre>
</div>
</div>
<p>I thought this would be useful for when you receive new data sets and want to make sure column names, patients, etc. haven’t changed. Check out the full documentation <a href="https://github.com/edwindj/daff">here</a>.</p>
</section>
<section id="gohelverse" class="level1">
<h1>Gohelverse</h1>
<p>Noam Ross shared code for editable figures using David Gohel’s <code>officer</code> and <code>rvg</code> packages. I shared some <a href="https://github.com/kathoffman/reporting/blob/master/vg.R">example code</a> for my team on github after I saw him present it at an R-Ladies event in the fall. Essentially you can run some pretty simple lines of code to output figures (base R, <code>ggplot2</code>, or otherwise) as editable figures in Powerpoint. Noam reminded us that whoever you give these figures to will now be able to edit <em>anything</em>, even data points, so keep that in mind before you freely give away editable figures… :)</p>
</section>
<section id="going-from-rmarkdown-to-word-and-back-again-with-redoc" class="level1">
<h1>Going from RMarkdown to Word, and back again with <code>redoc</code></h1>
<p>Noam also shared his new package, <code>redoc</code>, which allows you to reload an Rmd-generated word file back into R as a modified Rmd file.</p>
<p><img src="www.khstats.com/blog/nyrconf/redoc.png" class="img-fluid"></p>
<p>This is part of his goal to decrease the pain of “the valley of heartbreak.” <img src="www.khstats.com/blog/nyrconf/valleyofheartbreak.jpg" class="img-fluid"></p>
<p>Installation command is:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#remotes::install_github("noamross/redoc")</span></span></code></pre></div>
</div>
<p>You may need to update several packages to get it to run correctly, but after that the main commands are just <code>redoc</code> and <code>dedoc</code>. To see for yourself, try running my <a href="https://github.com/kathoffman/nyr-conf-comp-club/blob/master/redoc_example.Rmd">github code</a>, making some changes to your word doc, and reloading back into Rmarkdown with the <code>dedoc()</code> function.</p>
</section>
<section id="pipelines-in-drake" class="level1">
<h1>Pipelines in <code>drake</code></h1>
<p><img src="www.khstats.com/blog/nyrconf/drake.jpg" class="img-fluid"></p>
<p>This could definitely be an entire computing club presentation… but for long projects that you have to redo with new data often, <code>drake</code> is becoming really popular. Amanda Dobbyn gave an awesome presentation and you can see her slides <a href="https://aedobbyn.github.io/nyr-2019/#1">here</a>.</p>
<p>A super informative bookdown guide by the authors can be found <a href="https://ropenscilabs.github.io/drake-manual/">here</a>. Essentially their motto is “what gets done stays done” so that you are not redoing work you’ve already done in order to update your results. Yet, you’re still redoing what needs to be done in a reproducible way!</p>
<p><img src="www.khstats.com/blog/nyrconf/drake_pipeline.png" class="img-fluid"></p>
</section>
<section id="git-merge-conflicts" class="level1">
<h1>Git merge conflicts</h1>
<p>I went to a whole-day workshop on Git so if you’re interested in talking more about this let me know. <em>BUT</em> the biggest thing I learned was that if you are ever using Git and find your code has strange characters like &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; HEAD followed by ======== and a long set of letters/numbers, this means you have a merge conflict. It’s meant to be a flag so you know where to fix the differences in your two files you’re trying to version control! I spent days struggling with this problem before, so I thought I’d pass the message along in case anyone runs into it someday. :)</p>
</section>
<section id="talks-to-check-out" class="level1">
<h1>Talks to check out</h1>
<p>Some of my favorite talks from the conference were…</p>
<p>-<a href="https://www.youtube.com/watch?time_continue=4&amp;v=33BzunEXEIE">Emily Robinson’s</a> accessible instructions for how to make a package with <code>usethis</code> <a href="https://www.youtube.com/embed/g2bQJIth1-I">Jaqueline Nolis’</a> <strong>really funny</strong> talk on how neural nets aren’t actually hard at all -<a href="https://www.youtube.com/embed/ZmbrsbYwRWw">Andrew Gelman’s</a> discussion on “solving all your statistical problems with p-values” (but he’s a Bayesian, ha ha)</p>
<!-- # A bonus! -->
<!-- This was not from the New York R Conference but I saw it on [Twitter](https://twitter.com/OppenheimerEvan/status/1132092898760114184) while making this presentation for my computing club and I really enjoyed it... -->
<!-- ```{r} -->
<!-- #install.packages("genius") -->
<!-- library(genius) -->
<!-- genius_lyrics("taylor swift", "all too well") -->
<!-- ``` -->
</section>
<section id="takeaways" class="level1">
<h1>Takeaways</h1>
<ol type="1">
<li><p>You can check out tweets from the conference by searching the hashtag <a href="https://twitter.com/search?q=%23rstatsnyc&amp;src=typed_query">#rstatsnyc</a> on Twitter</p></li>
<li><p>Check out the <a href="https://www.meetup.com/rladies-newyork/">R-Ladies NYC meetups</a> and <a href="https://www.meetup.com/nyhackr/">New York R meetups</a>!</p></li>
</ol>


</section>

 ]]></description>
  <category>programming</category>
  <guid>www.khstats.com/blog/nyrconf/index.html</guid>
  <pubDate>Mon, 10 Jun 2019 04:00:00 GMT</pubDate>
  <media:content url="www.khstats.com/blog/nyrconf/redoc.png" medium="image" type="image/png" height="72" width="144"/>
</item>
</channel>
</rss>
