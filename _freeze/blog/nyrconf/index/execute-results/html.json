{
  "hash": "90ed0f87d1cfac45b3ef8713dd8c6c1c",
  "result": {
    "markdown": "---\ntitle: \"Tips and Tricks from the 2019 New York R Conference\"\nauthor: \"Katherine Hoffman\"\nimage: redoc.png\ndate: 2019-06-10\ncategories: [\"programming\"]\ntags: [\"R Markdown\", \"New York R Conference\", \"rstats\", \"rstatsnyc\"]\nshowonlyimage: false\n---\n\n\n\n\nMy favorite takeaways from attending the 2019 New York R Conference.\n\n<!--more-->\n\n***June 6, 2019.***\n\nIn early May I attended the [New York R Conference](https://www.rstats.nyc/). There were 24 speakers, including my coworker at Weill Cornell Medicine, Elizabeth Sweeney! Each person did a 20-minute presentation on some way they use R for their work and/or hobbies. There was a *ton* of information, and even though not all of it was directly useful for my workflow as a statistical consultant in an academic setting, I really enjoyed being around so many people who love R.\n\nI've linked some videos of my favorite talks and put together some the topics/packages/functions I found most intriguing or useful in my day-to-day work as a research biostatistician. (This was originally a presentation for my [biostatistics team's computing club](https://wcm-computing-club.github.io/).)\n\n# Visualizing data with `naniar`\n\nBrooke Watson, a data scientist at the American Civil Liberties Union, gave a great presentation on how she uses R to defend immigrants. She shared several data wrangling tips. One new function for me was `naniar::vis_miss()` to visualize your missing data quickly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"tidyverse\")\n#install.packages(\"naniar\")\nlibrary(tidyverse)\nlibrary(naniar)\nvis_miss(airquality) # a base R data set\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nIt returns a `ggplot2` object so you can edit titles, colors, etc. if necessary. You can also add various sorting and clustering arguments to make it easier to see patterns of missingness in your data.\n\n# Checking out data differences with `daff`\n\nBrooke also gave a demo for a neat package to check if and where differences in two data sets are occurring.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"daff)\nlibrary(daff)\ndat1 <- data.frame(A = c(1:3), B = c(T,F,T))\ndat2 <- data.frame(A = c(1:4), C = c(\"apple\",NA,NA,\"banana\"))\nmy_diff <- diff_data(dat1, dat2)\nmy_diff\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDaff Comparison: 'dat1' vs. 'dat2' \n      +++    ---  \n@@  A C      B    \n+   1 apple  TRUE \n    2 <NA>   FALSE\n    3 <NA>   TRUE \n+++ 4 banana <NA> \n```\n:::\n:::\n\n\nI thought this would be useful for when you receive new data sets and want to make sure column names, patients, etc. haven't changed. Check out the full documentation [here](https://github.com/edwindj/daff).\n\n# Gohelverse\n\nNoam Ross shared code for editable figures using David Gohel's `officer` and `rvg` packages. I shared some [example code](https://github.com/kathoffman/reporting/blob/master/vg.R) for my team on github after I saw him present it at an R-Ladies event in the fall. Essentially you can run some pretty simple lines of code to output figures (base R, `ggplot2`, or otherwise) as editable figures in Powerpoint. Noam reminded us that whoever you give these figures to will now be able to edit *anything*, even data points, so keep that in mind before you freely give away editable figures... :)\n\n# Going from RMarkdown to Word, and back again with `redoc`\n\nNoam also shared his new package, `redoc`, which allows you to reload an Rmd-generated word file back into R as a modified Rmd file.\n\n![](redoc.png)\n\nThis is part of his goal to decrease the pain of \"the valley of heartbreak.\" ![](valleyofheartbreak.jpg)\n\nInstallation command is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#remotes::install_github(\"noamross/redoc\")\n```\n:::\n\n\nYou may need to update several packages to get it to run correctly, but after that the main commands are just `redoc` and `dedoc`. To see for yourself, try running my [github code](https://github.com/kathoffman/nyr-conf-comp-club/blob/master/redoc_example.Rmd), making some changes to your word doc, and reloading back into Rmarkdown with the `dedoc()` function.\n\n# Pipelines in `drake`\n\n![](drake.jpg)\n\nThis could definitely be an entire computing club presentation... but for long projects that you have to redo with new data often, `drake` is becoming really popular. Amanda Dobbyn gave an awesome presentation and you can see her slides [here](https://aedobbyn.github.io/nyr-2019/#1).\n\nA super informative bookdown guide by the authors can be found [here](https://ropenscilabs.github.io/drake-manual/). Essentially their motto is \"what gets done stays done\" so that you are not redoing work you've already done in order to update your results. Yet, you're still redoing what needs to be done in a reproducible way!\n\n![](drake_pipeline.png)\n\n# Git merge conflicts\n\nI went to a whole-day workshop on Git so if you're interested in talking more about this let me know. *BUT* the biggest thing I learned was that if you are ever using Git and find your code has strange characters like \\>\\>\\>\\>\\>\\>\\>\\> HEAD followed by ======== and a long set of letters/numbers, this means you have a merge conflict. It's meant to be a flag so you know where to fix the differences in your two files you're trying to version control! I spent days struggling with this problem before, so I thought I'd pass the message along in case anyone runs into it someday. :)\n\n# Talks to check out\n\nSome of my favorite talks from the conference were...\n\n\\-[Emily Robinson's](https://www.youtube.com/watch?time_continue=4&v=33BzunEXEIE) accessible instructions for how to make a package with `usethis` [Jaqueline Nolis'](https://www.youtube.com/embed/g2bQJIth1-I) **really funny** talk on how neural nets aren't actually hard at all -[Andrew Gelman's](https://www.youtube.com/embed/ZmbrsbYwRWw) discussion on \"solving all your statistical problems with p-values\" (but he's a Bayesian, ha ha)\n\n<!-- # A bonus! -->\n\n<!-- This was not from the New York R Conference but I saw it on [Twitter](https://twitter.com/OppenheimerEvan/status/1132092898760114184) while making this presentation for my computing club and I really enjoyed it... -->\n\n<!-- ```{r} -->\n\n<!-- #install.packages(\"genius\") -->\n\n<!-- library(genius) -->\n\n<!-- genius_lyrics(\"taylor swift\", \"all too well\") -->\n\n<!-- ``` -->\n\n# Takeaways\n\n1.  You can check out tweets from the conference by searching the hashtag [#rstatsnyc](https://twitter.com/search?q=%23rstatsnyc&src=typed_query) on Twitter\n\n2.  Check out the [R-Ladies NYC meetups](https://www.meetup.com/rladies-newyork/) and [New York R meetups](https://www.meetup.com/nyhackr/)!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}